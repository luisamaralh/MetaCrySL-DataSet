Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.ictseuropesystems.traveldoc-0B06828642837E4235091B6EB6BEDE2CE94BF749EC6516A51EA0A39AF4B5A9EA.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1400)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] decrypt(byte[],byte[])>
		SHA-256: b0a3500464751df5e044ae58a95964a606709b24c9cf3435812fa3d935e6b5f0
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer577)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] getRawKey()>
		SHA-256: 3b3c0bcd7fdd6216ff25fe6d972181b7822dcfeb1ba6648313db68f7a063d20
		Secure: true
	Object:
		Variable: varReplacer1400
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1400)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] decrypt(byte[],byte[])>
		SHA-256: 8811a150890d3c56f20d89e20f6992d9fc70611b18b7c04492e9a92189b90cbd
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1398)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] decrypt(byte[],byte[])>
		SHA-256: cf41d05a5d3cf5f0e6f703c3587b799c675857e1a24a20cbfca60995e977adac
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] getRawKey()>
		SHA-256: 2a5e7a70979d8aecc40526927c78ccb1c007d8bb8babcb9fdf9227494bf3adf9
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1307)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 1c72a8f6087465e9162b218b831c8cb1da3af9f96186fb2988286b257f48f95c
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 52f378e153e52c182217d592c1009e7e48c577514baed8800096b4bab8909038
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: $r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer579)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] getRawKey()>
		SHA-256: bc05eb4e46817a525c711d9f5cd884d3a2a67ea85af76d4fe3bd28d9a0a6d2ea
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = interfaceinvoke $r4.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] getRawKey()>
		SHA-256: 86e2bdadbd28e98546428b1483a8dc60295ed3ff3fbffbfe742a1ac49316a3e4
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] encrypt(byte[],byte[])>
		SHA-256: d84c88669cc7d1f67b33fd2bd5cdbcb9200d691aba2d0997506a1a0c2c583d7
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] decrypt(byte[],byte[])>
		SHA-256: f8754fc2203cd5fbea0f66218d67e9377b5324bb12cf41ee69706e9a99ebcfda
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] decrypt(byte[],byte[])>
		SHA-256: ba017190752a4f013238b836f951e1d6b709e7cc1395f76453db08895c174f44
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1309)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 2956d2821208eff3b246834625635ed352c768773cc2ae1813975cc4ea785eed
		Secure: false
	Object:
		Variable: varReplacer1309
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1309)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 6c49ab513686fd0fc6a6b78b1387842c0b7356e0ba27b02ae9f1cad293ec225d
		Secure: false

Findings in Java Class: com.ictseuropesystems.traveldoc.security.Crypt

	 in Method: byte[] encrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1308, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1309)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1c72a8f6087465e9162b218b831c8cb1da3af9f96186fb2988286b257f48f95c)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1307)


	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1400)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #cf41d05a5d3cf5f0e6f703c3587b799c675857e1a24a20cbfca60995e977adac)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1398)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1399, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 14

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 4
	ConstraintError: 2
=====================================================================
