Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.workstream.squirrel-05D43C3D37C19513E9BE5E32336F26D427BEF4392F3294A032D855C8FABF66D5.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.spec.PBEParameterSpec.PBEParameterSpec( salt iterationCount paramSpec);
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r22
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r22 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer892)
		Method: <com.workstream.authenticate.registration.UsingInternalRegistration: javax.net.ssl.HttpsURLConnection getHttpsConnection(int)>
		SHA-256: 153288eb18ffd1416fa7b7f4803e710223325fd9a9e83d4046dae5f9c3bc282d
		Secure: false
	Object:
		Variable: $r25
		Type: javax.net.ssl.SSLContext
		Statement: $r25 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer890)
		Method: <com.workstream.authenticate.registration.UsingInternalRegistration: javax.net.ssl.HttpsURLConnection getHttpsConnection(int)>
		SHA-256: 8c3b17198fdf3e8c60f68ddf3cb6b81c487f3cb3b42a002bdaa6c086fa89bdc3
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer870)
		Method: <com.workstream.authenticate.registration.UsingInternalRegistration: javax.net.ssl.HttpsURLConnection getHttpsConnection(int)>
		SHA-256: b6f030ca01baad6406f584aea15871bb6bf1c968ed68cba6a01ae05628fdeddf
		Secure: true
	Object:
		Variable: $r6
		Type: javax.net.ssl.KeyManager[]
		Statement: $r6 = virtualinvoke $r4.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: f9d0fbc66afd714352c5cb0aae9792451b21317beff732cb4f03f533f42224f5
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer896)
		Method: <com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: d9ad5fc85fb4fb1c878caa561c0b1a9dfb9eca189c0e4a95dbcf789ff1e831e0
		Secure: false
	Object:
		Variable: r39
		Type: java.security.SecureRandom
		Statement: specialinvoke r39.<java.security.SecureRandom: void <init>()>()
		Method: <com.workstream.authenticate.registration.UsingInternalRegistration: javax.net.ssl.HttpsURLConnection getHttpsConnection(int)>
		SHA-256: d09b19a8ec61885aa12915440bc1be0a2c0cf73523e3401f1dd30c0ecbf6373f
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r4 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r3)
		Method: <com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 6c625e137cabfa7c59da6dc7744de4cadf22be011b35748c2cda6401092924a1
		Secure: true
	Object:
		Variable: $r26
		Type: javax.net.ssl.KeyManager[]
		Statement: $r26 = virtualinvoke $r22.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.workstream.authenticate.registration.UsingInternalRegistration: javax.net.ssl.HttpsURLConnection getHttpsConnection(int)>
		SHA-256: 897cac0938535cb0e636b810adc85922a05ef0b8f1f76db5a25cc54a5e26cb06
		Secure: false

Findings in Java Class: com.workstream.authenticate.registration.UsingInternalRegistration

	 in Method: javax.net.ssl.HttpsURLConnection getHttpsConnection(int)
		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #153288eb18ffd1416fa7b7f4803e710223325fd9a9e83d4046dae5f9c3bc282d)
			First parameter (with value "X509") should be any of {PKIX}
			at statement: $r22 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer892)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r25.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r26, r40, $r27)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r25.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r26, r40, $r27)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8c3b17198fdf3e8c60f68ddf3cb6b81c487f3cb3b42a002bdaa6c086fa89bdc3)
			First parameter (with value "TLSv1.2") should be any of {TLS}
			at statement: $r25 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer890)


Findings in Java Class: com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r6, r10, varReplacer897)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d9ad5fc85fb4fb1c878caa561c0b1a9dfb9eca189c0e4a95dbcf789ff1e831e0)
			First parameter (with value "TLSv1.2") should be any of {TLS}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer896)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 8

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 3
	ConstraintError: 3
=====================================================================
