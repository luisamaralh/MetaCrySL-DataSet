Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.apspdcl.consumerapp-12F8594D8A951BEC8A05F27562975F4D7F6B78AC163A023DF05644F498654E75.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.loopj.android.http.MySSLSocketFactory: java.security.KeyStore getKeystore()>
		SHA-256: d011df71b400b4926b84dec0cad6ffb90a5bd3d26c43a5974bec9e614ef5edf5
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.billdesk.utils.h: java.lang.String c()>
		SHA-256: f39f96f1dd7dfcd6a5c557878bc207e586aa9a8301d41d84a7a70385b53c05f3
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.billdesk.utils.h: java.lang.String c(java.lang.String)>
		SHA-256: e021cc5cbe4f64a0cde5110aa93bf8fa8b477bafdbe440998525eb4fddd94604
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer332)
		Method: <com.billdesk.utils.h: java.lang.String c(java.lang.String)>
		SHA-256: fed07752ffeb3c3ced98d998c153615c33b4c9867030cb2d403a0fb698de19e1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer341, varReplacer342)
		Method: <com.billdesk.utils.h: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: 2c86840fdcd90921f99234bbf164c812c3b9b6292452a27b8e4985b0de361d73
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.billdesk.utils.h: java.lang.String c()>
		SHA-256: 3c858def843d59aedd854bb43b9e0486729f6bedc5064821245629f0cb9889ce
		Secure: true
	Object:
		Variable: varReplacer337
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer337)
		Method: <com.billdesk.utils.h: java.lang.String b(java.lang.String)>
		SHA-256: 1a932fe0130787659909dbe56cc02ac79182b569bb3b46690834825cae24010e
		Secure: false
	Object:
		Variable: varReplacer342
		Type: int
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer341, varReplacer342)
		Method: <com.billdesk.utils.h: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: bd3f54c6be4aff00b4a456cb4088b5fa27e78a94301f4c5058728d86912323c6
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer335, varReplacer336)
		Method: <com.billdesk.utils.h: java.lang.String b(java.lang.String)>
		SHA-256: e45f8fccb29c2a2beeb54b1d4a7a01d2fffa82063102db859696a270697a1d91
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer337)
		Method: <com.billdesk.utils.h: java.lang.String b(java.lang.String)>
		SHA-256: bf437090b5b5eafa01c148d3d2278ffb0f780a3a8ce66bfe9dd155a4123d186f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer330, varReplacer331)
		Method: <com.billdesk.utils.h: java.lang.String c(java.lang.String)>
		SHA-256: d82645f3e8ad01040f845446e0e68f0abd81b02a6215a911ce4e1f5d1eb41d7a
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.billdesk.utils.h: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: 163d721d126490691c0644fa18262a76d7366188ac3646ed1f9c1c114be521f6
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.billdesk.utils.h: java.lang.String c()>
		SHA-256: aafcb1a4afdc06ae6b2432cdd529750e9f44a4bce64ba479bfd321b896355bda
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer340)
		Method: <com.billdesk.utils.h: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: ea082eab40c3f4dba07eb78cd0670871aa275046e31c94ec49b45dcf7b44cb89
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer315)
		Method: <com.billdesk.utils.h: java.lang.String c()>
		SHA-256: 1a3191250be97932c5b80583c79dd916c3c7abb77ea1576c51caf6b49d4dfa0e
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2364)
		Method: <com.loopj.android.http.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 17579f1445496d97573cbe2a1250177ceb5d3171d7103796b6dbeac347e73758
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.billdesk.utils.h: java.lang.String b(java.lang.String)>
		SHA-256: 7a7c42c5e000581cdcf0400ffe5613a28b16b97ba91f77c72eee5a0015ba6e39
		Secure: false
	Object:
		Variable: varReplacer332
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer332)
		Method: <com.billdesk.utils.h: java.lang.String c(java.lang.String)>
		SHA-256: 30d2f0afe376c67714ceb4b1e65f21c44abae00c01fd18e5919d19d1dc77db6f
		Secure: false

Findings in Java Class: com.billdesk.utils.h

	 in Method: java.lang.String c(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer326, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d82645f3e8ad01040f845446e0e68f0abd81b02a6215a911ce4e1f5d1eb41d7a)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer330, varReplacer331)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer332)


	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e45f8fccb29c2a2beeb54b1d4a7a01d2fffa82063102db859696a270697a1d91)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer335, varReplacer336)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer334, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer337)


	 in Method: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #ea082eab40c3f4dba07eb78cd0670871aa275046e31c94ec49b45dcf7b44cb89)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer340)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #2c86840fdcd90921f99234bbf164c812c3b9b6292452a27b8e4985b0de361d73)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer341, varReplacer342)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #2c86840fdcd90921f99234bbf164c812c3b9b6292452a27b8e4985b0de361d73)
			Third parameter (with value 2000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer341, varReplacer342)


Findings in Java Class: com.loopj.android.http.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2365, r5, varReplacer2365)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2365, r5, varReplacer2365)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 18

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	ConstraintError: 4
	RequiredPredicateError: 8
=====================================================================
