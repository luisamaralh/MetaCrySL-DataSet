Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.senseu.app-0B1E93A0575E010E4E46F5AB55C7F7E23C4CE8361F72117D6C045EB11ECF187B.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <cn.jpush.android.util.a: java.lang.String b(java.lang.String)>
		SHA-256: 8e4d3ce3f6a3961627a164a718666216cbb71ad4d5d8d2a6bc5f52f33a56ba40
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r6, $i0, $i1)
		Method: <com.sina.weibo.sdk.utils.AidTask: java.lang.String encryptRsa(java.lang.String,java.lang.String)>
		SHA-256: 6231d677a58346b93ae4827c3807ee04a717c38ebcd8a071789221fab4f16d51
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4625)
		Method: <com.tencent.map.b.j: java.lang.String a(java.lang.String)>
		SHA-256: 104f92f165ba213f74be1523e8142d1ddb18b0b09a6c9767ffe762ebbcba8542
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8156)
		Method: <com.tencent.bugly.proguard.H: byte[] b(byte[])>
		SHA-256: 670074b03fb0d4053ef08332148da4e5b9dd9a027655f6f8aed1bb61a7679ae0
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <cn.jpush.android.util.ai: java.lang.String b(java.lang.String)>
		SHA-256: 589f10f65a2d04fe4b0bb06abf8101daf047c6762569191c753224ee717411cc
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.service.n: int a()>
		SHA-256: a023cbedd15aeb08d4597292c13371032fd0867070577fd2b53e53fff5b500ca
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.tencent.open.utils.HttpUtils: org.apache.http.client.HttpClient getHttpClient(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 20492e4fb32e47e28a7ead4d25141df0a45263484a75ab23a7f3a5178dcc300c
		Secure: true
	Object:
		Variable: varReplacer8169
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8169)
		Method: <com.tencent.bugly.proguard.G: byte[] b(byte[])>
		SHA-256: ff59e03b9c6d990f53ca2b7f578a2e3b16e5fcb1eaa67dcb2192cd379be1a402
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8256)
		Method: <com.tencent.bugly.proguard.H: byte[] a(byte[])>
		SHA-256: 78fd526366c48d61b6f2dbe09f6b4a9cd5b6a87ba22c26a2d526502284cfddcd
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.map.b.j: java.lang.String a(java.lang.String)>
		SHA-256: db395b22ced56c5ca633af477c861f58a097b1af3e802f766964c415de885445
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.proguard.G: byte[] a(byte[])>
		SHA-256: 1b14969e783f50655d3bd517cc82f9c4f0fd3a29a3e8d224d34ce476f69fcf6d
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5389)
		Method: <com.amap.api.mapcore.util.aa: java.lang.String d(android.content.Context)>
		SHA-256: 3a38af6d47deccbb0e9cc64ba53474c678d75bc60c55e92c045e1021796e208d
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r3.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.amap.api.mapcore.util.ac: java.lang.String c(android.content.Context,byte[])>
		SHA-256: 2472aefda38552dc0f4055d2972c26b41e8abea31e51e01e8293a5dd7f550933
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5247)
		Method: <com.amap.api.mapcore.util.ae: byte[] a(byte[],java.security.Key)>
		SHA-256: e3cb60176229773dff121e66c4fd958e7361d4fcfa3565179d959d4f13e25340
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String)>
		SHA-256: 67f8276464ff2b603934593edfd3991f3b602712d92e93712f83733b7783915
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.sina.weibo.sdk.utils.MD5: java.lang.String hexdigest(byte[])>
		SHA-256: 16aa4c15dca4d2c82517c55b108c61e0c5de7c3d017811cd36da0633c8165603
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.amap.api.mapcore.util.ac: java.lang.String c(android.content.Context,byte[])>
		SHA-256: 389c07dc610e9470c8bbaee59735ccb0e4e113470448f046bbf75e4a029f4fbc
		Secure: true
	Object:
		Variable: varReplacer5451
		Type: java.lang.String
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5451)
		Method: <com.amap.api.mapcore.util.ae: byte[] b(byte[],byte[])>
		SHA-256: 6c13ed4229287ac82ca69dc5e720f01a72b3e7a930286b813b87a1edc3c71559
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r6, $i0, $i1)
		Method: <com.sina.weibo.sdk.utils.AidTask: java.lang.String encryptRsa(java.lang.String,java.lang.String)>
		SHA-256: d2a1354d23d4474f7b0b87ca60a309fac7b03735277eb00bde8a2df7d932081c
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(byte[])>
		SHA-256: edf8d4512ea4d685450853f37af1c60bdb4661ea96e0a8476dfe9d41f4bd92a
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8261)
		Method: <com.tencent.bugly.proguard.G: byte[] a(byte[])>
		SHA-256: 78a34fa45d42f035ce88bc5bbe8ec7387f45f27be2a6c16db8ace57e6bb2127d
		Secure: false
	Object:
		Variable: varReplacer10149
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer10149)
		Method: <com.sina.weibo.sdk.utils.AesEncrypt: java.security.Key generateKey(java.lang.String)>
		SHA-256: d65d6fb25807b49172103e154c0c596147fec4d47a98c4b5c1186f901c2417af
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.sina.weibo.sdk.utils.AesEncrypt: java.lang.String Decrypt(java.lang.String)>
		SHA-256: 894759b2db79125b4010be47049f0303bbed9cfe8bd8fa5012f5b950a7f70f5e
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8260)
		Method: <com.tencent.bugly.proguard.G: byte[] a(byte[])>
		SHA-256: 88b4f7eb7ad6fabc54c31c4571a69f6f08b2da9badb46abbc6d73bed45f60066
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9456)
		Method: <com.tencent.bugly.proguard.a: java.lang.String c(byte[])>
		SHA-256: 7635b18e9debf724f45920d4c3a5ffd077fa8a5d9dee5642d4f7814578c92148
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5794)
		Method: <com.tencent.open.utils.HttpUtils$CustomSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: e99ca4a0a9c73dab604dac4c31b4bce74baec7aabd0279af8cf221856fca1660
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8169)
		Method: <com.tencent.bugly.proguard.G: byte[] b(byte[])>
		SHA-256: 96dd1797549cb314886a0602700114d0502c2e81ba86101a00f89d6ff286cca2
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.tencent.bugly.proguard.H: byte[] a(byte[])>
		SHA-256: 206b4963140b17abac96861a36b9d2bee2e80bfd0be442b7244586e8f24c8e25
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5458)
		Method: <com.amap.api.mapcore.util.af: byte[] e(java.lang.String)>
		SHA-256: 4fa159576b338f7c6be022b901c5e4dc927b3f2226cc3b9dd8d89ca2ef0f3e0a
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.tencent.bugly.proguard.H: byte[] b(byte[])>
		SHA-256: af73d191f04fe76a3c80ddd9c6d7afb7b255a38fa62b970666b8234f23f01145
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <cn.jpush.android.service.n: int a()>
		SHA-256: 16d7cd6aa4087b031a907b24534a6a500be48b38a3f079a76545d42f020f7354
		Secure: true
	Object:
		Variable: varReplacer8260
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8260)
		Method: <com.tencent.bugly.proguard.G: byte[] a(byte[])>
		SHA-256: 6ca1f1df848e02acfc9053da6ee32a82f4778c91c8a2299ec5216c002c4580b9
		Secure: false
	Object:
		Variable: r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5451)
		Method: <com.amap.api.mapcore.util.ae: byte[] b(byte[],byte[])>
		SHA-256: ed1933a6d0a814444c09d8af2738caad37949ed5d8179405fbe265b7c2a2d94a
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8160)
		Method: <com.tencent.bugly.proguard.H: byte[] b(byte[])>
		SHA-256: d809063e8f98364735e6e903ee132e3780b23e9193198588cf90af1ff4ed6ac1
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.tencent.bugly.proguard.H: byte[] a(byte[])>
		SHA-256: 80036ccae0362268b16dd4497906104c1e7454942f99af3c6bbc930a9d7c3571
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.proguard.H: byte[] b(byte[])>
		SHA-256: ee76d2bfe9bfb0e0cb94119aaa1d667dfd06540ffafedff71218aae2fa638f2f
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.mapcore.util.ae: byte[] b(byte[],byte[])>
		SHA-256: 9f2ecbcf0ee8886570e73aedaf73524fe8fadcea7811ef0d9ef99da1547b845b
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2765)
		Method: <com.sina.weibo.sdk.utils.MD5: java.lang.String hexdigest(byte[])>
		SHA-256: 41fc02d7fbaf448c56ae51e050affc26a900b4ce0509734f53454192ae14fca8
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5452)
		Method: <com.amap.api.mapcore.util.ae: byte[] b(byte[],byte[])>
		SHA-256: cf411f6d27aee4dbfa0a97677424d46a175054cd48d4c876a3f4cd509a7f06e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2652)
		Method: <com.sina.weibo.sdk.net.SSLSocketFactoryEx: void <init>(java.security.KeyStore)>
		SHA-256: 23c7881e1b9c8a96ede4ff6d1fc481da5fd0d82b3a85fc88dd498b46fc1a41ef
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.tencent.bugly.proguard.H: byte[] b(byte[])>
		SHA-256: 7cbd5d5d94f52e4331a8dca3938b3018a489aa8f58fb370c08b421666674c8e3
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.amap.api.mapcore.util.aa: java.lang.String d(android.content.Context)>
		SHA-256: f56c0243c3796e54442631f6acf94acbd3f2395f621144e36b05234a4bcbdd81
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String)>
		SHA-256: bfdf7a7690f99313d7d90ffe799c08accc3face2ec5e8c2f9d6c2ccbb3a7f821
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.sina.weibo.sdk.net.HttpManager: org.apache.http.conn.ssl.SSLSocketFactory getSSLSocketFactory()>
		SHA-256: 69839fb2317ad945c0b4b9ffb83d9288ad7e5826dc1c6ada88da2e60e8afceaf
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.tencent.bugly.proguard.G: byte[] b(byte[])>
		SHA-256: 7782097f1055b534e6d44451764bbb10690c9bff58e0be87a9fe2845542e39e4
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer10149)
		Method: <com.sina.weibo.sdk.utils.AesEncrypt: java.security.Key generateKey(java.lang.String)>
		SHA-256: 4e2c24b84b587a160b0f883569003696239c2a812b77877109071ca4e3230353
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <cn.jpush.android.util.a: java.lang.String a(byte[])>
		SHA-256: c4d4007881f660d31095047c858a7cddf0ade719a9b3b9bb76358ae5434d949b
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.mapcore.util.ae: byte[] b(byte[],byte[])>
		SHA-256: d5fc6a00628c92493961aa46e24d2ff45caf80798b927c9cbb038e6af52f14f6
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.proguard.H: byte[] a(byte[])>
		SHA-256: 5b930072ad5d1b3ed7c071611f426825e983b472eb593477709e101538243fa1
		Secure: false
	Object:
		Variable: r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.amap.api.mapcore.util.ae: byte[] b(byte[],byte[])>
		SHA-256: 843224542b8045866e2b201d3cf573220816f10246ae7402275589ce305416e0
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8168)
		Method: <com.tencent.bugly.proguard.G: byte[] b(byte[])>
		SHA-256: 8826cfd327d0f295c4d0dbbff0a41bd2be55477458e05193864b221f45205895
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.proguard.G: byte[] b(byte[])>
		SHA-256: 73f75e94dd18c8e60393fab7a10f7972581160a9f6bae754fd386d4cacec499
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.tencent.bugly.proguard.G: byte[] a(byte[])>
		SHA-256: 896348da707dd1822855f5e5b10c716bff1dc73b7431e5a4c37c0dc968480211
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10117)
		Method: <com.sina.weibo.sdk.utils.AesEncrypt: java.lang.String Decrypt(java.lang.String)>
		SHA-256: cc1e42406967efa6c5390d93124bde58c112c1eea89381b5cb277a9cad956534
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.open.utils.Util: boolean a(android.content.Context)>
		SHA-256: a270ad1e474c7014c22f8189d40a6ed8de9e6ca6418b6f9a16de8aea80cdb347
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8259)
		Method: <com.tencent.bugly.proguard.H: byte[] a(byte[])>
		SHA-256: b3c61cbaf53b3b84f95c8ad54c2dbf3f4b408fee958a191f8288c75a1160d85a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5799)
		Method: <com.tencent.open.utils.HttpUtils$MyX509TrustManager: void <init>()>
		SHA-256: 24d16f78a2a1ff94d19fa106792b594c99265322a79c747cba9ee14937db78d4
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.bugly.proguard.a: java.lang.String c(byte[])>
		SHA-256: ff0d77755436d914fb56b3a2f634c3ad31326ca70bf4b6e2956b7ac053abda15
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.a: java.lang.String b(java.lang.String)>
		SHA-256: f5d4bf9ca7f7fb9000cf6a89dae134f0d93e52312b490bf6d8a3635e0c274af1
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer5376)
		Method: <com.amap.api.mapcore.util.ac: java.lang.String c(android.content.Context,byte[])>
		SHA-256: 7386687576c6402ff4c8762aa55567c830f097bbd8c896d3bf637be0090ba700
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10192)
		Method: <com.sina.weibo.sdk.utils.AidTask: java.lang.String encryptRsa(java.lang.String,java.lang.String)>
		SHA-256: b109c696cfc7db34ab57e1846fe2564ffa1305d74537f9c6f4c46432bb77880e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amap.api.mapcore.util.af: byte[] e(java.lang.String)>
		SHA-256: 92b4774bded19ea50d02608588a010229f25214f28a8e9a0b442768cebd56e74
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.ai: java.lang.String b(java.lang.String)>
		SHA-256: e3190b6f4323befbf18670a0eb10cd2790133ea7e985cb6f92d999f647f560e9
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7139)
		Method: <com.tencent.open.utils.Util: boolean a(android.content.Context)>
		SHA-256: 21d93c3cacc375cc25086dd9be81c1ce59fcf3f0c2bc01ad3566b654af501427
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <cn.jpush.android.util.g: byte[] a(java.io.File)>
		SHA-256: c674f616d8a4149c10b3f91dfa9584390dcb6804f11b69608665967bac43ce50
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.g: byte[] a(java.io.File)>
		SHA-256: 9d5518b928395bd05bce5b6b363adfca98533751c6f8b6369158fc7086bf8946
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amap.api.mapcore.util.ae: byte[] a(byte[],java.security.Key)>
		SHA-256: 7118cedcd1272beec6441677092e34eca25d1e26247df61777ff03f1cbe575ec
		Secure: false

Findings in Java Class: cn.jpush.android.util.g

	 in Method: byte[] a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #c674f616d8a4149c10b3f91dfa9584390dcb6804f11b69608665967bac43ce50)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.amap.api.mapcore.util.ac

	 in Method: java.lang.String c(android.content.Context,byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyGenerator (on Object #7386687576c6402ff4c8762aa55567c830f097bbd8c896d3bf637be0090ba700)
			Operation on object of type javax.crypto.KeyGenerator object not completed. Expected call to generateKey, init
			at statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer5376)


Findings in Java Class: com.amap.api.mapcore.util.aa

	 in Method: java.lang.String d(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3a38af6d47deccbb0e9cc64ba53474c678d75bc60c55e92c045e1021796e208d)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5389)


Findings in Java Class: com.tencent.open.utils.HttpUtils$MyX509TrustManager

	 in Method: void <init>()
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #24d16f78a2a1ff94d19fa106792b594c99265322a79c747cba9ee14937db78d4)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r1 = null

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #24d16f78a2a1ff94d19fa106792b594c99265322a79c747cba9ee14937db78d4)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: virtualinvoke $r6.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #24d16f78a2a1ff94d19fa106792b594c99265322a79c747cba9ee14937db78d4)
			First parameter (with value "JKS") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5799)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #24d16f78a2a1ff94d19fa106792b594c99265322a79c747cba9ee14937db78d4)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5799)


Findings in Java Class: com.tencent.bugly.proguard.H

	 in Method: byte[] b(byte[])
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #670074b03fb0d4053ef08332148da4e5b9dd9a027655f6f8aed1bb61a7679ae0)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8156)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d809063e8f98364735e6e903ee132e3780b23e9193198588cf90af1ff4ed6ac1)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES, DESede, RSA}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8160)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8158, $r7, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8158, $r7, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


	 in Method: byte[] a(byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #78fd526366c48d61b6f2dbe09f6b4a9cd5b6a87ba22c26a2d526502284cfddcd)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES, DESede, RSA}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8256)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8258, $r7, $r8)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #b3c61cbaf53b3b84f95c8ad54c2dbf3f4b408fee958a191f8288c75a1160d85a)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8259)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)


Findings in Java Class: com.sina.weibo.sdk.utils.AidTask

	 in Method: java.lang.String encryptRsa(java.lang.String,java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #b109c696cfc7db34ab57e1846fe2564ffa1305d74537f9c6f4c46432bb77880e)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r6, $i0, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer10188, $r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b109c696cfc7db34ab57e1846fe2564ffa1305d74537f9c6f4c46432bb77880e)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r6, $i0, $i1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b109c696cfc7db34ab57e1846fe2564ffa1305d74537f9c6f4c46432bb77880e)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters), javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec), update, javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.cert.Certificate), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom), wrap, doFinal
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer10188, $r4)


Findings in Java Class: com.amap.api.mapcore.util.ae

	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5455, $r7, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5455, $r7, $r6)


	 in Method: byte[] a(byte[],java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5248, $r1)


Findings in Java Class: com.sina.weibo.sdk.net.SSLSocketFactoryEx

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2653, r6, varReplacer2653)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2653, r6, varReplacer2653)


Findings in Java Class: com.tencent.bugly.proguard.G

	 in Method: byte[] b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8165, $r5, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8165, $r5, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8169)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8260)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8265, $r5, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)


Findings in Java Class: com.sina.weibo.sdk.utils.AesEncrypt

	 in Method: java.security.Key generateKey(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer10149)


	 in Method: java.lang.String Decrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer10114, $r5)


Findings in Java Class: com.tencent.open.utils.HttpUtils$CustomSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5795, r7, varReplacer5795)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5795, r7, varReplacer5795)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 67

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 6
	RequiredPredicateError: 25
	TypestateError: 2
	IncompleteOperationError: 6
=====================================================================
