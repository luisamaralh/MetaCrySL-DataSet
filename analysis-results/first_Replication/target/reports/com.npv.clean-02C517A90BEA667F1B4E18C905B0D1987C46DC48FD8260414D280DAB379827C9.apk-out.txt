Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.npv.clean-02C517A90BEA667F1B4E18C905B0D1987C46DC48FD8260414D280DAB379827C9.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9783)
		Method: <u.aly.dh: java.lang.String b(java.lang.String)>
		SHA-256: 59f67910948a8887f228fee9ebeafc11b6fde0ebf93302d7f46ebd1c7fc15fff
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1907)
		Method: <com.mobpower.common.g.f: java.lang.String b(java.lang.String,java.lang.String)>
		SHA-256: be838cf429c55883e7a31f32b920436b08928c1dd9f58dfc296adbac9e080a61
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11087)
		Method: <com.mobpower.common.g.f: java.lang.String b(java.lang.String)>
		SHA-256: 6e12b657633d8cf724d6c932c00ff901ca007bb749d7d684482ac781bd813a32
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.virgo.ads.internal.c.f: java.lang.String a(byte[])>
		SHA-256: c18d3f24ef5c577b76bb0bb6f4d25c854c5814d291e6b0a4644b5eefb972c5ba
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3973)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: f370d0c93fcc0ee0085a80bc87379981c1c8e9aef49be1352c714fe085b14192
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobpower.common.g.f: java.lang.String a(java.lang.String)>
		SHA-256: 9c415df7a8795f09a7c84712adb6a9d47bdeab0ff98242a60bcc8fa99c39be8
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.m.bd: java.lang.String a(java.lang.String)>
		SHA-256: fbf7b98904cef0ba810e94f682f50128654a2cf52357dd64bcc7d25fab646d8d
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: 8407a152a750198a9cecc8c173b46fb5748136d260fe6f5fbe4a174451640e66
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.virgo.ads.internal.c.f: int k(android.content.Context)>
		SHA-256: 835a9818fe1f5b01701ea77e575afdd61252e4af93287fcfeabac3e148c5268a
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.mobpower.probe.b.b.b.a$a: byte[] b(java.lang.String,byte[])>
		SHA-256: 5f046f81b48ed8f448416f6edb7bd68a886dfb11ae24f779c9ccb87593bea77b
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer6739)
		Method: <com.mobpower.probe.b.b.b.a$a: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 7d52730c76d3f26145998fa359ca00df6e5fa1ca70917e25acd27cfc2a0b3e58
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.dh: java.lang.String a(java.lang.String)>
		SHA-256: 58a91bf55b421078b7c4cf2c4f93c86ee11ea3a6c9f711bbb318c46a714f77d6
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1227)
		Method: <com.virgo.ads.internal.c.f: java.lang.String c(android.content.Context)>
		SHA-256: 49092c73ee0baf8713afcb5299d370f246380de08ea400dd1b851f5b7eda736
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2448)
		Method: <com.mobpower.common.g.f: java.lang.String a(java.lang.String)>
		SHA-256: 3be8170ceb61f8fd982c47ccb1ccaaec37cabc082ae376edf030637c87ba50c0
		Secure: true
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8936)
		Method: <com.virgo.ads.internal.a.d: javax.net.ssl.SSLSocketFactory a()>
		SHA-256: c179724425895a41969b175be469721282834e36445ccbc6ea2d7407088b44a3
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.mobpower.probe.b.b.b.a$a: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 84b8754a83ef13c585a0371a0aabe7ac8b6f55a3dd901a697f17b7f3bb4204dc
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobpower.common.g.f: java.lang.String d(java.lang.String)>
		SHA-256: 40008d2c2a71eb5661e71e5e6eca9870f097e72cbae996f6b38c31d20ac3ecbb
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.mobpower.probe.b.b.b.a$a: java.lang.String a(java.lang.String,byte[])>
		SHA-256: e6d03eae001b565123aaeae9345f5185edc9c57c5a8f2b78e1b9a9af299abc45
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.virgo.ads.internal.c.f: java.lang.String a(java.io.File)>
		SHA-256: 203fb961dc9f45688dde42f6999376b29e5879462fcd459d39555dc4433baed8
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <u.aly.dg: java.lang.String s(android.content.Context)>
		SHA-256: 2e9d0a7f7cce00dc52377646ba789fe13e3095224b2eb25c892a2e3d671aae75
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <com.virgo.ads.internal.a.d: java.security.KeyStore a(android.content.Context,java.lang.String)>
		SHA-256: 2a49b108acf196bd27bec750d2227b39f36360ea422cf31488c09e13d01d508a
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: ffde2c3e415be62ad6bfbfe50546823118db13763d58e44ff45979b39cbfde6c
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer6735)
		Method: <com.mobpower.probe.b.b.b.a$a: byte[] b(java.lang.String,byte[])>
		SHA-256: b377b9800474f2ac9d5ff93003c2f7360cc1fe29ebafc19f85e0d83b0a7953fb
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobpower.common.g.f: java.lang.String b(java.lang.String)>
		SHA-256: 402b184e9e59555d389ca3f32bd9dba6a1f6d2cda790902ccde2b496ab4dfeb7
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 8d9ed73f76b0cc35336304903ab76cb718c59eb2a0e5d6566d27757d000fd32
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.mobpower.probe.b.b.b.a$a: byte[] b(java.lang.String,byte[])>
		SHA-256: 12baa5de1ae095c123eb1380ad943ad78e8975699fee37fa987e586851a9005a
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9765)
		Method: <u.aly.dg: java.lang.String s(android.content.Context)>
		SHA-256: 36adfa91eec5498c5a25608326066b866f34ada83e557d6bd755b0ee78ded315
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9349)
		Method: <u.aly.dh: java.lang.String a(java.lang.String)>
		SHA-256: acc6f4086e3014d4a70882b7c9a8992dd9e9416ca4488858044058cdc7bc4cc9
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.mobpower.common.g.f: java.lang.String b(java.lang.String,java.lang.String)>
		SHA-256: d14041b231e7085e2c60146224edf93fad2e18275ffb88141e955cf4590181fc
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5637)
		Method: <com.virgo.qao.hotfix.upgrade.a: byte[] a(java.lang.String)>
		SHA-256: 55b0d4cbf74ff618812017ef14547e84da6db5137bad969bec9d41fd18cb451
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.appevents.f: java.lang.String b(java.lang.String)>
		SHA-256: 402b184e9e59555d389ca3f32bd9dba6a1f6d2cda790902ccde2b496ab4dfeb7
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6737)
		Method: <com.mobpower.probe.b.b.b.a$a: byte[] b(java.lang.String,byte[])>
		SHA-256: 758ae47b7ac5df842ab4ff0669a3ea9eb9c6445807e1cd6c59eea4fa300148d2
		Secure: false
	Object:
		Variable: varReplacer1907
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1907)
		Method: <com.mobpower.common.g.f: java.lang.String b(java.lang.String,java.lang.String)>
		SHA-256: b7cac0660956ffbddab9ac7b672f1d218e4891ab230e1e22817591acbcd01e22
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4662)
		Method: <com.facebook.ads.internal.m.bd: java.lang.String a(java.lang.String)>
		SHA-256: 2e891889b867f6f07617fed1a1c8b82ca66d3179db3bd34040a1b7bd6855dbbf
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.mobpower.probe.b.b.b.a$a: byte[] b(java.lang.String,byte[])>
		SHA-256: c02b96d4625ece061e970ed1b5877dac8ff43f701c81c344418f9420d2a08e5c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5588)
		Method: <com.virgo.ads.internal.c.f: java.lang.String a(java.io.File)>
		SHA-256: 3d29adb5595a342ac172b3ecab1e7daac0ec95cee25221398a639d60487bbd4a
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.mobpower.probe.b.b.b.a$a: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 8d8415f2fcba6b2158e85fffb284b57fa3dcb4029d3c585c7b7d96238fa157ea
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 7a74e8fbde4cb7f3c5f100dc4c6bc0d46ff7409fd74d931edb087eb017f74545
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1908)
		Method: <com.mobpower.common.g.f: java.lang.String b(java.lang.String,java.lang.String)>
		SHA-256: 46221b21183d4741a82be03dcd14bd936964873cd56adeb8592fd11e8d549469
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.virgo.ads.internal.c.f: java.lang.String c(android.content.Context)>
		SHA-256: 344952ed220f14f158ce1495ab2bc534e0de9afefeb13319196c2261f3d11e55
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10196)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: fce6fd1c2484fc495b824b6f644cbeeb95e381f61b9099da2bc09a7957daad66
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6906)
		Method: <com.facebook.appevents.f: java.lang.String b(java.lang.String)>
		SHA-256: b5cdbbd0c55c9b4bc9f2ceb20495b74a5d59528389838edb07e4d34092f252e4
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10200)
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: 7db485b1baeb853b940054775a015f5b39df75e0039adcf6c98d2a8bf0510067
		Secure: true
	Object:
		Variable: varReplacer10196
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10196)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: dc88b80594d9a15f2d2b969a52fba0d1e3992c2325b520bc495d85caaa692046
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6740)
		Method: <com.mobpower.probe.b.b.b.a$a: java.lang.String a(java.lang.String,byte[])>
		SHA-256: e9787123fb5efbe4d580bb57e084e9917f48cd5920be4642d51d0103bf85c0aa
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10197)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 9375a1509a174d4fbd88e63496f970e2bde66869603b40afa23ff089037a2371
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <com.virgo.qao.hotfix.upgrade.a: byte[] a(java.lang.String)>
		SHA-256: b6cb0bd8f2accfdbb8c2cfbc989df1db47ea910f4d179a287eaa27e0a797839d
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.dh: java.lang.String b(java.lang.String)>
		SHA-256: 9b1c4d9107b4e9443b3c35ac725161f8f20c9b545725d8e46b0983e6bc86a37d
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <com.virgo.ads.internal.a.d: java.security.KeyStore b(java.lang.String)>
		SHA-256: e6163ce4e5a14dfd56a134cc49e9d7d2ee72ba89ccc1d7db1e464c8f2311a7da
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.mobpower.probe.b.b.b.a$a: byte[] b(java.lang.String,byte[])>
		SHA-256: 9f60e5a5c4070f415352ec794c45ad9740e137819731f7f39c919dde651a7a44
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11387)
		Method: <com.mobpower.common.g.f: java.lang.String d(java.lang.String)>
		SHA-256: df3b17b9d6f0ac5e1c0f5241e1e1032f1ef39915be5ad3e00d8517cc95f84e86
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8873)
		Method: <com.virgo.ads.internal.c.f: java.lang.String a(byte[])>
		SHA-256: a5b31d123f012dabbd4e50c6d9d9c21d662501b60d671566e89841396314ecfb
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.mobpower.common.g.f: java.lang.String b(java.lang.String,java.lang.String)>
		SHA-256: b77516fa0fd64df4ce44a9a52b6d8d634bbd49ade7d2790d32e5dfa9686ac0a5
		Secure: false

Findings in Java Class: com.virgo.ads.internal.c.f

	 in Method: java.lang.String a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #3d29adb5595a342ac172b3ecab1e7daac0ec95cee25221398a639d60487bbd4a)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.virgo.qao.hotfix.upgrade.a

	 in Method: byte[] a(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #55b0d4cbf74ff618812017ef14547e84da6db5137bad969bec9d41fd18cb451)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #55b0d4cbf74ff618812017ef14547e84da6db5137bad969bec9d41fd18cb451)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5637)


Findings in Java Class: com.mobpower.probe.b.b.b.a$a

	 in Method: byte[] b(java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #758ae47b7ac5df842ab4ff0669a3ea9eb9c6445807e1cd6c59eea4fa300148d2)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES, DESede, RSA}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6737)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6736, $r7, $r2)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #b377b9800474f2ac9d5ff93003c2f7360cc1fe29ebafc19f85e0d83b0a7953fb)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer6735)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)


	 in Method: java.lang.String a(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6738, $r6, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e9787123fb5efbe4d580bb57e084e9917f48cd5920be4642d51d0103bf85c0aa)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES, DESede, RSA}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6740)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #7d52730c76d3f26145998fa359ca00df6e5fa1ca70917e25acd27cfc2a0b3e58)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer6739)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6738, $r6, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)


Findings in Java Class: com.mobpower.common.g.f

	 in Method: java.lang.String b(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1907)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1911, $r5, $r3)


Findings in Java Class: com.virgo.ads.internal.a.d

	 in Method: javax.net.ssl.SSLSocketFactory a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8937, $r6, varReplacer8937)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8937, $r6, varReplacer8937)


Findings in Java Class: com.umeng.analytics.b

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10198, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10198, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10196)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 53

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 2
	RequiredPredicateError: 16
	ConstraintError: 4
	TypestateError: 1
=====================================================================
