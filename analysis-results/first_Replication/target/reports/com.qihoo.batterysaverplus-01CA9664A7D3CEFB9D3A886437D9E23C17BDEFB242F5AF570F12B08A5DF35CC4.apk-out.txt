Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.qihoo.batterysaverplus-01CA9664A7D3CEFB9D3A886437D9E23C17BDEFB242F5AF570F12B08A5DF35CC4.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getUPMD5(java.lang.String)>
		SHA-256: 8880a047bf40bc5dec0b3df722fd05892da6ae419d327eaa3640e62fa041fb71
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.qihoo360.common.utils.SecurityUtil: byte[] MD5(byte[])>
		SHA-256: 7ceffe7e0ebee737e05d4dfa906544227243b0af7631483252a0e81a978e83f
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer7023)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_encrypt(java.lang.String,java.lang.String)>
		SHA-256: 60a7affc274eb62193d322d6c9a2f81136d99b82a7fb71002ca70bca18f9df98
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13229)
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[],byte[])>
		SHA-256: 63df781a6f6a6cc478103c1ee5d8d363864cabad76f1a343fefd1caf0f2cd020
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13221)
		Method: <com.mobimagic.adv.f.b.c: byte[] a(byte[],byte[])>
		SHA-256: ba39de81703e80e96018159b30ec00d0efe3ce6e9da1c0c38bcd68795cec2d31
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2364)
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[])>
		SHA-256: 62e4a9a327628baf216f9420f81d150a2cbd90134114b8cd5fd5c6628c96c141
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15506)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzcv(java.lang.String)>
		SHA-256: 98ae0876284cf991836c5b5cd3ba7a16eea9a272339fe97a86f4006e03178b55
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: 8308cc419a228b856ecf812f4a1bcec969318612ae2f3894f4977a38456c2fd4
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.mobimagic.adv.f.b.c: byte[] a(byte[],byte[])>
		SHA-256: 94ebb5ffe8464dbb08b442cf756593c1e52a3ad4b9217926b8950cc1b0f05547
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer7036)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_decrypt(java.lang.String,java.lang.String)>
		SHA-256: e510ede1384744a8f87c8ad71b3f3c809bb26015fbd704270da02c0100aabd88
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 7a74e8fbde4cb7f3c5f100dc4c6bc0d46ff7409fd74d931edb087eb017f74545
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_encrypt(java.lang.String,java.lang.String)>
		SHA-256: 15d150e79c5e7661dbb05a65575bbd7ee200f49ab8c8aa54c98825dff5f98f83
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13875)
		Method: <com.qihoo360.common.utils.SecurityUtil: byte[] MD5(java.io.File)>
		SHA-256: 643cc3c73fdf51751c538fadd885687c18aebdb8aaff3503a45a7afc37acd89c
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.mobimagic.adv.f.b.c: byte[] a(byte[],byte[])>
		SHA-256: fd9ba5f66eab81a4f810b7f77ee34936e2a6caa5b54e1ab6cdfcff24284ab1d4
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.qihoo360.common.utils.SecurityUtil: byte[] MD5(java.io.File)>
		SHA-256: db3e17543f0789a228b2676213a3199c7a5a1129dd70696cbea660ff60f88de8
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_decrypt(java.lang.String,java.lang.String)>
		SHA-256: bb65d23197ce4f3d2dadabc31a685fffd222ed3b28775800a42f22cd2e296f56
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7022)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_encrypt(java.lang.String,java.lang.String)>
		SHA-256: 5b065ffe8eef969e6d1ddf1d030c8b419b689b05698f332e330f20be2efb02cb
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_encrypt(java.lang.String,java.lang.String)>
		SHA-256: 19eff7b194043eafc9ebfc4e805f6473d9e820d5718eb3a8e65b28ab6d9076f6
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_decrypt(java.lang.String,java.lang.String)>
		SHA-256: f605ba6ccea829a846cc3cf5825300efbe6a39adf07ce6c8c48264a265559476
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7696)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: d2223f4367829ee218415d38004439e048759c98cf1ec5d79adddfd35d49d450
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer13222)
		Method: <com.mobimagic.adv.f.b.c: byte[] a(byte[],byte[])>
		SHA-256: 47e2d708d7b13216808b0716aea2f8cc545ff53d71ce404e02f16bb4f2db3b44
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[],byte[])>
		SHA-256: 6a82edd009dbef89565a62019fdff9802d1a7891520c5664e3c386e964bd3f6a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2731)
		Method: <com.qihoo360.common.utils.SecurityUtil: byte[] MD5(byte[])>
		SHA-256: 5564869f914f22dff7251e9a780690a080d7ab620c6b4b88a3f76a89a299edae
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5797)
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: 50b087d513fd700243df3538e4d84683fea04668f608bdaf9ee74dbf52a9c77e
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18843)
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getUPMD5(java.lang.String)>
		SHA-256: 1dfa241259a3d207358c0a3eaeb5607d78a75ee71fbc1b599fc6d2600a8c4461
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_decrypt(java.lang.String,java.lang.String)>
		SHA-256: f4d66bad6a363c501179b1552749fa14392ef460d7363b0cacd66e5e6f9938f6
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyStore
		Statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.mobvista.msdk.base.b.b.i: void <init>(com.mobvista.msdk.base.b.b.i$a,int,com.mobvista.msdk.base.b.b.j)>
		SHA-256: 904974ba4cb6065649466c8090c20e8f6c18ff337ab5e9f4cbda85a1a8b9602f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[],byte[])>
		SHA-256: f553b48a635029790275912b97d0aacc6da60ddbca420931ab14baf838d2e16c
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[],byte[])>
		SHA-256: e116332ddaea05e611e5483f42ad792ce6620b7fe82169f4a41b79d95d0b9ac7
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_encrypt(java.lang.String,java.lang.String)>
		SHA-256: 96b0a650ef43bded912c68964b86200055fcfccb9046288b0f21ec0e69f08a5d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.mobimagic.adv.f.b.c: byte[] a(byte[],byte[])>
		SHA-256: 412bf4ed61073de9a0ffc866fcb699e1cc15ef84b8208e61e319c37dd5caa685
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer13230)
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[],byte[])>
		SHA-256: b1e04a8bba90a0ad5d93d7e38fd9cd33cdc1e8d422ca2eb662fe04b63c60a4a3
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[])>
		SHA-256: 8481fe3b5e6de86da061cf99a70d8814be7085ee5a243c155a2413aaa4fc3dba
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzcv(java.lang.String)>
		SHA-256: 635d2d0bad81cfe7a34ecffc927df94b3302c4a29f5c25cffef87aeb06b2d36c
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10662)
		Method: <com.facebook.ads.internal.util.u: java.lang.String a(java.lang.String)>
		SHA-256: bc2ac41348c9a5db3efe64468558b9a772423aa4c60d8c077991f0b1b161b8a6
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7035)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_decrypt(java.lang.String,java.lang.String)>
		SHA-256: 903e1bf8fa7d4b96e32ebda51d091d48b0a5631de18229ac69b7b3baf8cd286d
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.facebook.ads.internal.util.u: java.lang.String a(java.lang.String)>
		SHA-256: ad19a603e89360657fd031ecd3a9b509e8b25fed8dc69952eef89a447965eed4
		Secure: true

Findings in Java Class: com.qihoo360.common.utils.SecurityUtil

	 in Method: byte[] MD5(byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #5564869f914f22dff7251e9a780690a080d7ab620c6b4b88a3f76a89a299edae)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2731)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #5564869f914f22dff7251e9a780690a080d7ab620c6b4b88a3f76a89a299edae)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = null


	 in Method: java.lang.String DES_encrypt(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5b065ffe8eef969e6d1ddf1d030c8b419b689b05698f332e330f20be2efb02cb)
			First parameter (with value "DES") should be any of {AES, DESede, RSA}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7022)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer7025, $r6, $r2)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #60a7affc274eb62193d322d6c9a2f81136d99b82a7fb71002ca70bca18f9df98)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer7023)


	 in Method: java.lang.String DES_decrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #903e1bf8fa7d4b96e32ebda51d091d48b0a5631de18229ac69b7b3baf8cd286d)
			First parameter (with value "DES") should be any of {AES, DESede, RSA}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7035)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #e510ede1384744a8f87c8ad71b3f3c809bb26015fbd704270da02c0100aabd88)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer7036)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer7034, $r6, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)


	 in Method: byte[] MD5(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #643cc3c73fdf51751c538fadd885687c18aebdb8aaff3503a45a7afc37acd89c)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.mobimagic.adv.f.b.c

	 in Method: byte[] a(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #47e2d708d7b13216808b0716aea2f8cc545ff53d71ce404e02f16bb4f2db3b44)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer13222)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ba39de81703e80e96018159b30ec00d0efe3ce6e9da1c0c38bcd68795cec2d31)
			First parameter (with value "DES") should be any of {AES, DESede, RSA}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13221)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer13220, $r5, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #63df781a6f6a6cc478103c1ee5d8d363864cabad76f1a343fefd1caf0f2cd020)
			First parameter (with value "DES") should be any of {AES, DESede, RSA}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13229)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #b1e04a8bba90a0ad5d93d7e38fd9cd33cdc1e8d422ca2eb662fe04b63c60a4a3)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer13230)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer13231, $r5, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 37

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 8
	ConstraintError: 8
	TypestateError: 1
	IncompleteOperationError: 2
=====================================================================
