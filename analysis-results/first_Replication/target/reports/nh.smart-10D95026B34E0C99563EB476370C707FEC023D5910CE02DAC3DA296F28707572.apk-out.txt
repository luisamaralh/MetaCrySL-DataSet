Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/nh.smart-10D95026B34E0C99563EB476370C707FEC023D5910CE02DAC3DA296F28707572.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.spec.PBEParameterSpec.PBEParameterSpec( salt iterationCount paramSpec);
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Alive 17069  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.S: void A(java.security.Key,boolean)>
		SHA-256: cdfa22871123aa8523b07d293e60f770e75e923d1a1e85f43575c8a062bbc712
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.M: void A(java.security.Key,boolean)>
		SHA-256: 46d9fd5257cb1a169ff595b8e07546c5994c93d7d7a39a802a8bed2761dc8350
		Secure: true
	Object:
		Variable: varReplacer9947
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer9947)
		Method: <btworks.jce.provider.C.E: int[] A(int,int,int,int,int,byte[],int)>
		SHA-256: 6bba3c9ce3dd2d8877d92f60debde8897da73eadaf662ab48ee786d1f41cf29a
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer9947)
		Method: <btworks.jce.provider.C.E: int[] A(int,int,int,int,int,byte[],int)>
		SHA-256: f32d1e0e89ff411f4b8cef5c71fbaee8cda29b59ed5097e3dfd7236cb92d3c07
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r13 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r3, varReplacer2382, $i0)
		Method: <o.ᵔˋ: void ˊ(int,java.io.File,java.io.File)>
		SHA-256: 792be459f2eb5917d17b5d0cf65453970bf5ab82f5af061658b3f6426b7046fc
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.A: void B(java.security.Key)>
		SHA-256: 1633e64109d95d76a86393382e4c449da2e40239fd93a01067846dcc83ba6f19
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <o.ʾˈ: java.lang.String ˏ(java.lang.String)>
		SHA-256: f9353fca0b6657795de7f93cf14f4c2a12617bb30e7fd5b72614a50f0bb6cd84
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10312)
		Method: <o.ˌˏ: void <clinit>()>
		SHA-256: b357401b7b7d37e55a3069e9469f4c037bca9a8a05e9809fc6df2ab704624cf0
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r5)
		Method: <o.ﾞ: java.lang.String ˋ(byte[])>
		SHA-256: 2a6effb7a23869998bfa196691d9be1ea22a17c44a4fc8e1d0d182f6e40c7f5
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <btworks.jce.provider.cipher.K: java.security.spec.AlgorithmParameterSpec H()>
		SHA-256: 1f55fd99c59cbe5c70190f9b323b62695c6bb21f69ec4c3c348ff8fa83c77ea2
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9872)
		Method: <o.ʽˉ: void ˏ()>
		SHA-256: c8923d21cfd822fbc488065cf11d92f39077a2eff8ab9d48243aeb0e22309ea2
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)
		Method: <o.ﾞ: java.lang.String ˏ(byte[],byte[])>
		SHA-256: da16b283c2d61e2e5e9c9ae89f9f29fe654ae7cf2d6e18920902df12f64a9563
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.I: void A(java.security.Key,boolean)>
		SHA-256: 2ab59c520e520dcb9c438ee3e41a1673ffe24141bd6d1328f3d5a5723f3b554e
		Secure: true
	Object:
		Variable: $r13
		Type: byte[]
		Statement: $r13 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r3, varReplacer2382, $i0)
		Method: <o.ᵔˋ: void ˊ(int,java.io.File,java.io.File)>
		SHA-256: f0aff0209291bcc69b0d523f7f7e1ebf54c6e69a0355f5f82e778a80b41875f4
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <o.ߺ: java.lang.String ˎ(java.lang.String)>
		SHA-256: c0c2a8674fbd288cd0547fe95c029f06d911d281df77d3e758102062e7d932d3
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r3 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.C: void D(java.security.Key)>
		SHA-256: 2d2c3b152a3289d586f7427d9f809316acaf6018268b6f77db506d6ebdbc22ab
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer1956, varReplacer1957)
		Method: <o.ᵔˋ: byte[] ˋ(int,java.io.InputStream)>
		SHA-256: 1843afc555e7a7deeecf50f5f350004e9c805a65c0b00a045e205443f497061
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <o.ʾˈ: java.security.Key ˋ(java.lang.String)>
		SHA-256: 63b946591b67ff0325b9078afc016f4030be81736d3dc6e98fccc638f2bcfb2
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <o.ʾˈ: java.lang.String ˎ(java.lang.String)>
		SHA-256: 55e7f29cca764db133c5312630febb5e9d1f6b2996955c9aaf2d9162ad231a7c
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1863)
		Method: <o.ᶥʻ: java.lang.String ˊ(byte[])>
		SHA-256: 1b192b8d824b2293d466e305321a52a12a2c01249606d0f8ba156089711ebff0
		Secure: true
	Object:
		Variable: r41
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r41.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer7681)
		Method: <o.ʽˉ: void ˏ(android.content.Context,boolean,o.ʾʻ)>
		SHA-256: 48d148ce37115b17d2b9e97d42bb075403d804888a7b09923a607fc135c1cc
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r4 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.S: void A(java.security.Key,boolean)>
		SHA-256: 74a497ec00c027e7095062ed62962f12266c4fecb7ebf085ff0263faf784efa
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <o.ʾˈ: java.lang.String ˏ(java.lang.String)>
		SHA-256: 3b6dfb63a527c5738348d0665cc5fb5017f50a6cc3ad847a2c8298d47d325b0e
		Secure: false
	Object:
		Variable: r8
		Type: java.security.SecureRandom
		Statement: specialinvoke r8.<java.security.SecureRandom: void <init>()>()
		Method: <o.ʽˉ: void ˏ()>
		SHA-256: dc8dc96e58dad5880990f3102f90cb194e906c9acfebf66a29f5534039b8e234
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <btworks.jce.provider.cipher.H: java.security.spec.AlgorithmParameterSpec H()>
		SHA-256: 5acbb23880dfabe84c63a5461ae2bd854181db887c8aba157e153fc81165155f
		Secure: false
	Object:
		Variable: varReplacer7681
		Type: java.lang.String
		Statement: specialinvoke r41.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer7681)
		Method: <o.ʽˉ: void ˏ(android.content.Context,boolean,o.ʾʻ)>
		SHA-256: 67c622c9b0303144afc307f54aa99a2f55f7c188561ce5988c294b3b7e2209b1
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <o.ﾞ: java.lang.String ˏ(byte[],byte[])>
		SHA-256: eff423156295aff1aac6752bc3318b35f5bc0cc623cec6f3ae687fe737b552c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7803)
		Method: <o.ʿʻ: byte[] ˎ(java.lang.String,byte[])>
		SHA-256: cd805dfebfd85603415ff9fc37a48989c266227c7ba16b4304292f2a12aa20ed
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.Q: void A(java.security.Key,boolean)>
		SHA-256: f8536195433f5e0298b0ffd852e417f68303ca2cd86a0eefb2a67e7e4ebb7ee4
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <btworks.codeguard.engine.MainService: boolean engineExist(android.content.pm.ApplicationInfo,java.lang.String)>
		SHA-256: f06a4835ceed3cd63a384671903367ae222544fab28c54d17251a6069ba6884a
		Secure: true
	Object:
		Variable: r8
		Type: java.security.SecureRandom
		Statement: specialinvoke r8.<java.security.SecureRandom: void <init>()>()
		Method: <o.ʽˉ: void ˏ()>
		SHA-256: dc8dc96e58dad5880990f3102f90cb194e906c9acfebf66a29f5534039b8e234
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.C: void D(java.security.Key)>
		SHA-256: 729a0d0681882d1c99ee9eb59df653793e61b67ba1394bc54058dcfeb3169a6f
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal()>()
		Method: <o.ᵔˋ: byte[] ˋ(int,java.io.InputStream)>
		SHA-256: 4961d3e357acfa8623b6f02d4cc74d716148a7ef25f806fa04fd3f07fec276df
		Secure: false
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r5)
		Method: <o.ﾞ: java.lang.String ˏ(byte[],byte[])>
		SHA-256: d67712f380a5e78a67a3ccd65f62e1b5ce68001e1ebd4c80278a8ccccfb45384
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer8811)
		Method: <o.ʾʼ: boolean ˎ(java.lang.String,java.lang.String,java.security.PublicKey)>
		SHA-256: 37146437ee2ce18013053be0472f83bb6578338aae8196418dd4775b309f0fb3
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9873)
		Method: <o.ʽˉ: void ˏ()>
		SHA-256: 89f552fcfa01dff69f80cc7cefd31ce489b711aa50d37acd1331f43d0d2e99ab
		Secure: false
	Object:
		Variable: varReplacer1964
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1964)
		Method: <o.ᵔˋ: void ॱ()>
		SHA-256: b118d5fcfa5fb8e4110d1188274119b0bf0c7470e915c7dc9e6a07d098663f3f
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <o.ʿʻ: byte[] ˎ(java.lang.String,byte[])>
		SHA-256: 6f661371632e573c4a7cf104f5c972dc53a2ef4ba1d906590a0bfa02f4d961ee
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <o.ᶥʻ: java.lang.String ˊ(byte[])>
		SHA-256: 725e85ace5d3d0d52418bcab3288c8670c5d12802835328821b48ac36efa4172
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer5698, varReplacer5699)
		Method: <o.ᵔˋ: java.lang.String ˎ(java.lang.String)>
		SHA-256: 78725adb021f7c2db47d3b51343d025246463fe9a9acad5edbc6b77488aef9f4
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r5)
		Method: <o.ﾞ: java.lang.String ˎ(java.lang.String)>
		SHA-256: 9c40fb6dd4aa928c4a94e38c6ffdb3264b575cc2c6439f6547858281751274b6
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r2 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.I: void A(java.security.Key,boolean)>
		SHA-256: 6990e37df7f9e73110723f4e0a8b3ba00d61d1bf948295123f231fca1778943d
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <btworks.jce.provider.cipher.T: java.security.spec.AlgorithmParameterSpec H()>
		SHA-256: 6b06844f6b2d4d0fcea8bd59a858b4399ee550ac2553e873c650cbcd5c729090
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $z0 = virtualinvoke $r7.<java.security.Signature: boolean verify(byte[])>($r6)
		Method: <o.ʾʼ: boolean ˎ(java.lang.String,java.lang.String,java.security.PublicKey)>
		SHA-256: 561b3049c17b7d9e2f2cfe4024eaa431151c0c070ae0fd937f03dad7dc4d6e71
		Secure: false
	Object:
		Variable: r42
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r42.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <o.ʽˉ: void ˏ(android.content.Context,boolean,o.ʾʻ)>
		SHA-256: 2a0997398d862085f7dff0f6333897765319d115f6959e1e04b44a4c2269950e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <o.ʽˉ: byte[] ˏ(java.lang.String,byte[])>
		SHA-256: 3e6ae7606ebb1aca275f460ae25fda82416f9fb7f64570387199ccc7147ddf4
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r7 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r3, varReplacer1953, $i0)
		Method: <o.ᵔˋ: byte[] ˋ(int,java.io.InputStream)>
		SHA-256: 16723787746426c69082026bba559ceffae140ed09945b59818680e29286c27d
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <o.ﾞ: java.lang.String ˎ(java.lang.String)>
		SHA-256: 1f2c6c5ef4b7d91f163a33b9154f472de9570a59588c850d2b840e7840fac7dd
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <btworks.jce.provider.cipher.T: java.security.spec.AlgorithmParameterSpec H()>
		SHA-256: 6b06844f6b2d4d0fcea8bd59a858b4399ee550ac2553e873c650cbcd5c729090
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <o.ʾˈ: java.security.Key ˊ(java.lang.String)>
		SHA-256: f3b075b68af414215a411b9bb629343575878438f6a8e0f4552e27ef1420c5cd
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <o.ʽʹ: org.apache.http.client.HttpClient ˏ()>
		SHA-256: 455a264ccf4f8d5f8b09287f4ac16224845df36c048af2c9e26afc11d63f4094
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r3, varReplacer1953, $i0)
		Method: <o.ᵔˋ: byte[] ˋ(int,java.io.InputStream)>
		SHA-256: dd9511ba761065a5a7bb275f368e43ab85c1f784a82e3127dda637f5222c7cf2
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r5)
		Method: <o.ﾞ: java.lang.String ˏ(byte[],byte[])>
		SHA-256: e16d45884b19a637400b89f79ad20f455a9ab9feb3671a8363b9c887117f2bb1
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <o.ﾞ: java.lang.String ˋ(byte[])>
		SHA-256: c7782ae43584055a6a612dd1f2495ff9a3029873ca1239b9820b652b0ae1f126
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2383, varReplacer2384)
		Method: <o.ᵔˋ: void ˊ(int,java.io.File,java.io.File)>
		SHA-256: 75f6555e7ae95b9a5f0071eeb80963f56adf1bfc6589e9be645541c06d3aaeb5
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1964)
		Method: <o.ᵔˋ: void ॱ()>
		SHA-256: fc0bab149e8935c5e28273eceaa2e802fdada6752d2f14df74dde6ff218ed53c
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <o.ᵔˋ: java.lang.String ˎ(java.lang.String)>
		SHA-256: 680de58a3b2ea05b3453f3bf7cb0e444ead063da57033bb1a5542eb9ee4cbc2
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <o.ʾˈ: java.lang.String ˎ(java.lang.String)>
		SHA-256: 39bb86e29ed0295abb5bd5c55123966917710318fa8de828df4a1e61fd1619ab
		Secure: false
	Object:
		Variable: $r0
		Type: btworks.xcrypto.G
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <btworks.xcrypto.G: void <init>(java.lang.String)>
		SHA-256: 2e4a3693296204c34b750f1f56e79a9f1eaa4227d92cd2c2b84e865917ff1d3
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <btworks.codeguard.engine.MainService: boolean engineExist(android.content.pm.ApplicationInfo,java.lang.String)>
		SHA-256: b224f8047ddf1c1f7dc6a8af9c66e97458afd0c85f52f1790219574634955cfe
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal()>()
		Method: <o.ᵔˋ: void ˊ(int,java.io.File,java.io.File)>
		SHA-256: a63ef9a803d9f7ad893497b44c13ef9b4d7d7577e30ae6c1a08b6ca2a98bb0a2
		Secure: false
	Object:
		Variable: varReplacer9945
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer9945)
		Method: <btworks.jce.provider.C.D: int[] A(int,int,int,int,int,byte[],int)>
		SHA-256: 9990acfd8ee69ee2a94544d61027bbbacd54f5b89b598c33e4c80662af86a71e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <btworks.jce.provider.cipher.L: java.security.spec.AlgorithmParameterSpec H()>
		SHA-256: a9ea333903b7f07f918b6597f190f81e30459d3aa549d1d0083fc272da98f747
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1)
		Method: <o.ʾˈ: java.security.Key ˋ(java.lang.String)>
		SHA-256: a112453f3aca50383def68861531df486bcebbb804949871ec5439d13cde4ec9
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <btworks.jce.provider.cipher.L: java.security.spec.AlgorithmParameterSpec H()>
		SHA-256: a9ea333903b7f07f918b6597f190f81e30459d3aa549d1d0083fc272da98f747
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8053)
		Method: <btworks.jce.provider.rsa.O: void <init>()>
		SHA-256: 92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r4 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.O: void A(java.security.Key,boolean)>
		SHA-256: ba3ce2489020c923ae839f43f2f68e6aa6ff50d5b7372d1983c3b85e833d334e
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <o.ﾞ: java.lang.String ˏ(byte[],byte[])>
		SHA-256: b205e12adb3ea724b7c065d42bb7dc9f2285bc79f2c962cc9aeed0bfaf523f05
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <btworks.jce.provider.cipher.K: java.security.spec.AlgorithmParameterSpec H()>
		SHA-256: 1f55fd99c59cbe5c70190f9b323b62695c6bb21f69ec4c3c348ff8fa83c77ea2
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <btworks.jce.provider.cipher.H: java.security.spec.AlgorithmParameterSpec H()>
		SHA-256: 5acbb23880dfabe84c63a5461ae2bd854181db887c8aba157e153fc81165155f
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer7723)
		Method: <o.ʿʻ: java.lang.String ˋ(int,java.lang.String,java.lang.String)>
		SHA-256: 6e5df8cf5fc3a6ea9126bda244028b7db67544e90f7c3484cf14a6de1784ca2c
		Secure: false
	Object:
		Variable: r37
		Type: java.security.SecureRandom
		Statement: specialinvoke r37.<java.security.SecureRandom: void <init>()>()
		Method: <o.ʽˉ: void ˏ(android.content.Context,boolean,o.ʾʻ)>
		SHA-256: 82f3e6de457e202260f137b619a2296968df235afcec35661385632b0465ff07
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer9945)
		Method: <btworks.jce.provider.C.D: int[] A(int,int,int,int,int,byte[],int)>
		SHA-256: 879ee035e0f775329fcc43781bbc61fefa45001daefdeb3256d1778caa72b009
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <o.ʿʻ: java.lang.String ˋ(int,java.lang.String,java.lang.String)>
		SHA-256: ce6dab2d1f9df95f6d796a10829c44bf21698a449aef098107f11d77cfdab00
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r6 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.Q: void A(java.security.Key,boolean)>
		SHA-256: 465bad10b43e4d2ca5c95bba2fe64a576204885b473ba692d84a98ea85aa7c5d
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r2 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.A: void B(java.security.Key)>
		SHA-256: b98818e670b714c687b5c7e6bd2ffdce1e0a42ef43d4dfdcad8f9cc356449cdb
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.O: void A(java.security.Key,boolean)>
		SHA-256: f018654c44bda938ee73fe4958621bb05c8043a27ff75d72ee4dfd5053d13ea1
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r3)
		Method: <o.ʽʹ$ॱ: void <init>(o.ʽʹ,java.security.KeyStore)>
		SHA-256: 8949cff2df9e91fe36b74c17f832ef75ce57a854a8b2f2637372bfc80a8408d5
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <o.ߺ: java.lang.String ˎ(java.lang.String)>
		SHA-256: 935082db13554dbee8dbd641eb7bbf2bbbc80ddeb7463aceb68f9abd45ab4db1
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r4 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.M: void A(java.security.Key,boolean)>
		SHA-256: 787db2bab37f8c8958f95c1102abf2b996581bc1dfea819141590704217e169a
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1)
		Method: <o.ʾˈ: java.security.Key ˊ(java.lang.String)>
		SHA-256: eff5937bc398c7322c58103acf40b58432c9117564c3e9dc61001f94985e2270
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <o.ʽˉ: byte[] ˏ(java.lang.String,byte[])>
		SHA-256: e8137b639ba19d21e0e42759d8a0e64c1d64d85b01c519b35ddaaeb60daa7656
		Secure: true
	Object:
		Variable: varReplacer7723
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer7723)
		Method: <o.ʿʻ: java.lang.String ˋ(int,java.lang.String,java.lang.String)>
		SHA-256: f80b8798206eced2acc663442dfc57d55ee2b96177a137b129e1958f2e2629ee
		Secure: false

Findings in Java Class: o.ᵔˋ

	 in Method: byte[] ˋ(int,java.io.InputStream)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1954, $r5)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #1843afc555e7a7deeecf50f5f350004e9c805a65c0b00a045e205443f497061)
			Unexpected call to method <javax.crypto.Cipher: byte[] doFinal()> on object of type javax.crypto.Cipher. Expect a call to one of the following methods javax.crypto.Cipher: byte[] doFinal(byte[]),javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]),javax.crypto.Cipher: byte[] doFinal(byte[],int,int),javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters),javax.crypto.Cipher: void init(int,java.security.Key),javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec),javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom),javax.crypto.Cipher: void init(int,java.security.cert.Certificate),javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom),javax.crypto.Cipher: int update(byte[],int,int,byte[],int),javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer),javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom),javax.crypto.Cipher: byte[] wrap(java.security.Key),javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom),javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int),javax.crypto.Cipher: byte[] update(byte[],int,int),javax.crypto.Cipher: int update(byte[],int,int,byte[]),javax.crypto.Cipher: byte[] update(byte[]),javax.crypto.Cipher: int update(java.nio.ByteBuffer,java.nio.ByteBuffer)
			at statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal()>()


	 in Method: void ˊ(int,java.io.File,java.io.File)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #75f6555e7ae95b9a5f0071eeb80963f56adf1bfc6589e9be645541c06d3aaeb5)
			Unexpected call to method <javax.crypto.Cipher: byte[] doFinal()> on object of type javax.crypto.Cipher. Expect a call to one of the following methods javax.crypto.Cipher: byte[] doFinal(byte[]),javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]),javax.crypto.Cipher: byte[] doFinal(byte[],int,int),javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters),javax.crypto.Cipher: void init(int,java.security.Key),javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec),javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom),javax.crypto.Cipher: void init(int,java.security.cert.Certificate),javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom),javax.crypto.Cipher: int update(byte[],int,int,byte[],int),javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer),javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom),javax.crypto.Cipher: byte[] wrap(java.security.Key),javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom),javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int),javax.crypto.Cipher: byte[] update(byte[],int,int),javax.crypto.Cipher: int update(byte[],int,int,byte[]),javax.crypto.Cipher: byte[] update(byte[]),javax.crypto.Cipher: int update(java.nio.ByteBuffer,java.nio.ByteBuffer)
			at statement: $r3 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2385, $r6)


	 in Method: java.lang.String ˎ(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #78725adb021f7c2db47d3b51343d025246463fe9a9acad5edbc6b77488aef9f4)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer5698, varReplacer5699)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5697, $r3)


	 in Method: void ॱ()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1964)


Findings in Java Class: btworks.jce.provider.rsa.O

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8053)


Findings in Java Class: btworks.jce.provider.C.E

	 in Method: int[] A(int,int,int,int,int,byte[],int)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r11.<btworks.xcrypto.Cipher: byte[] doFinal(byte[])>($r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer9947)


Findings in Java Class: btworks.xcrypto.Cipher

	 in Method: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: staticinvoke <btworks.xcrypto.Cipher: void A(btworks.xcrypto.Cipher)>($r0)


	 in Method: btworks.xcrypto.Cipher getInstance(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<btworks.xcrypto.Cipher: void <init>(java.lang.String)>(varReplacer7763)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<btworks.xcrypto.Cipher: void <init>(java.lang.String)>(varReplacer7764)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<btworks.xcrypto.Cipher: void <init>(java.lang.String)>(varReplacer7734)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<btworks.xcrypto.Cipher: void <init>(java.lang.String)>(varReplacer7731)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<btworks.xcrypto.Cipher: void <init>(java.lang.String)>(varReplacer7758)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<btworks.xcrypto.Cipher: void <init>(java.lang.String)>(varReplacer7733)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<btworks.xcrypto.Cipher: void <init>(java.lang.String)>(varReplacer7757)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r10.<btworks.jce.provider.rsa.O: void <init>()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<btworks.xcrypto.Cipher: void <init>(java.lang.String)>(varReplacer7762)


	 in Method: byte[] doFinal(byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: staticinvoke <btworks.xcrypto.Cipher: void A(btworks.xcrypto.Cipher)>($r0)


Findings in Java Class: btworks.jce.provider.C.D

	 in Method: int[] A(int,int,int,int,int,byte[],int)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r11.<btworks.xcrypto.Cipher: byte[] doFinal(byte[])>($r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer9945)


Findings in Java Class: o.ʿʻ

	 in Method: java.lang.String ˋ(int,java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r10 = staticinvoke <btworks.xcrypto.Cipher: btworks.xcrypto.Cipher getInstance(java.lang.String)>(varReplacer7722)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer7723)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r10.<btworks.xcrypto.Cipher: byte[] doFinal(byte[])>($r6)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r10.<btworks.xcrypto.Cipher: byte[] doFinal(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


Findings in Java Class: o.ʽˉ

	 in Method: void ˏ(android.content.Context,boolean,o.ʾʻ)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r41.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer7681)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r42.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #92feaf62b8c4f06b93b85885064d9d22a8b4d24dd5b49bb32e8fd6e49c32d5a8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r10 = virtualinvoke $r17.<btworks.xcrypto.Cipher: byte[] doFinal(byte[])>($r22)


	 in Method: void ˏ()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9871, r9, $r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9871, r9, $r4)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #89f552fcfa01dff69f80cc7cefd31ce489b711aa50d37acd1331f43d0d2e99ab)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9873)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9870, r9, $r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9870, r9, $r4)


Findings in Java Class: o.ˌˏ

	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10310, $r1, varReplacer10310)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10310, $r1, varReplacer10310)


Findings in Java Class: btworks.jce.provider.cipher.K

	 in Method: java.security.spec.AlgorithmParameterSpec H()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: o.ﾞ

	 in Method: java.lang.String ˏ(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4282, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r5)


Findings in Java Class: o.ʾˈ

	 in Method: java.lang.String ˎ(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer9832, $r5)


	 in Method: java.lang.String ˏ(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer9812, $r5)


	 in Method: java.security.Key ˋ(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


	 in Method: java.security.Key ˊ(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


Findings in Java Class: btworks.jce.provider.cipher.H

	 in Method: java.security.spec.AlgorithmParameterSpec H()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: o.ʾʼ

	 in Method: boolean ˎ(java.lang.String,java.lang.String,java.security.PublicKey)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r7.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: btworks.jce.provider.cipher.T

	 in Method: java.security.spec.AlgorithmParameterSpec H()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: btworks.jce.provider.cipher.L

	 in Method: java.security.spec.AlgorithmParameterSpec H()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: o.ʽʹ$ॱ

	 in Method: void <init>(o.ʽʹ,java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10250, r7, varReplacer10250)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10250, r7, varReplacer10250)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 83

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 33
	IncompleteOperationError: 17
	ConstraintError: 3
	TypestateError: 2
=====================================================================
