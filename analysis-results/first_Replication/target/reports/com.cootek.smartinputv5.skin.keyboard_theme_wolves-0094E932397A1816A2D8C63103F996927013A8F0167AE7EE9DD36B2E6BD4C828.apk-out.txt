Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.cootek.smartinputv5.skin.keyboard_theme_wolves-0094E932397A1816A2D8C63103F996927013A8F0167AE7EE9DD36B2E6BD4C828.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cootek.tark.ads.utility.Utility: java.lang.String MD5(java.lang.String)>
		SHA-256: f7b053846a463dbc5c1e4e18ab43e2cae80462e1eb802289f71b55e9dae9e429
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okhttp3.internal.Util: okio.ByteString sha256(okio.ByteString)>
		SHA-256: b9fa638f7c73836986e4b143e5c8a0f5f8453b073695b12e807f45e7b460c05a
		Secure: true
	Object:
		Variable: varReplacer651
		Type: java.lang.String
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer651)
		Method: <com.cootek.usage.e: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 583e86a46e49571d75222a1a12d145ae4f0aa797e6b174e86589178b7193a02a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer513)
		Method: <com.cootek.usage.e: javax.crypto.Cipher a(java.lang.String,int)>
		SHA-256: 1971eb4c1caa3b0f9d70a1d4d190f64e5dfb1a10cd8b502e0be1a62848f165bc
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6745)
		Method: <okhttp3.internal.Util: okio.ByteString sha256(okio.ByteString)>
		SHA-256: 3927ff1b531815c65e64f5be6a6d738396d15457ac406a18795940039b77d4b0
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer511)
		Method: <com.cootek.usage.e: javax.crypto.Cipher a(java.lang.String,int)>
		SHA-256: 2e44af8aa90497b2f4b3e464d1cc277966de2a220b5535d661b70a5e16f6bff
		Secure: false
	Object:
		Variable: $r22
		Type: javax.net.ssl.SSLContext
		Statement: $r22 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2374)
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: 22e83bfbb436d927257b6478372b2aed18fd0f6d4c158ab5fedfb687459f13b0
		Secure: false
	Object:
		Variable: $r14
		Type: byte[]
		Statement: $r14 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cootek.usage.p: org.apache.http.client.methods.HttpPost c()>
		SHA-256: f43f0b80cc24f7364199acb9950a0f04dbd8191c02216c1f94e49ad87e486405
		Secure: true
	Object:
		Variable: $r13
		Type: java.security.MessageDigest
		Statement: $r13 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer604)
		Method: <com.cootek.usage.p: org.apache.http.client.methods.HttpPost c()>
		SHA-256: ab92541da85819f4f4fbb95495b852cab38066b16592cca34bc62db5bcd791e7
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer512)
		Method: <com.cootek.usage.e: javax.crypto.Cipher a(java.lang.String,int)>
		SHA-256: d7d135ea397a06bdf84c6311c761905e749ac507d25b4894a8f9512366979e97
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okhttp3.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 35b0119aad99960d8bec3a1c0a0d18ad4ede33706412ee7d9291554433d85f77
		Secure: true
	Object:
		Variable: r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer651)
		Method: <com.cootek.usage.e: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 6f002d6e384da4374ef9fc9fa4269b1e4298d8b0af7cb2e9806163c6c3640277
		Secure: false
	Object:
		Variable: r10
		Type: java.security.SecureRandom
		Statement: specialinvoke r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: c49baf8b2831a2be9aa3b8b2b456003f3087b1f5f20fd8411803ca8aa53c7285
		Secure: true
	Object:
		Variable: $r19
		Type: javax.crypto.Cipher
		Statement: $r19 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer612)
		Method: <com.cootek.usage.p: org.apache.http.client.methods.HttpPost c()>
		SHA-256: d87db1ae5e9f586578373318ba837195b397ffd2c3395a6d75b03b640865f0ee
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2500)
		Method: <com.cootek.tark.ads.utility.Utility: java.lang.String MD5(java.lang.String)>
		SHA-256: 9f033b61f4bef23c2b92c3a1af5a78583868b329d3c094a6a4440730912f98ba
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.cootek.usage.e: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 2ad0333bd37733d881e1e75d1c5088ccdf12edb497eece16a7e2a254cc071845
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7186)
		Method: <okhttp3.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 6c845b5e13e3fa4fcb49e96a185d6cd1f76c87e96979e502a8d2b3240ceef342
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3214)
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: f7e5dc13132fdd331dd0d868882ee29cd5821eab5a733b928c47165988b9cc51
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cootek.usage.e: javax.crypto.Cipher a(java.lang.String,int)>
		SHA-256: 69a6e11629d5ad4330e68020ab53d94117f3fa7ade657ab7d93f293532f4646b
		Secure: true
	Object:
		Variable: $r14
		Type: byte[]
		Statement: $r16 = virtualinvoke $r19.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r14)
		Method: <com.cootek.usage.p: org.apache.http.client.methods.HttpPost c()>
		SHA-256: a786b2349da436e1670c50fdaf6d4dbb4b36d69c9271bec07e6c3dedc3f381b3
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke $r19.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r14)
		Method: <com.cootek.usage.p: org.apache.http.client.methods.HttpPost c()>
		SHA-256: bed10e67db81dc5284f6022d4fe5225eeb88fc74ca61f05812736614d21780ce
		Secure: false
	Object:
		Variable: r36
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke r36.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r2, $r16)
		Method: <com.cootek.usage.v: void a(com.cootek.usage.v,com.cootek.usage.UsageData)>
		SHA-256: 6686e0c6d6397311c0eb730cae9d461054f5173a001789ef723e66ae7d47a3e5
		Secure: false
	Object:
		Variable: varReplacer513
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer513)
		Method: <com.cootek.usage.e: javax.crypto.Cipher a(java.lang.String,int)>
		SHA-256: 57cd35939ba13ded32297ef0bbdfcf27a608647d6fa5e14f0f16ff6654bc06d0
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer653)
		Method: <com.cootek.usage.e: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 57a8c858dd7b179df125b6fd69b79c27fec62f4085c2cf8b02103bafb692f63f
		Secure: false

Findings in Java Class: com.cootek.usage.v

	 in Method: void a(com.cootek.usage.v,com.cootek.usage.UsageData)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2e44af8aa90497b2f4b3e464d1cc277966de2a220b5535d661b70a5e16f6bff)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r36.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r2, $r16)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #6686e0c6d6397311c0eb730cae9d461054f5173a001789ef723e66ae7d47a3e5)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke r36.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r2, $r16)


Findings in Java Class: com.facebook.ads.internal.util.g

	 in Method: void b()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f7e5dc13132fdd331dd0d868882ee29cd5821eab5a733b928c47165988b9cc51)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3214)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3218, r12, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3218, r12, $r3)


Findings in Java Class: com.cootek.usage.e

	 in Method: javax.crypto.Cipher a(java.lang.String,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer513)


	 in Method: java.lang.String a(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer654, r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer651)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: void <init>(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2370, varReplacer2370, varReplacer2370)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2370, varReplacer2370, varReplacer2370)


Findings in Java Class: com.cootek.usage.p

	 in Method: org.apache.http.client.methods.HttpPost c()
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r19.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer609, $r18)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 24

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	IncompleteOperationError: 2
	RequiredPredicateError: 8
=====================================================================
