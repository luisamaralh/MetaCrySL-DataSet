Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.och.BillionGraves-00C0314B6563C0D5682ECBAEE9B4F86C0E5C1690A124CBE1073C5A34F61FD40A.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3161)
		Method: <com.och.BillionGraves.ActivityMethods$encrypt: java.lang.String decrypt(byte[],byte[])>
		SHA-256: cc30a17102e293e41844fdae763128a62bdc9832dbab7b6939675a230190fde5
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.och.BillionGraves.ActivityMethods$encrypt: byte[] generateKey()>
		SHA-256: 9c52a40ba7b0d41830fa1fe7d0a786681527bc3cd71df572a89da924821c534f
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.loopj.android.http.MySSLSocketFactory: java.security.KeyStore getKeystore()>
		SHA-256: d011df71b400b4926b84dec0cad6ffb90a5bd3d26c43a5974bec9e614ef5edf5
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer476)
		Method: <com.och.BillionGraves.ActivityMethods$encrypt: byte[] generateKey()>
		SHA-256: d2d8578b4fa8c918865eddad9a40050f91b4305fc693735d288584516132bcde
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.testflightapp.lib.core.StringUtils: java.lang.String sha1(java.lang.String)>
		SHA-256: bed54b6151222dbd5d707f3cf7707a8e2f121d8d246c4a1344c21865e7ad3291
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.och.BillionGraves.ActivityMethods$encrypt: java.lang.String decrypt(byte[],byte[])>
		SHA-256: 344bd324173162fa432c82e9030d1a14b33db39f7c5e47583f2924a7b1ebfcc
		Secure: false
	Object:
		Variable: r12
		Type: java.security.SecureRandom
		Statement: specialinvoke r12.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)>
		SHA-256: 28ce7f80687f60d700936748d1561bbe406957299dfe63f40eacb0b994499d24
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.och.BillionGraves.ActivityMethods$encrypt: byte[] generateKey()>
		SHA-256: cc63cdc529b1e595e16ad478e6148a2a2a5a4c444b635f3db4739809e1080020
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer472)
		Method: <com.och.BillionGraves.ActivityMethods$encrypt: byte[] encryptS(java.lang.String,byte[])>
		SHA-256: 29c1ee57b6f10d6b7452d113b1a3eae42fc1140d75939b1375615bcdc39e36c0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.testflightapp.lib.DeviceIDs: java.lang.String getGeneratedUdid()>
		SHA-256: b2a29908be06ce58f80f07b74bc2abee26bc788f6a075d15d6b22152f3c1340d
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer473)
		Method: <com.och.BillionGraves.ActivityMethods$encrypt: byte[] encryptS(java.lang.String,byte[])>
		SHA-256: bd24665394ddd47745b9197f4204de0c3c2649702b8c86a719dbfa96f5402279
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3160)
		Method: <com.och.BillionGraves.ActivityMethods$encrypt: java.lang.String decrypt(byte[],byte[])>
		SHA-256: 81378708d7ba6f11b822b4b7bba037796aa969e5ab6bc2541921eb2ec4e9aa39
		Secure: false
	Object:
		Variable: varReplacer473
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer473)
		Method: <com.och.BillionGraves.ActivityMethods$encrypt: byte[] encryptS(java.lang.String,byte[])>
		SHA-256: cc0983a13e42b67b0432d7d8d23d3f0945238168e9cbad52baac36fd6ab6ed6b
		Secure: true
	Object:
		Variable: varReplacer3160
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3160)
		Method: <com.och.BillionGraves.ActivityMethods$encrypt: java.lang.String decrypt(byte[],byte[])>
		SHA-256: ad977beee250a4491be2106ed9aa896ecd8b52cc8e88d6ca8d1c0347bd53f93a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3215)
		Method: <com.testflightapp.lib.core.StringUtils: java.lang.String sha1(java.lang.String)>
		SHA-256: 59610427cb8e1a9aaf01dfbdec56aead88b1c045b95bfac89cac9eeb3f406a06
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.och.BillionGraves.ActivityMethods$encrypt: byte[] encryptS(java.lang.String,byte[])>
		SHA-256: 1521c165d6f18d4ad98f1e4423b99e8eba74949825b90a3107f2993c640747b3
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2072)
		Method: <com.loopj.android.http.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 6781fbc0295f8f57f43d11a0cc3f9d0f877386b1a36d8c492dbf2c26dfe5c5d6
		Secure: false

Findings in Java Class: com.och.BillionGraves.ActivityMethods$encrypt

	 in Method: byte[] encryptS(java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #29c1ee57b6f10d6b7452d113b1a3eae42fc1140d75939b1375615bcdc39e36c0)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer472)


	 in Method: java.lang.String decrypt(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #cc30a17102e293e41844fdae763128a62bdc9832dbab7b6939675a230190fde5)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3161)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3162, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3160)


Findings in Java Class: com.loopj.android.http.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2070, r5, varReplacer2070)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2070, r5, varReplacer2070)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 17

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 4
	ConstraintError: 2
=====================================================================
