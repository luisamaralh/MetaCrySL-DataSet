Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.gto.zero.zboost-0F1177558032FD9CE0F2BFC855D29D39AD7CF44A091E98597183778EEB2D306A.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.KeyGenerator
		Statement: $r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer9042)
		Method: <com.gto.zero.zboost.database.i: void <init>(android.content.Context)>
		SHA-256: 13826410860d157c3d63b323bdbc0b6fc0dc10ac47d5fc19afb33866b33636c7
		Secure: false
	Object:
		Variable: varReplacer9723
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer9723)
		Method: <com.gto.zero.zboost.database.i: byte[] a(byte[],byte[])>
		SHA-256: cc67227f173daeba3a25a14909d12d615d9ef17f203bdce5ea2cead397225b75
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer9723)
		Method: <com.gto.zero.zboost.database.i: byte[] a(byte[],byte[])>
		SHA-256: 378d92ef7e7f6c66d7775bedf037e02fa551aea2bcb9650cd7e9bafe05da0304
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9722)
		Method: <com.gto.zero.zboost.database.i: byte[] a(byte[],byte[])>
		SHA-256: ff624b5e53ed6e48fab730e3aac3a604ddc59155a45c330ff44510b88f2e156c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.gto.zero.zboost.database.i: byte[] a(byte[],byte[])>
		SHA-256: 81a1924c783053f9b8ba0874b4281d48641e9f5fc0008f3e93a1ee9a3e36d975
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.gto.zero.zboost.database.i: byte[] a(byte[],byte[])>
		SHA-256: 8f2267b288a6974230c49ee6f5c7186b65aa65c38b87b7ea205d114674adb6d1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer9065)
		Method: <com.gto.zero.zboost.database.c: void <init>(android.content.Context)>
		SHA-256: 736784a1875fd4faaa9ccb8617f1542099279c7dd74b8b39c6e517420ca50536
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.gto.zero.zboost.database.i: byte[] a(byte[],byte[])>
		SHA-256: 28067c78f6b9f9cc96644426aa22057da0e09f52dc078ebb6ca1a3c4ac756fac
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer9039)
		Method: <com.gto.zero.zboost.database.i: void <init>(android.content.Context)>
		SHA-256: 150e1366cf4041d4e9716d2af3f559a5517e3c1f1c3a16812f79045fcfd040b8
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.KeyGenerator
		Statement: $r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer9068)
		Method: <com.gto.zero.zboost.database.c: void <init>(android.content.Context)>
		SHA-256: dca08ea7fd329917ac2b38425c2aa011eac793dcf31180d97cc7c98ee15b8f69
		Secure: false

Findings in Java Class: com.gto.zero.zboost.database.i

	 in Method: byte[] a(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ff624b5e53ed6e48fab730e3aac3a604ddc59155a45c330ff44510b88f2e156c)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9722)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer9723)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9721, $r2, $r3)


	 in Method: void <init>(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer9040, $r2)


Findings in Java Class: com.gto.zero.zboost.database.c

	 in Method: void <init>(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer9069, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 10

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 5
	ConstraintError: 1
=====================================================================
