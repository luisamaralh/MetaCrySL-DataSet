Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.radio.station.WRVR.FM-14431EB961D6C88651D422BF6FE4E4FBAA0A6018E1112134BD4E5A727C92957F.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Alive 15144  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: r61
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r61.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r13)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 4c82dce21c60bd48931284d8f86f0209c37debc663aefe6acccbb48c3b685af0
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 6b9b525b007c7fb5fa18f190271a394669ab7f53f62abdcf4d4a6da8910369fc
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer2200, $i0, varReplacer2201)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: d3c39ada9a32a485ae8e3da9a6a2e77a92720e23057b91d214a166d713ab6c8c
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.nielsen.app.sdk.k: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: e26b74913e8b4fea91a9c66dcd6a0102a88d2fd644bec0e6a2ca11257bdb70b9
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r10.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 223ae1f4b6474cfcf28fce1bbcb594159b124d1cfd6f0f99aa382524a8b2d388
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.Key
		Statement: $r9 = virtualinvoke $r3.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer10305, $r8)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 8de1eb0e777a09284f57dd37f69808444186ca4c01167e64b44f8d387a4ee3d2
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: a305d6e410284860ef5a0feaf85b69ddb063ba2e1d58f03639330c6977b4d3f9
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.nielsen.app.nuid.AppNuid: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 9e96d6ab2dcbad8864c460e02a4f4b1fb403d49331e63c421caad4a32b5b90b2
		Secure: true
	Object:
		Variable: r62
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer10220)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 61b3f83b0bf0fa363a5f4960c630c70503febb1c1e14b4c209f52412ac0c176c
		Secure: true
	Object:
		Variable: r61
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r61.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r13)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 4c82dce21c60bd48931284d8f86f0209c37debc663aefe6acccbb48c3b685af0
		Secure: false
	Object:
		Variable: varReplacer2051
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer2050, $i0, varReplacer2051)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: bad6ba97c84abf23b75b3866752279bad80007e39aa1c93f149bac81ab4199ec
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.facebook.ads.internal.h.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 8b3145b340a6eb159a4d880bda44d3cff594af2332e72af75d6e28d17186dbf7
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.KeyGenerator
		Statement: $r10 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2040)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: ab3e95c0947d4420e1a74c3583ce71214ce997a50aad4ce9b0c8b4ba93f22a87
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5997)
		Method: <com.localytics.android.DatapointHelper: java.lang.String getSha256_buggy(java.lang.String)>
		SHA-256: 1570ac4f6b3fc4e66ccf4274c9fbc6a25cf6ddc24f0e87576e6270b5eb17718e
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer2050, $i0, varReplacer2051)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 869dfb5921eea09bca3e4a4c7376cbddc159808147599d10a6db25eee2206d27
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r10.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: d46c95533590153b624a6e80bdf1220eedd0892cc8e665b5ffdc7b6ab899f0a9
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: 2125805d03a1e43489bdecc5db182c9da3fb7141e4e8c4afb45e18805c8edeaa
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5400)
		Method: <com.facebook.ads.internal.h.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: aa42fae883b4f87e409b586f1ba83c02315d3840b39f6a4544681ac3829142d8
		Secure: true
	Object:
		Variable: varReplacer2049
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer2049)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: ca1ad521d41c1669f8ec7591e6a58e5e927f2cc66fb150723811478d27e938cb
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: 745c88399e386cb4988bd7e8ee31fd18372b0c0c3cb0d12c9e68f4688c0fa5d6
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: a305d6e410284860ef5a0feaf85b69ddb063ba2e1d58f03639330c6977b4d3f9
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4950)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: afa244b2ffe3e8b44448dfde85e9f4ef9c18ec76cf000527156117297d13ecb4
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.SecureRandom
		Statement: $r11 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2186)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: a953e03072fde40399c02511e00ab0fbac4b88a9ed1488a50742b2086db6c022
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10779)
		Method: <com.nielsen.app.nuid.AppNuid: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 4e366abb62d76cc4d161951bd5ea7b6384ece58b2c0843cd6c123343b9e9e432
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4196)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 9bfa55cee1dcfaf8e8e66939bcfe3f0ce99282dd3557173591998f4311868b74
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.SecureRandom
		Statement: $r11 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2030)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 5dab95563d97f684c3e1ff7242d2aa475aaab8e7e733b0d74145c77ef6c339a7
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer2049)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 303a512be11910cff568e72fb511cb460fc6c9f393d9b9eeb12ab16e4637d36e
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: ac7398f1264eb13e0b3c8ab4f9ac9a7bd15568cf473aef7fb9e22e1163b0cbc9
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>($r12)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: e87af06d8fb6c7e96dcb23128dca6a747933186aad4e69028d6372068e638d35
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.SecureRandom
		Statement: specialinvoke $r8.<java.security.SecureRandom: void <init>()>()
		Method: <com.localytics.android.AnalyticsHandler: void _updateHeaderForTestModeAttribution(java.lang.String,org.json.JSONObject,com.localytics.android.DatapointHelper$AdvertisingInfo,boolean)>
		SHA-256: c01b882ce9f8e5ef324c3b8d9131b55c7fa50a59a239ef9df76a0b4774ff7d4c
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>($r12)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: 3b1433a56fc2a601eab847c9e0a83d51ac703a70d2cc28f41e56abe456875171
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer2185)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: 10dd99a4ee72ba57eb4477dde71b70d185fd0977becef72791f1f076a746d5bc
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2052)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: e0cdfa5f705a3a61cbac4aaf1a276eaf30b003469af5688f198ca5e1e1df2e70
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2192)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: c656e8508f89c89824bb12482940ea7180994ad9d76253851aeb7a692f5a7296
		Secure: true
	Object:
		Variable: varReplacer2185
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer2185)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: eb371dfd92df62ad6f8074c0e2107136d57636e844fc98333522a3b6bfdf3844
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1693)
		Method: <com.nielsen.app.sdk.k: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 702f6609bdadde2df051cb1786aa2743df8b22ba8a3438f4d9fda70c54800bc2
		Secure: true
	Object:
		Variable: $r13
		Type: byte[]
		Statement: virtualinvoke $r18.<java.security.SecureRandom: void nextBytes(byte[])>($r13)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: b5ab2245a188792f7b550e6182ac388ed5e10fe00f3a3a4aa1f6384f07e41d7e
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: df665f084f1e770e2fb4717185530b11b34b780a49e13fb3ca461d98a46808a5
		Secure: true
	Object:
		Variable: $r19
		Type: java.security.Key
		Statement: $r19 = virtualinvoke $r6.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r5, $r15)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: d9ff112a8623e4b91fcdc23130f684a4b2193ba9aed784306231dc9fdf6e111d
		Secure: true
	Object:
		Variable: r62
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r13, varReplacer10312, $i1, varReplacer10313)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 2c5553ca64a48141f997987f9326748942d9b5a9af8f06e23412869120d83934
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.nielsen.app.nuid.a: byte[] a(byte[])>
		SHA-256: edd35fe21122b4541370323d173b2a7e2437d0855232428acdac2e1e0de9bb85
		Secure: true
	Object:
		Variable: varReplacer10220
		Type: java.lang.String
		Statement: specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer10220)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 7dd58e2db51675f494fcb92d1a213de2ee411fb746af9041a1948017eb24625
		Secure: true
	Object:
		Variable: varReplacer10313
		Type: java.lang.String
		Statement: specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r13, varReplacer10312, $i1, varReplacer10313)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 7a45cff74fcd0118ff60cc5ad9c779a25b43a1cc189f924f82c38ac3468379c0
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>($r12)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: e87af06d8fb6c7e96dcb23128dca6a747933186aad4e69028d6372068e638d35
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = interfaceinvoke $r10.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 7394cd3202e1c43fc7fffb4516ad6ee015a1df5079f4af5bf3c4b682405e31de
		Secure: true
	Object:
		Variable: $r19
		Type: java.security.Key
		Statement: $r19 = virtualinvoke $r6.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r5, $r15)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: d9ff112a8623e4b91fcdc23130f684a4b2193ba9aed784306231dc9fdf6e111d
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.nielsen.app.nuid.a: byte[] b(byte[])>
		SHA-256: 522dbd852b293968723a8615f4b9a9f50bb328a5e9083d111911ac8910caf16b
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: f35dc12c56d152e6c31ac584b3069d4a668fd44bb0ebc9c820d266f938d614d1
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.SecretKey
		Statement: $r10 = virtualinvoke $r17.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 8836fe1dc9cf09609882e676a853d2fc914a942529160e2899ca9733b81fe07
		Secure: true
	Object:
		Variable: varReplacer2201
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer2200, $i0, varReplacer2201)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: 848cd55f9ce1f93d2910f95a94d5acdcb69021953c22022ff867657c70d0c2fc
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 6b9b525b007c7fb5fa18f190271a394669ab7f53f62abdcf4d4a6da8910369fc
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.KeyGenerator
		Statement: $r10 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2174)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: 472420a983961e6300fd818c953a328fd6c7c333f40e8a95f94bf27ea36e3cca
		Secure: true
	Object:
		Variable: $r16
		Type: javax.crypto.Cipher
		Statement: $r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10240)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 66d5655e722f4e94ed766fd23302b573c4a7394c9bbfd9a3f0343f94e5b5ac7b
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 7324dfc8acaf022f6a28d64af170a9d1c5ddc3332e03dadf1ebd11b3a9e34337
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 8f38c9bd4e17e89b7d9d1628eac13e332b81502b2a05a4e7126ad5a702e80bad
		Secure: true
	Object:
		Variable: $r18
		Type: java.security.SecureRandom
		Statement: $r18 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer10265)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 2bb2a2402831a9022cb24a2d9d18d23c35c548d4c757a12ffa687e7de713cffd
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.Key
		Statement: $r9 = virtualinvoke $r3.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer10279, $r8)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 1620b3f25227dee2ca3e2026bbe2d18e83e39af8113bf46841372fe41eb07741
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: virtualinvoke $r18.<java.security.SecureRandom: void nextBytes(byte[])>($r11)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 1c0020d3fb70c2baa6e9d6e8f23073be9899449952a2944613639bc6b6104ae4
		Secure: true
	Object:
		Variable: $r17
		Type: javax.crypto.KeyGenerator
		Statement: $r17 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer10227)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 61c7cae670a3b319e8442002664457e45673ae61dd2f3fae7326aacd464929fb
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: b1475ecb277cf44c18e504f1be84657ccb3a6b602605d56eb56e04862a5c2552
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.localytics.android.DatapointHelper: java.lang.String getSha256_buggy(java.lang.String)>
		SHA-256: 2feca76bc0b1f633b0e7445d33ac9d4f4a9606eb32af76fd1505f1fb038c4fdc
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>($r12)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: 3b1433a56fc2a601eab847c9e0a83d51ac703a70d2cc28f41e56abe456875171
		Secure: true

Findings in Java Class: com.nielsen.app.nuid.a

	 in Method: boolean a()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #7324dfc8acaf022f6a28d64af170a9d1c5ddc3332e03dadf1ebd11b3a9e34337)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r6.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r17, $r15)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer2050, $i0, varReplacer2051)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #7324dfc8acaf022f6a28d64af170a9d1c5ddc3332e03dadf1ebd11b3a9e34337)
			Unexpected call to method getInstance on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)


	 in Method: byte[] b(byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #e0cdfa5f705a3a61cbac4aaf1a276eaf30b003469af5688f198ca5e1e1df2e70)
			Unexpected call to method init on object of type javax.crypto.Cipher.
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2093, $r4, $r2)


Findings in Java Class: com.nielsen.app.nuid.AppNuid

	 in Method: void startQuery(boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e0cdfa5f705a3a61cbac4aaf1a276eaf30b003469af5688f198ca5e1e1df2e70)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r5.<com.nielsen.app.nuid.b: boolean a(java.lang.String,java.lang.String)>(varReplacer10719, $r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e0cdfa5f705a3a61cbac4aaf1a276eaf30b003469af5688f198ca5e1e1df2e70)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r5.<com.nielsen.app.nuid.b: boolean a(java.lang.String,java.lang.String)>(varReplacer10728, $r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e0cdfa5f705a3a61cbac4aaf1a276eaf30b003469af5688f198ca5e1e1df2e70)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r5.<com.nielsen.app.nuid.b: boolean a(java.lang.String,java.lang.String)>(varReplacer10710, $r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e0cdfa5f705a3a61cbac4aaf1a276eaf30b003469af5688f198ca5e1e1df2e70)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r5.<com.nielsen.app.nuid.b: boolean a(java.lang.String,java.lang.String)>(varReplacer10725, $r3)


	 in Method: void run()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e0cdfa5f705a3a61cbac4aaf1a276eaf30b003469af5688f198ca5e1e1df2e70)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r6.<com.nielsen.app.nuid.b: boolean a(java.lang.String,java.lang.String)>(varReplacer10762, $r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e0cdfa5f705a3a61cbac4aaf1a276eaf30b003469af5688f198ca5e1e1df2e70)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r6 = $r0.<com.nielsen.app.nuid.AppNuid: com.nielsen.app.nuid.b p>


Findings in Java Class: com.nielsen.app.sdk.AppLaunchMeasurementManager

	 in Method: byte[] a(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r61.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r13)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #df665f084f1e770e2fb4717185530b11b34b780a49e13fb3ca461d98a46808a5)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r3.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r20, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r13, varReplacer10312, $i1, varReplacer10313)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10213, $r15, $r12)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10213, $r15, $r12)


Findings in Java Class: com.nielsen.app.sdk.c

	 in Method: boolean a()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer2200, $i0, varReplacer2201)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer2185)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 62

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 4
	IncompleteOperationError: 6
	RequiredPredicateError: 9
=====================================================================
