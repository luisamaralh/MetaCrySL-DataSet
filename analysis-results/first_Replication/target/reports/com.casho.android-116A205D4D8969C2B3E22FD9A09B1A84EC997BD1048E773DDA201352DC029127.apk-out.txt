Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.casho.android-116A205D4D8969C2B3E22FD9A09B1A84EC997BD1048E773DDA201352DC029127.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.spec.PBEParameterSpec.PBEParameterSpec( salt iterationCount paramSpec);
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer18449)
		Method: <com.c.a.a.a: byte[] a(int)>
		SHA-256: 75ecc078f996e7c7ac431ac6bffb62af2bf63e73f9037a69bf929fab316f7c7d
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer29825)
		Method: <com.paypal.android.sdk.ap: java.lang.String a(java.lang.String)>
		SHA-256: d8059ecfeefe507ab4d8a34be54f423b6e4e73666f09bcf9dc7c2d020801c07c
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer18441, $i0, varReplacer18442)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String)>
		SHA-256: 84e636fe4dbded2cfe63c7bb54df5a10c955ab8dda8c8fdae7fd5999bcc94a75
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer18447)
		Method: <com.c.a.a.a: com.c.a.a.a$c a()>
		SHA-256: 888b0a6260dc11a322e09f0d3c0499ea79f50c71fde4ac48e622356e254607a4
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer23853)
		Method: <com.google.android.gms.iid.c: java.security.KeyPair a()>
		SHA-256: e1a9ea065b40d996efdf910631251060687bb2b2b942241d5e41040edc4301b9
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.f: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 7352392ac1a61e12c3ab32898ca689dddd258b6f1239ef778511babba2d4e7d
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a.a.a: com.c.a.a.a$a a(byte[],com.c.a.a.a$c)>
		SHA-256: 36bf61a68e0f5e447bd023cbc0807d55625d03346ac42018a6e3e97ba704224a
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.f: java.security.KeyPair f(java.lang.String)>
		SHA-256: 8551cd6b3cc22405d453a0e2748b84cb2fd415de658d3d644bd174e7acddd53a
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer18446)
		Method: <com.c.a.a.a: com.c.a.a.a$c a()>
		SHA-256: 93bac8754ee0f315f0a6368661ac16030dfa3ba376b3debbd03fbb6681d39ec8
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: 667d1c74233dc4695844b2a369b7ca168b7b3f396ce37cb94fd304b9f22f5e14
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer17008)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: d89fe4fbb980981066712d904bb2c3cbe706aea14b503792d3f667eda6929c58
		Secure: false
	Object:
		Variable: varReplacer18447
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer18447)
		Method: <com.c.a.a.a: com.c.a.a.a$c a()>
		SHA-256: 93b16ace89b7c306420a9386934bc27fa9e76011933de82fde83555c782272cd
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18384)
		Method: <com.b.a: java.lang.String a(java.lang.String)>
		SHA-256: 6bebbc788f468fef9f943f4b83a8bf55822c0d7c47b96eabb62cb0786a73b011
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <com.c.a.a.a$b: void d()>
		SHA-256: 2c4df0dfdedbc6ba6aa64eb861bcc76e945ee8fee08de7105c50d6a8805bf65c
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <com.c.a.a.a: byte[] a(int)>
		SHA-256: fb29420aa97b5775051d78ac21aaddb65cadc18b767a2ea9df4d12c22313ecc6
		Secure: true
	Object:
		Variable: varReplacer18349
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer18349)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 6390687cccf081a91234cd3b58e67e19c2a1f320fb340a5ddf33b477824ff52c
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer18343)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 8a5908779daa7efb34e43f98a80aa250a9a634192deec1307df3bf17b8722ff3
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.c: java.security.KeyPair a()>
		SHA-256: 588458274b445946250cb882f03e117802589055ad1c0641c873f0c9f0a9b58b
		Secure: true
	Object:
		Variable: $r21
		Type: byte[]
		Statement: $r21 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r21)
		Method: <com.google.android.gms.measurement.internal.z: void e()>
		SHA-256: 2acc783ae146fb83530e758b60624c8af39c1e50c62d500f73395ef622d7f02d
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer23792)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: 4e8c836e095e6ea5e595fa2d5880ea0f964da11eb588610e9f8d9fd8bc047d8b
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: $r6 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer18359)
		Method: <com.c.a.a.a$b: void d()>
		SHA-256: fb2132dfa32e9bf9c3b71761fa406fe26996e97423c9e8ce4f1c3d04ac85a109
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.c.a.a.a: com.c.a.a.a$a a(byte[],com.c.a.a.a$c)>
		SHA-256: 70e7f4938fbe4c1f07f7d6a17c56b1d43684f9ea3071f1a0c7a7fa262e5066f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <com.paypal.android.sdk.be: void a(okhttp3.OkHttpClient$Builder)>
		SHA-256: f621924fe2e56784575cef4de2c81bd7158a3f476cfcf76844c43012d0db3e60
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 4a4fcc961254ce892ff69201f61d125b482ffbb7934f8253126b2e5188129dbd
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.b.a: java.lang.String a(java.lang.String)>
		SHA-256: dc882d1e80d0c4879b4465be6f5455c2ca87100b2286e4177ce35aff39053ee6
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.c.a.a.a: byte[] b(com.c.a.a.a$a,com.c.a.a.a$c)>
		SHA-256: deaa291ca3d0ffc59d7ad7c1373c0bb84caba0350d0558fb8d4c3e426704100e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer20267)
		Method: <com.c.a.a.a: com.c.a.a.a$a a(byte[],com.c.a.a.a$c)>
		SHA-256: d620ccc2f7e5373a017be0a0458a04823e6b9b1db1a291353be0ae7e62beb923
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer18436)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String)>
		SHA-256: 6bb9c81cd83e0aec487b42b8ef5ed421568c6031047d567668ef3a1337730b9d
		Secure: false
	Object:
		Variable: varReplacer18442
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer18441, $i0, varReplacer18442)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String)>
		SHA-256: 74fb2f5b3550903a735e4fe8ec531b41f253b336c8861fd75c8e88e1ef10d8e6
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.paypal.android.sdk.ap: java.lang.String a(java.lang.String)>
		SHA-256: 4d6e504ac71b2bfa8922545fc87c3c6bff7d76288427fdd13d0af0fb386a7eae
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer16912)
		Method: <com.paypal.android.sdk.bi: void <init>(javax.net.ssl.TrustManager)>
		SHA-256: ae2a392712facfb5f04f344de9df16d8c5caa893721bd18fa68df2ce3708b7c6
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.e: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 23eb3e252b70966d3d0966a2feb58e39bc842849d9905948935e8605dfbd44e2
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.c.a.a.a: com.c.a.a.a$c a()>
		SHA-256: 49b0991ec4db97511e0a9605f37cdac92c6c6619f8973ee389e3d86c78826961
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer18349)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: a1da58bcffd379b757b4649551d338ea4ff83a06b2bd0d6144bc7658e7e933b3
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer18346)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 34d11886b90007f58ddf469921b0c0db1f6ab4ee335acac7fb4a0ff5b5d8cb0f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.woobi.r: java.lang.String a(java.lang.String)>
		SHA-256: ecac30db3a8dad252fba96484f645a6e999af697f2196475ca7a153464ab981d
		Secure: true
	Object:
		Variable: varReplacer18343
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer18343)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 3a002ac78a65f64cdb575bb4827cc69021343e456ec688a22d660e93fbc6744b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer18401)
		Method: <com.c.a.a.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 38a33b88fbc454fde3bb4360193c2f8171f9be56dbbe0e6775fc0c83cbbf89bc
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer18350)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 455beb839eda6263dedb0d04f8132e12dc2ef1865ae30e8f2018f274069acf49
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.c.a.a.a: byte[] b(com.c.a.a.a$a,com.c.a.a.a$c)>
		SHA-256: 93956974d148af49c7bedf886430bab7e5a8bdbb54e9810aa547f86e20abd43c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.f: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 3a1e80698e549c91437350956eb5865d687d056e7348af703228dcb9347cf8b8
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17633)
		Method: <com.woobi.r: java.lang.String a(java.lang.String)>
		SHA-256: 98dbbb63896754b153c2629f1b37c25a3d5de500eec418cb2d5c732cf69a9c3
		Secure: true
	Object:
		Variable: varReplacer18436
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer18436)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String)>
		SHA-256: 40a8595b7afd440e33f1dc8c26067c57da5b2d1145ff0fc726c858de8c68dbc
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a.a.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 4524495dfa3fecb4e6af9082328a3644e0e2c7ca52c9e390e41dd827fbce5634
		Secure: true
	Object:
		Variable: varReplacer18346
		Type: int
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer18346)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: e88a9bfdbbaf1f629446da201ed7ce4d4c2f478be5621ff0caec07cc56a4b471
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.e: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 11f1bcb7ae07944efc67e46877e2d7ceddc5e8edcbf8a0082e0feef337558e47
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer18396)
		Method: <com.c.a.a.a: byte[] b(com.c.a.a.a$a,com.c.a.a.a$c)>
		SHA-256: 7910f9e2a62dd2969398aa95f7e5fb055689bd10e11595ff10e07820d23393a9
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.google.android.gms.measurement.internal.m: java.security.MessageDigest j(java.lang.String)>
		SHA-256: cfa30433cb7e2ec8586935b52ecdfad19273e60fb50850194ae06b8e9f475763
		Secure: false

Findings in Java Class: com.c.a.a.a

	 in Method: com.c.a.a.a$c a(java.lang.String,byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer18346)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #34d11886b90007f58ddf469921b0c0db1f6ab4ee335acac7fb4a0ff5b5d8cb0f)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer18343)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #455beb839eda6263dedb0d04f8132e12dc2ef1865ae30e8f2018f274069acf49)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer18350)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer18349)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #34d11886b90007f58ddf469921b0c0db1f6ab4ee335acac7fb4a0ff5b5d8cb0f)
			Third parameter (with value 100)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer18346)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


	 in Method: com.c.a.a.a$c a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer18436)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer18441, $i0, varReplacer18442)


	 in Method: com.c.a.a.a$c a()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer18447)


	 in Method: com.c.a.a.a$a a(byte[],com.c.a.a.a$c)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer20268, $r5, $r2)


	 in Method: byte[] b(com.c.a.a.a$a,com.c.a.a.a$c)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer18397, $r5, $r2)


Findings in Java Class: com.google.android.gms.iid.e

	 in Method: java.lang.String a(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #11f1bcb7ae07944efc67e46877e2d7ceddc5e8edcbf8a0082e0feef337558e47)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.a

	 in Method: java.lang.String a(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4e8c836e095e6ea5e595fa2d5880ea0f964da11eb588610e9f8d9fd8bc047d8b)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer23792)


Findings in Java Class: com.google.android.gms.measurement.internal.z

	 in Method: void e()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #cfa30433cb7e2ec8586935b52ecdfad19273e60fb50850194ae06b8e9f475763)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = staticinvoke <com.google.android.gms.measurement.internal.m: java.security.MessageDigest j(java.lang.String)>(varReplacer25554)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #cfa30433cb7e2ec8586935b52ecdfad19273e60fb50850194ae06b8e9f475763)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r21 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r21)


Findings in Java Class: com.google.android.gms.measurement.internal.m

	 in Method: java.security.MessageDigest j(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #cfa30433cb7e2ec8586935b52ecdfad19273e60fb50850194ae06b8e9f475763)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer17006, r7, varReplacer17006)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer17006, r7, varReplacer17006)


Findings in Java Class: com.paypal.android.sdk.bi

	 in Method: void <init>(javax.net.ssl.TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16910, $r2, varReplacer16910)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16910, $r2, varReplacer16910)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 48

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 4
	RequiredPredicateError: 15
	ConstraintError: 4
=====================================================================
