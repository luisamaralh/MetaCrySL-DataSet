Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/ru.vsa.safenotelite-0590E837685C8A0180DBF2E46E829BCC1EABE31335D9ED325417ED66724778DF.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer245
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer245)
		Method: <ru.vsa.safenotelite.util.XCrypto: byte[] decrypt(byte[],byte[])>
		SHA-256: 73792f7c75879d2de86adfc1ab6d3ad535c6b3fa0cf13cda958bd3df20b8034c
		Secure: false
	Object:
		Variable: varReplacer259
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer259)
		Method: <ru.vsa.safenotelite.util.XCrypto: byte[] encrypt(byte[],byte[])>
		SHA-256: d5b74d77f3f31cb80d45f2af7983b5bf09bd514635906263806970a349a41591
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <ru.vsa.safenotelite.util.XCrypto: byte[] encrypt(byte[],byte[])>
		SHA-256: dd3300be7e03b89b2cfe63d8d323121bc171c237827caefce97d4bad210807fd
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <ru.vsa.safenotelite.util.XCrypto: byte[] encrypt(byte[],byte[])>
		SHA-256: 67660ebef9bcdf29dff625f17bb31960ddd36740584c870ce6a0fa4bb5fa1796
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer258)
		Method: <ru.vsa.safenotelite.util.XCrypto: byte[] encrypt(byte[],byte[])>
		SHA-256: 9c4c90f6501de0f2f664fa21061eb42b38c69223d8e001333cf9f621dbc95aef
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <ru.vsa.safenotelite.util.XCrypto: byte[] decrypt(byte[],byte[])>
		SHA-256: d813bc543f0902c2e0c075877458f798ef50a800f91e2c5faf8acc4dc555d942
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer244)
		Method: <ru.vsa.safenotelite.util.XCrypto: byte[] decrypt(byte[],byte[])>
		SHA-256: 4ac4f9b45795830389221bddea4bec4fefc9e21f69bc19daec65b284e2ed2d9c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer245)
		Method: <ru.vsa.safenotelite.util.XCrypto: byte[] decrypt(byte[],byte[])>
		SHA-256: 4354d1354d6fd66e07069f26505f59dfbd305177063b806ca559b156f132d304
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <ru.vsa.safenotelite.util.XCrypto: byte[] decrypt(byte[],byte[])>
		SHA-256: fe6b72027cc6f025149b8979a26071ca516bdfe1393947e8ebe7c9b2c4ce9edc
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer251)
		Method: <ru.vsa.safenotelite.util.XCrypto: byte[] generateKey(java.lang.String)>
		SHA-256: e74ff112803dcce0719b073f3d4296147ce670b48ab42a5ea9a66cf03a074176
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer259)
		Method: <ru.vsa.safenotelite.util.XCrypto: byte[] encrypt(byte[],byte[])>
		SHA-256: a6898258ad7ba66387fe316ad47e9c712cff6e7436f954279bfb12a20d7d1233
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: $r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer249, varReplacer250)
		Method: <ru.vsa.safenotelite.util.XCrypto: byte[] generateKey(java.lang.String)>
		SHA-256: 3785624df9bf48efb8b6fa43c16b8ce43021b99c34934552a28ca8fe2c41c1a8
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <ru.vsa.safenotelite.util.XCrypto: byte[] generateKey(java.lang.String)>
		SHA-256: 762215049bef3c54581ac4e00b3705695d7ae13659e31960c224a736293065a
		Secure: false

Findings in Java Class: ru.vsa.safenotelite.util.XCrypto

	 in Method: byte[] decrypt(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4ac4f9b45795830389221bddea4bec4fefc9e21f69bc19daec65b284e2ed2d9c)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer244)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer245)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer243, $r2)


	 in Method: byte[] encrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer260, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer259)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9c4c90f6501de0f2f664fa21061eb42b38c69223d8e001333cf9f621dbc95aef)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer258)


	 in Method: byte[] generateKey(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer248, $r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 5
=====================================================================
