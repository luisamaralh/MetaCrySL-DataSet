Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.valentus-141FB458C303E4D50E606FB8F08F3BA26D9100DBECF67CF9CC8833218932A669.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer359)
		Method: <com.valentus.network.NetworkService: com.squareup.okhttp.OkHttpClient addSSLTLS(com.squareup.okhttp.OkHttpClient,android.content.Context)>
		SHA-256: f0609f57fac662f200e5f5b37f8defc57110fed8d32b7aa102131cc0a08f8e9c
		Secure: true
	Object:
		Variable: $r10
		Type: javax.net.ssl.SSLContext
		Statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer360)
		Method: <com.valentus.network.NetworkService: com.squareup.okhttp.OkHttpClient addSSLTLS(com.squareup.okhttp.OkHttpClient,android.content.Context)>
		SHA-256: 87bfe8c4310dd8a8e0c6166756cd2e0de1ee29d2aa0718858be1a770a9573497
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer365)
		Method: <com.valentus.network.NetworkService: com.squareup.okhttp.OkHttpClient addSSLTLS(com.squareup.okhttp.OkHttpClient,android.content.Context)>
		SHA-256: 54cdcb4f9b0cb92f02092c479c7d7f1e1c6bbf59345f7d7b329bd63e51c385a
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1121)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: 852c96f9d0b0596925cdfac73dbffc1911a53561c1c1a4829d1d5387bcc4fa90
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 35b0119aad99960d8bec3a1c0a0d18ad4ede33706412ee7d9291554433d85f77
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3294)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: cfd65d97b58eae4e9279c45571abdfcf8f6f1d9fe9a0b15fc23979fc2919965d
		Secure: true
	Object:
		Variable: $r10
		Type: javax.net.ssl.SSLContext
		Statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer362)
		Method: <com.valentus.network.NetworkService: com.squareup.okhttp.OkHttpClient addSSLTLS(com.squareup.okhttp.OkHttpClient,android.content.Context)>
		SHA-256: 995deb58cb2c2734aeae1d4b32c5d729473e1be4885fdaa13e3402684c301fd1
		Secure: false

Findings in Java Class: com.valentus.network.NetworkService

	 in Method: com.squareup.okhttp.OkHttpClient addSSLTLS(com.squareup.okhttp.OkHttpClient,android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer357, $r12, varReplacer357)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #995deb58cb2c2734aeae1d4b32c5d729473e1be4885fdaa13e3402684c301fd1)
			First parameter (with value "TLSv1.2") should be any of {TLS}
			at statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer362)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer367, $r12, varReplacer367)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer357, $r12, varReplacer357)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer367, $r12, varReplacer367)


Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1122, varReplacer1122, varReplacer1122)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1122, varReplacer1122, varReplacer1122)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 7

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 6
	ConstraintError: 1
=====================================================================
