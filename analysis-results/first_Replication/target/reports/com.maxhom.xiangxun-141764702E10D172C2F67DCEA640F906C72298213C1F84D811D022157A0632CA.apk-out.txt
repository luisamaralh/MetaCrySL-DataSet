Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.maxhom.xiangxun-141764702E10D172C2F67DCEA640F906C72298213C1F84D811D022157A0632CA.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1505)
		Method: <com.uzmap.pkg.uzkit.b.b: java.security.KeyStore a(java.lang.String,java.lang.String)>
		SHA-256: 505c162b439e16f8a97c07aba1068b07b97e4ae4f4ec8ea93ddd92aeef9ae67c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1735)
		Method: <com.uzmap.pkg.a.e.e: java.lang.String a(java.lang.String)>
		SHA-256: 3b79dd5c67feed4430d7fe7d180867540c829438272af0320079a3d9a16409dc
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1511)
		Method: <com.uzmap.pkg.uzkit.b.a: void <init>(java.security.KeyStore,java.lang.String)>
		SHA-256: 2f441972b4dcddf2b518b871933f1c294726bb8a24a1c3a331a15c77295004e4
		Secure: false
	Object:
		Variable: r10
		Type: java.security.SecureRandom
		Statement: specialinvoke r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.uzmap.pkg.uzkit.b.a: void <init>(java.security.KeyStore,java.lang.String)>
		SHA-256: 9ed4f03026ee40cd5ee4e772e1a653159e62161ea1ce2fe6977edcd6e8b62f9c
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1877)
		Method: <com.uzmap.pkg.uzcore.UZCoreUtil: java.lang.String toSHA1(java.lang.String)>
		SHA-256: 87ffc9f008076be4e82fe53275cae16c38631bf894995871c9affdc92ccd01c0
		Secure: true
	Object:
		Variable: $r7
		Type: javax.net.ssl.KeyManager[]
		Statement: $r7 = virtualinvoke $r5.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.uzmap.pkg.uzkit.b.a: void <init>(java.security.KeyStore,java.lang.String)>
		SHA-256: d2ec173ad0c2a4aa64c75479ea517fa30fd7d368835996a381e7235a235fa699
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.uzmap.pkg.a.e.e: java.lang.String a(java.lang.String)>
		SHA-256: 69a6e11629d5ad4330e68020ab53d94117f3fa7ade657ab7d93f293532f4646b
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1508)
		Method: <com.uzmap.pkg.uzcore.UZCoreUtil: java.lang.String toMD5(java.lang.String)>
		SHA-256: 75063a76f0f7d2fae19d1c2b65b3375fa6bcf1c5ec463a454832d7de8f310ec0
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1504)
		Method: <com.uzmap.pkg.uzkit.b.b: java.security.KeyStore a(java.lang.String,java.lang.String)>
		SHA-256: 5044cbec9e368cbc1439251a2436640c805bdee4fa239a795ef7571d39314f98
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.uzmap.pkg.uzsocket.b.b: java.lang.String a(java.lang.String)>
		SHA-256: 781293db0c09f6b61d0fa4e7bde0481406959dbef1f2703348c8abbe379d7262
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2675)
		Method: <com.uzmap.pkg.uzsocket.b.b: java.lang.String a(java.lang.String)>
		SHA-256: ebebf2736dbf0b522a34c0ea6fbc4031631daf2b6e5008065b25ecc332b53ce3
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r5 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer1510)
		Method: <com.uzmap.pkg.uzkit.b.a: void <init>(java.security.KeyStore,java.lang.String)>
		SHA-256: 5a5838c5194c0cc4d780f3fb2ca35ff604cff2fbd931d1ec4e0a7d9c3ec5ab8a
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.uzmap.pkg.uzcore.UZCoreUtil: java.lang.String toMD5(java.lang.String)>
		SHA-256: 17c2807365c8dab68237ab842bbce5e177ccf6e41da8313d4ccc742758f897d6
		Secure: true

Findings in Java Class: com.uzmap.pkg.uzkit.b.a

	 in Method: void <init>(java.security.KeyStore,java.lang.String)
		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #5a5838c5194c0cc4d780f3fb2ca35ff604cff2fbd931d1ec4e0a7d9c3ec5ab8a)
			First parameter (with value "X509") should be any of {PKIX}
			at statement: $r5 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer1510)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, r11, r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, r11, r10)


Findings in Java Class: com.uzmap.pkg.uzsocket.b.b

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ebebf2736dbf0b522a34c0ea6fbc4031631daf2b6e5008065b25ecc332b53ce3)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2675)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 2
=====================================================================
