Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.cabmanng.android.passenger-06632BC1D67CDC3EA967A8288F285E301A2ED65604C29E5F2B3231921FC4C177.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Alive 39103  5000
Alive 72116  5000
Alive 42943  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24642)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: bae162e87f630437af6f50bbfaef14f5b684895c5f63a60d869904f15f409b2
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <utilslib.a: byte[] b(utilslib.b,utilslib.c)>
		SHA-256: deaa291ca3d0ffc59d7ad7c1373c0bb84caba0350d0558fb8d4c3e426704100e
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)
		Method: <utilslib.p: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 11e4b9e822e63d4e2ebae0304751656dada7c05ac1ac98dc04c4fdb80ba34128
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <utilslib.a: byte[] b(utilslib.b,utilslib.c)>
		SHA-256: 93956974d148af49c7bedf886430bab7e5a8bdbb54e9810aa547f86e20abd43c
		Secure: false
	Object:
		Variable: varReplacer26788
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer26788)
		Method: <utilslib.p: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 9b21b2eccad8a5dba1deaa4b20d4767da49a3f508d4c76ebfcc5fb107dda2067
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer26788)
		Method: <utilslib.p: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 2c4f9cac8a0bc8d7c6fd6ad02a506ac7048d394033af9a713009d4d50da770a5
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26757)
		Method: <com.android.volley.InternalUtils: java.lang.String sha1Hash(java.lang.String)>
		SHA-256: 7c4414112c32db68e23a17ff017e6a8280f0b4a0f04f495ec962a2c493614a04
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <utilslib.a: utilslib.b a(byte[],utilslib.c)>
		SHA-256: 70e7f4938fbe4c1f07f7d6a17c56b1d43684f9ea3071f1a0c7a7fa262e5066f
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.SSLContext
		Statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer22163)
		Method: <com.paypal.android.sdk.bg: okhttp3.ai a(int,boolean,boolean,java.lang.String,java.lang.String)>
		SHA-256: 4a459a0ca55bfcd3284efbeaf2daf4d254e958bfbd1010c48194bdff869e2b60
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: f944777d9d8e89e0f8adf0af9c3ccd064733a31fa3f1e06304f27dc756cb592b
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <utilslib.a: byte[] a(int)>
		SHA-256: fb29420aa97b5775051d78ac21aaddb65cadc18b767a2ea9df4d12c22313ecc6
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <utilslib.g: void <init>(android.content.Context)>
		SHA-256: aa867a8eeaf783aa542b950740bdf67aab6849cf884333f62afc1a67261dec44
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <utilslib.g: java.lang.String a(int)>
		SHA-256: c90f66b795d19daaa85e6efdc40f16cb85a607d421a103468da4a80ec047498e
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <utilslib.g: void d()>
		SHA-256: decff693ee2c26a537ada762670d192f55bf3bd79d0f45c2e56e9690f5ac7147
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer24681)
		Method: <com.google.android.gms.iid.b: java.security.KeyPair a()>
		SHA-256: d4c0204a22a986bb7bde3718b31d0e00030da1cef75ef1f286ba6f0b56ae8372
		Secure: true
	Object:
		Variable: varReplacer20782
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer20782)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: 5b181980a8c16a89a745d4fcc75b9404a4db0e41ccce2b762c63d391ec1b07ae
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.android.volley.InternalUtils: java.lang.String sha1Hash(java.lang.String)>
		SHA-256: 51d771176588bd9b377838ae77608f0ca53802f65bd7d4d703667e5fef52b40b
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.paypal.android.sdk.bk: void <init>(java.io.InputStream)>
		SHA-256: 91e8b28f911461d611cb6c91ce26981fd96629ddc47effbfee4107508e445622
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer20741)
		Method: <utilslib.a: byte[] b(utilslib.b,utilslib.c)>
		SHA-256: 38bf30cb94d3e3fd4b79eaf76c2c5d1769cf31d141cbf3d50db0e577ab929ff
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer26891)
		Method: <utilslib.a: utilslib.b a(byte[],utilslib.c)>
		SHA-256: dfc09839df4b98fc7a1bf225a007e85a3f38ad17e9cb94b0edfeb42ba2e3e711
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer20788)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: 989b3f2b729ecee6f857c714118fd6e1604bacd567ebade0a4252e12840e6bd7
		Secure: false
	Object:
		Variable: $r15
		Type: javax.net.ssl.SSLContext
		Statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer22875)
		Method: <com.paypal.android.sdk.bk: void <init>(java.io.InputStream)>
		SHA-256: 4e86fd2893cb9b5484f99db14ad2420feba5ab981b26c2528135c46c25877fda
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <utilslib.a: utilslib.b a(byte[],utilslib.c)>
		SHA-256: 36bf61a68e0f5e447bd023cbc0807d55625d03346ac42018a6e3e97ba704224a
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer20776)
		Method: <utilslib.a: utilslib.c a(java.lang.String)>
		SHA-256: 3e28745dbeb0e679f922a87582d90ac37c20d000cc2607df59ce5eb74c995462
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.b: java.security.KeyPair a()>
		SHA-256: 7783709ffb59212b53ecfaa3646ac9e01977d69d48097298577a30772a4d8880
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <utilslib.g: java.lang.String c(java.lang.String)>
		SHA-256: 7bf7c978af92b6417eda45aae21d5de964b14b7f5aa26ca2cb6c4f39074fa5d3
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.androidquery.util.AQUtility: byte[] getMD5(byte[])>
		SHA-256: 4789b4ccbb1d42d5adf2e8b25b1bc85d41349ba6a539a507bc032b4b1d65f0c4
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer26894)
		Method: <utilslib.a: byte[] a(int)>
		SHA-256: a6bf9c6b0b989700563b65fce37b83d6f6536180b1ed9fee6da7c0a7012c7a76
		Secure: true
	Object:
		Variable: varReplacer20788
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer20788)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: aee8f061079ad25349f878552e1d491697dd37ad5e0c8100ce29edad28914ac1
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer20774, $i0, varReplacer20775)
		Method: <utilslib.a: utilslib.c a(java.lang.String)>
		SHA-256: e39d024396134402a20672a4e7f44ddfab930bde87bd974a82f7ea66c5f44d52
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer20746)
		Method: <utilslib.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 356296c53fed441ea2b8446c6001d38e9584e72fccfcd37a60073be28c56ae99
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <okhttp3.internal.o: okio.ByteString a(okio.ByteString)>
		SHA-256: acda6d00e6d7c8bd95ce4103ea2444534c57c44135882f6740a39a37032a030a
		Secure: true
	Object:
		Variable: varReplacer20776
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer20776)
		Method: <utilslib.a: utilslib.c a(java.lang.String)>
		SHA-256: 1255e0213a8f80ded47eab4e43cfd32a8cb39378fdd5115bb9177150bedd139d
		Secure: false
	Object:
		Variable: $r21
		Type: javax.net.ssl.SSLContext
		Statement: $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer22932)
		Method: <okhttp3.ag: void <init>(okhttp3.ai)>
		SHA-256: 97335079c75cfd9a2dd7296488bc9ff0f6c2f226c136f3bceb43babd49837e71
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2191)
		Method: <utilslib.g: void <init>(android.content.Context)>
		SHA-256: de628b721ec955b78cc53c80a2541069dd518154753cd6dabe900db7d89b8657
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2196)
		Method: <utilslib.g: javax.crypto.Cipher f()>
		SHA-256: f599ae805bba5734a849dc8daa8ad22d94253cd446ed0635471e3f37f70cedc9
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27061)
		Method: <com.androidquery.util.AQUtility: byte[] getMD5(byte[])>
		SHA-256: 1bc7a4c6888f71c0a3465823e8c43da2a58055055926cd7380fafa56fc4eca92
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzdu(java.lang.String)>
		SHA-256: 91d6ae651ea468ee55b204b8531f2e40ebb8a460987b346249056da8de8b5b12
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer29844)
		Method: <okhttp3.internal.o: okio.ByteString a(okio.ByteString)>
		SHA-256: 10a42f290024bf9c0f4cd41c2ab3f0357bfc8ac90aced0f84c8f3b423d3d7474
		Secure: true
	Object:
		Variable: varReplacer20775
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer20774, $i0, varReplacer20775)
		Method: <utilslib.a: utilslib.c a(java.lang.String)>
		SHA-256: 90caeb6a6e09ecd3da77367ee1ec26f71d6ae1aaee89434bdce956e2d75646c0
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer30299)
		Method: <com.tdispatch.passenger.d.c: java.lang.String b(java.lang.String)>
		SHA-256: f89b362ec772eeaf71047c87b12c46e5cbea13cf368f65e928f3629c26f3ae78
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 4c7add4d41f06fa92bd57618e77b2df1a78eb8d44e5f363952002486d67608cc
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer26790)
		Method: <utilslib.p: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 70a4cac0c7aa7ebd86112dbb820f453f0aa20b0049a4aaff5d3a934bed504261
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer20787)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: 5ccb2b69e08750203b6525b46246648db08445cdc193e9c06c51fc1de5abc731
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2179)
		Method: <utilslib.g: java.security.SecureRandom e()>
		SHA-256: 712616f422e0f3a23d7027378c15c1200f1e74f49268414b356d8b3a0ed4e478
		Secure: true
	Object:
		Variable: varReplacer2191
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2191)
		Method: <utilslib.g: void <init>(android.content.Context)>
		SHA-256: 80de8dc40984dc2203c1f2000e9660336bc372dd62c887e28a4730fc1ce5b219
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <utilslib.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 4524495dfa3fecb4e6af9082328a3644e0e2c7ca52c9e390e41dd827fbce5634
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.paypal.android.sdk.ar: java.lang.String a(java.lang.String)>
		SHA-256: 51e13467ab151b2c36ea6e990fafcaf8145699ddd626190a58a24426292bcc39
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer2176, varReplacer2177)
		Method: <utilslib.g: java.security.SecureRandom e()>
		SHA-256: 7707afb198dea3c6abc18b57cf2aab41893f0f2b4ae60770cf17ed7bf8302c5
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tdispatch.passenger.d.c: java.lang.String b(java.lang.String)>
		SHA-256: 34ba3c9bb7fa93036505409e6f624148d580a4ef39cd6b74abdee3d1e3232629
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer20782)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: 48d71ad1dbd752c5fdbb04ed48f73eeaba8bc79cab8309c34e48dcb98c4cb15f
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer22882)
		Method: <com.paypal.android.sdk.bk: void <init>()>
		SHA-256: 8dfb6f7905075bb192fd09c0d38f2c68bb91c30070dd435f9fd73875bb31de78
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: 4a4fcc961254ce892ff69201f61d125b482ffbb7934f8253126b2e5188129dbd
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer28080)
		Method: <com.paypal.android.sdk.ar: java.lang.String a(java.lang.String)>
		SHA-256: 73ee36d16e1f165f5249c4ec301a9f89326ee278ccd5e7b841331380d92000f5
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer20785, varReplacer20786)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: ee7af7cffe82866376d16302a18c01fc184dea9c5c870854068535857e075219
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3713)
		Method: <utilslib.g: java.lang.String c(java.lang.String)>
		SHA-256: 85a8ad64041e29dcf1006016150dc8d0e8869a6bf373944d982e3799796cd782
		Secure: true
	Object:
		Variable: varReplacer20786
		Type: int
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer20785, varReplacer20786)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: 129ec7a359734f2e435c355f97f990f8d216717b9c3b73a01170bcdbd50b98ae
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2197)
		Method: <utilslib.g: javax.crypto.Cipher f()>
		SHA-256: e930b3e6f0350a23a85d342d3b07ad27be4ef4e58eaa705bfaa3b6d3e82d0b4f
		Secure: true

Findings in Java Class: utilslib.g

	 in Method: javax.crypto.Cipher f()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f599ae805bba5734a849dc8daa8ad22d94253cd446ed0635471e3f37f70cedc9)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2196)


	 in Method: void <init>(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2191)


Findings in Java Class: utilslib.a

	 in Method: utilslib.c a(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer20788)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #5ccb2b69e08750203b6525b46246648db08445cdc193e9c06c51fc1de5abc731)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer20787)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer20782)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer20785, varReplacer20786)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #ee7af7cffe82866376d16302a18c01fc184dea9c5c870854068535857e075219)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


	 in Method: byte[] b(utilslib.b,utilslib.c)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer20742, $r5, $r2)


	 in Method: utilslib.b a(byte[],utilslib.c)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer26892, $r5, $r2)


	 in Method: utilslib.c a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer20774, $i0, varReplacer20775)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer20776)


Findings in Java Class: com.paypal.android.sdk.bg

	 in Method: okhttp3.ai a(int,boolean,boolean,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #4a459a0ca55bfcd3284efbeaf2daf4d254e958bfbd1010c48194bdff869e2b60)
			First parameter (with value "TLSv1") should be any of {TLS}
			at statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer22163)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer22161, r23, varReplacer22161)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer22161, r23, varReplacer22161)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bae162e87f630437af6f50bbfaef14f5b684895c5f63a60d869904f15f409b2)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24642)


Findings in Java Class: utilslib.p

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer26788)


Findings in Java Class: com.paypal.android.sdk.bk

	 in Method: void <init>(java.io.InputStream)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer22873, $r16, varReplacer22873)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer22873, $r16, varReplacer22873)


	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer22879, varReplacer22879, varReplacer22879)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer22879, varReplacer22879, varReplacer22879)


Findings in Java Class: okhttp3.ag

	 in Method: void <init>(okhttp3.ai)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer22929, varReplacer22929, varReplacer22929)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer22929, varReplacer22929, varReplacer22929)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 61

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 5
	IncompleteOperationError: 1
	RequiredPredicateError: 21
=====================================================================
