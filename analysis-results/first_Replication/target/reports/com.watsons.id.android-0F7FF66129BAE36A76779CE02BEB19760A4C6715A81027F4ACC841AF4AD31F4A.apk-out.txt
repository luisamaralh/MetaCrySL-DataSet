Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.watsons.id.android-0F7FF66129BAE36A76779CE02BEB19760A4C6715A81027F4ACC841AF4AD31F4A.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.c.a.c: void d()>
		SHA-256: 5f11170c0830485070437f05ddb232c64d2202d1714075160e608039cee429ab
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3808)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: f94174ef388fdd8ac9437cf5d6c3d8c0f6f97594d502b43308e931fb69fbbbe6
		Secure: false
	Object:
		Variable: varReplacer3809
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3809)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 5ad7dbee6ee357f3600fdddbfcc620cc86a96adf076e7bf2db6544884fa9e09e
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer3804, varReplacer3805)
		Method: <com.c.a.a: byte[] a(int)>
		SHA-256: 341804a7d4f92e4aab6bdd4b0486aa1e1de5ad4b7ef5cf005e2ea9d34e1da35d
		Secure: true
	Object:
		Variable: varReplacer3808
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3808)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 5962a136ef1c833199f4d10985bd87e203a1c60a5c8aeb92212039cd38dc542e
		Secure: false
	Object:
		Variable: r14
		Type: java.security.SecureRandom
		Statement: specialinvoke r14.<java.security.SecureRandom: void <init>()>()
		Method: <parknshop.parknshopapp.Utils.f: c.ak a()>
		SHA-256: 8d0642c9b9f4d9f53ae393fba9113dac0b32662ae94782b26c676bc69e4472e8
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a.a: com.c.a.b a(byte[],com.c.a.f)>
		SHA-256: 36bf61a68e0f5e447bd023cbc0807d55625d03346ac42018a6e3e97ba704224a
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 4524495dfa3fecb4e6af9082328a3644e0e2c7ca52c9e390e41dd827fbce5634
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer3820)
		Method: <com.c.a.c: void d()>
		SHA-256: db754cf0774c0ee0a800ff379305617d1c7d29629656aff6e3ff2992b554b76c
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.c.a.a: byte[] a(com.c.a.b,com.c.a.f)>
		SHA-256: 36ccaffd5df31af12c6519920ab1cc93c8763b7b3de943b0e4737a6f5039543
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer212)
		Method: <parknshop.parknshopapp.r: c.ak a(c.ak)>
		SHA-256: af4740862966da71eb79b90c208c4417ffdba8b440f832dcffba07bcdb36ba63
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer221)
		Method: <parknshop.parknshopapp.Utils.f: c.ak a()>
		SHA-256: b0ffd2f4eeaad05d8b69ee1ce8f596b77e58d993b67e01cb604dde9990c518dd
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer816)
		Method: <c.aj: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: 2703cefaa52cb214f85d295f998fe3430dc37bd65586cc93e8deade5d3e5b0bf
		Secure: false
	Object:
		Variable: varReplacer3790
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3790)
		Method: <com.c.a.a: com.c.a.f a()>
		SHA-256: 5a38f5cc70c154c28f68876afa19903ffbdf2511090a1eed226414e28011daff
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 4a4fcc961254ce892ff69201f61d125b482ffbb7934f8253126b2e5188129dbd
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3809)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: b288b94b258f54fdac60a78c97e0af5e3d917f4f6c4be6b3f2473426f79f36cd
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4045)
		Method: <com.c.a.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 5dabff4f3b59126c566c03a6b8712a05f2c69fb84089e445a5ef19a69598b9e0
		Secure: true
	Object:
		Variable: varReplacer3793
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3793)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String)>
		SHA-256: 7bc5b372ceb775346a4ee4aba0fc164bc40bf69924d2f0a2b9d74d82058fdeb9
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.c.a.a: byte[] a(int)>
		SHA-256: 3f11a2aebe407b793940ab5a06c1a9c0c3504da88c0e2c8f3f4c736766d43690
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer3812, varReplacer3813)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: e30cfbf360298901ad5682ca1346a3ae269571788e0e344820d5c5a85606b531
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3790)
		Method: <com.c.a.a: com.c.a.f a()>
		SHA-256: 75b68ddddab8b5d2f9190fd8b982252c3b7084511a873a73395a228bd61d3f25
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.c.a.a: com.c.a.b a(byte[],com.c.a.f)>
		SHA-256: 70e7f4938fbe4c1f07f7d6a17c56b1d43684f9ea3071f1a0c7a7fa262e5066f
		Secure: true
	Object:
		Variable: varReplacer3813
		Type: int
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer3812, varReplacer3813)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 704157904a884bd056d0b503500a57623dfd46ba807f85db6d2f9b98de20de24
		Secure: false
	Object:
		Variable: varReplacer3800
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer3799, $i0, varReplacer3800)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String)>
		SHA-256: ebd7be9aed3cb7d3cc958c387a55acf3fc4b69b71cb9fe2af72aefad4649efd3
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer3791)
		Method: <com.c.a.a: com.c.a.f a()>
		SHA-256: f7951a160299896599526a77a648689537ef64486b080c55183fb74d7f667882
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer3799, $i0, varReplacer3800)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String)>
		SHA-256: 362e6501dae32d3d028e9fb8947a5a17ba335006550a95b8f564e44dfe4d0f0b
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4258)
		Method: <com.c.a.a: byte[] a(com.c.a.b,com.c.a.f)>
		SHA-256: 5be0c4667bc62ea85ccc886961192393c1fad88dee19249fd0e282c1de3be709
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.c.a.a: com.c.a.f a()>
		SHA-256: 49b0991ec4db97511e0a9605f37cdac92c6c6619f8973ee389e3d86c78826961
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.c.a.a: byte[] a(com.c.a.b,com.c.a.f)>
		SHA-256: 70e7f4938fbe4c1f07f7d6a17c56b1d43684f9ea3071f1a0c7a7fa262e5066f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3807)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 5f89a71e4225a70cf457153e9bbd235a0ffba4281d293753857e560d054ddf49
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3793)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String)>
		SHA-256: 56c68bdeb21e4a236d4db88dd622993177b331b3bf342fd8a237c58fa291802d
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4044)
		Method: <com.c.a.a: com.c.a.b a(byte[],com.c.a.f)>
		SHA-256: d5a65f4fb4b4b03e098a9f7f172ef7338b23c49e26ace1b055de8658f7cff725
		Secure: false

Findings in Java Class: parknshop.parknshopapp.r

	 in Method: c.ak a(c.ak)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer213, r16, varReplacer213)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #af4740862966da71eb79b90c208c4417ffdba8b440f832dcffba07bcdb36ba63)
			First parameter (with value "TLSv1.2") should be any of {TLS}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer212)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer213, r16, varReplacer213)


Findings in Java Class: com.c.a.a

	 in Method: com.c.a.f a(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3808)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #5f89a71e4225a70cf457153e9bbd235a0ffba4281d293753857e560d054ddf49)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3807)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer3812, varReplacer3813)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #e30cfbf360298901ad5682ca1346a3ae269571788e0e344820d5c5a85606b531)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3809)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


	 in Method: com.c.a.f a()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3790)


	 in Method: com.c.a.f a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer3799, $i0, varReplacer3800)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3793)


	 in Method: byte[] a(com.c.a.b,com.c.a.f)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4257, $r5, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: com.c.a.b a(byte[],com.c.a.f)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4043, $r5, $r2)


Findings in Java Class: parknshop.parknshopapp.Utils.f

	 in Method: c.ak a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer220, r16, $r0)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer220, r16, $r0)


Findings in Java Class: c.aj

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer817, r7, varReplacer817)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer817, r7, varReplacer817)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 32

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	ConstraintError: 2
	RequiredPredicateError: 16
=====================================================================
