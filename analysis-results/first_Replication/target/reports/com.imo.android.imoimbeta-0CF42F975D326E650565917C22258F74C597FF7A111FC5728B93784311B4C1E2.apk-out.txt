Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.imo.android.imoimbeta-0CF42F975D326E650565917C22258F74C597FF7A111FC5728B93784311B4C1E2.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Alive 401255  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.imo.android.imoim.util.cf: void <clinit>()>
		SHA-256: 25ab1c9647b55ff68d219097ef78cd97e1a81657e25d33c2e01e417c0a331a5a
		Secure: true
	Object:
		Variable: varReplacer10742
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r2, varReplacer10741, $i0, varReplacer10742)
		Method: <com.imo.android.imoim.h.b: void <clinit>()>
		SHA-256: ed2530adfcf398667d9b8e8bed8cf417867b5fb62a60e3bad3b048ca6cb66994
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.h: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 7f2287f59d6a255406bc4b98d50510cf18c3958510c6a05df9078c5f076acd3d
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13758)
		Method: <com.imo.android.imoim.h.b: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 80ab388fc80c777e4e2d40974956559916366e72b51a6366cad4552b12b6550b
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer13743)
		Method: <com.imo.android.imoim.util.ac$1: void run()>
		SHA-256: a4a5414b8a34e2b8909d15b87182662d79474a163a2c0d4eb1e399a21188ad7e
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.g: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 4b41793ee0b8f2eedaf2e50095ab42e173ac0cc97c6d5acba53ebd4755ba3f4d
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.h: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 17a4207782cd4016caf857666b408e8e923a66fe77c19724e9227de6fa2f1210
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8117)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: d287e4f0ac259e4d45e2d901db62b9690a44c02c095e88e119963ae6f875369
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.facebook.ads.internal.h.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 8b3145b340a6eb159a4d880bda44d3cff594af2332e72af75d6e28d17186dbf7
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r2, varReplacer10741, $i0, varReplacer10742)
		Method: <com.imo.android.imoim.h.b: void <clinit>()>
		SHA-256: f913a83aeb02498acb1f3f8031f5e86e673d67bbc8cd3c6637cd706152e36701
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.g: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 9899cf5a3682f87a4efa5e29363bc8e94325caa0042a3cf688afe4a1c9658092
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: 667d1c74233dc4695844b2a369b7ca168b7b3f396ce37cb94fd304b9f22f5e14
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.SecretKey
		Statement: $r1 = virtualinvoke $r0.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.imo.android.imoim.h.b: javax.crypto.SecretKey b()>
		SHA-256: a03b96a9b99c568a4fbe7de2afd83544be1155f482da9ce4c1399c4f96a9db5f
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.imo.android.imoim.h.a: byte[] a(byte[],java.security.PublicKey)>
		SHA-256: defbc4b7fb5d3c71cbf4d8f2e717a32c0a66bc2b21ba0dd8b3d675ed5143a7a6
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2553)
		Method: <com.facebook.ads.internal.l.ai: java.lang.String a(java.lang.String)>
		SHA-256: e48b052d5e056254eaae9dd928aafeeead7b6cefe1a9c653e6783487bdd7dc26
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.imo.android.imoim.h.b: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 91a37520e60e11c1702b2824dc7b467f70d76b0c851ccfcf13a629cc8f3800dd
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer8054)
		Method: <com.google.android.gms.iid.c: java.security.KeyPair a()>
		SHA-256: 736671963aeb470663b0703f7ccd4d8ac8133b3431e1c0b4bedeb2a5a7cdb580
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.KeyGenerator
		Statement: $r0 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer10747)
		Method: <com.imo.android.imoim.h.b: javax.crypto.SecretKey b()>
		SHA-256: a3512219adc2c38f1f0d776ec468293244eb870c6e03d925d4dc840dbe3eb602
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10718)
		Method: <com.imo.android.imoim.h.a: byte[] a(byte[],java.security.PublicKey)>
		SHA-256: 5349129a1f4bc4fbe670f057571f29322abbe43f5c3a56fd8e454a56651529f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9442)
		Method: <com.facebook.ads.internal.h.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: dd7cba8c05605ad9f3b923e04d3cdbbe1264f0a9279674f55103e60d470c0527
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.h: java.security.KeyPair d(java.lang.String)>
		SHA-256: 301abe5eedec25032ed78671b20c5929b507a1652b124624cbb79d4102bb913b
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.imo.android.imoim.h.b: void <clinit>()>
		SHA-256: 18bcc90b54557daba9b030269b839b6f7bd528faa48c839ebb56281cddb076b
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.imo.android.imoim.h.b: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 94d685a2e23337f2dbc5ad0b9ac8c95f8373f23c03effa22c106880a7c7a5a6d
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.imo.android.imoim.o.j: java.lang.String a(java.io.RandomAccessFile)>
		SHA-256: ca31f5f0aabb4440a4ebde58742726d4292b93dbadcc4386bf2be980aedbfe07
		Secure: true
	Object:
		Variable: varReplacer13743
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer13743)
		Method: <com.imo.android.imoim.util.ac$1: void run()>
		SHA-256: de95c33e8256d19b7bc47f4f249f1baef587655baa68229d8d75e3cce49476d2
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.l.ai: java.lang.String a(java.lang.String)>
		SHA-256: 8c8930a8c187a162f4b47692da5b7288022b0896c99ddf4095e0d77576fe0e08
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.c: java.security.KeyPair a()>
		SHA-256: 588458274b445946250cb882f03e117802589055ad1c0641c873f0c9f0a9b58b
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11344)
		Method: <com.imo.android.imoim.o.j: java.lang.String a(java.io.RandomAccessFile)>
		SHA-256: 9b157ceaae3227c5bc95634a5cc3addbc92971b2a096cdd186d9105c415e2aef
		Secure: false

Findings in Java Class: com.google.android.gms.iid.g

	 in Method: java.lang.String a(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #4b41793ee0b8f2eedaf2e50095ab42e173ac0cc97c6d5acba53ebd4755ba3f4d)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.a

	 in Method: java.lang.String a(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d287e4f0ac259e4d45e2d901db62b9690a44c02c095e88e119963ae6f875369)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8117)


Findings in Java Class: com.imo.android.imoim.h.a

	 in Method: byte[] a(byte[],java.security.PublicKey)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5349129a1f4bc4fbe670f057571f29322abbe43f5c3a56fd8e454a56651529f)
			First parameter (with value "RSA/None/NoPadding") should be any of RSA/{ECB, Empty String}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10718)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer10719, $r1)


Findings in Java Class: com.imo.android.imoim.o.j

	 in Method: java.lang.String a(java.io.RandomAccessFile)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #9b157ceaae3227c5bc95634a5cc3addbc92971b2a096cdd186d9105c415e2aef)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.imo.android.imoim.h.b

	 in Method: byte[] a(byte[],javax.crypto.SecretKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer13756, $r1, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer13756, $r1, $r3)


	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r2, varReplacer10741, $i0, varReplacer10742)


Findings in Java Class: com.imo.android.imoim.util.ac$1

	 in Method: void run()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer13743)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 28

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 7
	ConstraintError: 3
	TypestateError: 1
=====================================================================
