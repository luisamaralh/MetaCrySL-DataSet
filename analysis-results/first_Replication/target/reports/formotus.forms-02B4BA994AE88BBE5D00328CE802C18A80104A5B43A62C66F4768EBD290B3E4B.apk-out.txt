Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/formotus.forms-02B4BA994AE88BBE5D00328CE802C18A80104A5B43A62C66F4768EBD290B3E4B.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <formotus.forms.instances.ManagerInstances: org.apache.http.impl.client.DefaultHttpClient getHttpClient()>
		SHA-256: 49b2ae8f495806925962d92ea6ad6264bcd77c57f95bc5a10bec1b8fd5109f2f
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2630)
		Method: <formotus.forms.authentication.CustomSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: e502a9eae28fa7fa5251b2deab92fd7311d8f13614cf82075451dca85de87e5a
		Secure: false
	Object:
		Variable: varReplacer2818
		Type: java.lang.String
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2818)
		Method: <formotus.forms.Utils: java.lang.String decryptPassword(java.lang.String)>
		SHA-256: 54a49207495684e58b653f588a0cd08213dd8e55bf969c7fd5d8bea9167aa220
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1566)
		Method: <formotus.forms.Utils: java.lang.String encryptPassword(java.lang.String)>
		SHA-256: 8ba41afea316d701e7ffdff9f3e1629a457ad182f70bc76e9636e59d0d2c41a2
		Secure: false
	Object:
		Variable: r8
		Type: java.security.SecureRandom
		Statement: specialinvoke r8.<java.security.SecureRandom: void <init>()>()
		Method: <formotus.forms.formsManager.FormotusWebService: void <clinit>()>
		SHA-256: 513ce563e416549046b65e3be0a1d428c3e133c8702876b5a20f4c239ff31205
		Secure: true
	Object:
		Variable: r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2818)
		Method: <formotus.forms.Utils: java.lang.String decryptPassword(java.lang.String)>
		SHA-256: 5ad8c4b214acb99c0ff8881c534832c39e083380e3a14c38e6fdbde726ff3736
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <formotus.forms.Utils: java.lang.String decryptPassword(java.lang.String)>
		SHA-256: d10aa8ddf6c2f294f699b1ff36a899213bdaf4f7bbd5c6d14ecbf597d41990ee
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer557)
		Method: <formotus.forms.formsManager.FormotusWebService: void <clinit>()>
		SHA-256: cca75263a32ed5db036240958d0c14fcff5f49a33545adfb0c31dd5d5d26edd2
		Secure: false
	Object:
		Variable: varReplacer1565
		Type: java.lang.String
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1565)
		Method: <formotus.forms.Utils: java.lang.String encryptPassword(java.lang.String)>
		SHA-256: 52c79ec42cce2608178309b3a17e7920e587d8ff6be9c7dad9d284dc67c9e8a7
		Secure: false
	Object:
		Variable: r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1565)
		Method: <formotus.forms.Utils: java.lang.String encryptPassword(java.lang.String)>
		SHA-256: 298a9980a9627cdf4e2acf3ef5c79816b74fda4d493316f9106914d31c9dd05e
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2820)
		Method: <formotus.forms.Utils: java.lang.String decryptPassword(java.lang.String)>
		SHA-256: 42a0713996349785d119ec5efefb00c632cd18897fec26889cc2527e28b6afbf
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <formotus.forms.Utils: java.lang.String encryptPassword(java.lang.String)>
		SHA-256: d29a581d42f5953884dceda08c59448cadb686f00ecda215133d942b25b8add7
		Secure: false

Findings in Java Class: formotus.forms.authentication.CustomSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2628, r5, varReplacer2628)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2628, r5, varReplacer2628)


Findings in Java Class: formotus.forms.Utils

	 in Method: java.lang.String encryptPassword(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1565)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1560, $r1)


	 in Method: java.lang.String decryptPassword(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2819, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2818)


Findings in Java Class: formotus.forms.formsManager.FormotusWebService

	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer559, r10, $r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer559, r10, $r4)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 12

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 8
=====================================================================
