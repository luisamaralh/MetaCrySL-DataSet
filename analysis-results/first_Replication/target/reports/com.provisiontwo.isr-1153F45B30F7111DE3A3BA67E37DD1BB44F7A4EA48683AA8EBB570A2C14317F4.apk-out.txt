Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.provisiontwo.isr-1153F45B30F7111DE3A3BA67E37DD1BB44F7A4EA48683AA8EBB570A2C14317F4.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.mm.algorithm.MD5: java.lang.String getMessageDigest(byte[])>
		SHA-256: f9d57de5f460dffb636596b0fda0470337543f67320a3d0a6000c6125fdd5c06
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKeyFactory
		Statement: $r8 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer385)
		Method: <com.tencent.mm.sdk.platformtools.LogHelper: void writeToStream(java.io.PrintStream,byte[],java.lang.String,java.lang.String)>
		SHA-256: 7ee91bcd8b5282ea4ab05be90bc9c08c384489917e4c9119c3188fbfe71b8f78
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.mm.sdk.platformtools.LogHelper: void writeToStream(java.io.PrintStream,byte[],java.lang.String,java.lang.String)>
		SHA-256: 3f9926bdf527602ea45fc7bc0f3a0983861f76f95c4a49e3f70ddb8eb8a6e773
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer391)
		Method: <com.tencent.mm.algorithm.MD5: java.lang.String getMessageDigest(byte[])>
		SHA-256: 8720ce9ba64152c73b6f5b82065054eb78e93f1e5122afcf69bf0db9c4c8e9c0
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer797)
		Method: <com.tencent.open.utils.HttpUtils$CustomSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: f6bf46c8175543008a6dfa1b0f5448366bfc1082e6b095058c08fac1b13ee3a4
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.open.utils.Util: boolean a(android.content.Context)>
		SHA-256: a270ad1e474c7014c22f8189d40a6ed8de9e6ca6418b6f9a16de8aea80cdb347
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.tencent.open.utils.HttpUtils: org.apache.http.client.HttpClient getHttpClient(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 20492e4fb32e47e28a7ead4d25141df0a45263484a75ab23a7f3a5178dcc300c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer803)
		Method: <com.tencent.open.utils.HttpUtils$MyX509TrustManager: void <init>()>
		SHA-256: 6584f728fc4defc317907135ef843e9d84df54c0c3bfbca3a8c34b9a8f566726
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer389)
		Method: <com.tencent.mm.sdk.platformtools.LogHelper: void writeToStream(java.io.PrintStream,byte[],java.lang.String,java.lang.String)>
		SHA-256: cbfeb9bdc1c8d050a3e960cb60c7b92cbcf39d3d5e76460a12f1c1c8a9e2ce2d
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1116)
		Method: <com.tencent.open.utils.Util: boolean a(android.content.Context)>
		SHA-256: cb8230725673035c8eec2448b3b24960538252990734f9a9dfbf0df8264a2efd
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.SecretKey
		Statement: $r9 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r7)
		Method: <com.tencent.mm.sdk.platformtools.LogHelper: void writeToStream(java.io.PrintStream,byte[],java.lang.String,java.lang.String)>
		SHA-256: 448449e0709e0526695e283fbaa2d735286a245b7be948be9c23aa9299ab4a05
		Secure: false

Findings in Java Class: com.tencent.mm.sdk.platformtools.LogHelper

	 in Method: void writeToStream(java.io.PrintStream,byte[],java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #7ee91bcd8b5282ea4ab05be90bc9c08c384489917e4c9119c3188fbfe71b8f78)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r8 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer385)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r9 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer388, $r9)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #cbfeb9bdc1c8d050a3e960cb60c7b92cbcf39d3d5e76460a12f1c1c8a9e2ce2d)
			First parameter (with value "DES") should be any of {AES, DESede, RSA}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer389)


Findings in Java Class: com.tencent.open.utils.HttpUtils$MyX509TrustManager

	 in Method: void <init>()
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #6584f728fc4defc317907135ef843e9d84df54c0c3bfbca3a8c34b9a8f566726)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: virtualinvoke $r6.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #6584f728fc4defc317907135ef843e9d84df54c0c3bfbca3a8c34b9a8f566726)
			First parameter (with value "JKS") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer803)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #6584f728fc4defc317907135ef843e9d84df54c0c3bfbca3a8c34b9a8f566726)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r1 = null

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #6584f728fc4defc317907135ef843e9d84df54c0c3bfbca3a8c34b9a8f566726)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer803)


Findings in Java Class: com.tencent.open.utils.HttpUtils$CustomSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer798, r7, varReplacer798)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer798, r7, varReplacer798)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 11

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 4
	ConstraintError: 3
	IncompleteOperationError: 3
=====================================================================
