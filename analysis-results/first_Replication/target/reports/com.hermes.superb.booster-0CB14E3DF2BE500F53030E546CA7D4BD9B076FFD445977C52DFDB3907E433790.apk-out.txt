Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.hermes.superb.booster-0CB14E3DF2BE500F53030E546CA7D4BD9B076FFD445977C52DFDB3907E433790.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13585)
		Method: <com.apusapps.b.a.d: byte[] a(byte[])>
		SHA-256: 39a47ee5f8c155063a5bba4acfe5fc1cfcbac57492146f9763bc339227f65769
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 1da94bc65736b5daec9fb707b121792f525ce16cac0638f4e17beabe1af97476
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14736)
		Method: <com.rubbish.cache.d.a.a$1: byte[] a(byte[],java.lang.String)>
		SHA-256: a510f039a477ba4998c0a8faa70f9a37fe80151004cf11ee3efb9bce7d2f6c9b
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.enceladus.appexit.a.c: byte[] a(byte[],java.lang.String)>
		SHA-256: 8957e7ab3cccd7e6f0619806ed1ae427ddffbbf870e0f8d39613a1ef40c68d4a
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.tethys.a: byte[] a(android.content.pm.Signature[])>
		SHA-256: 429798205c2c83583d727c70683157d1a7176cd097489fb4eae5c3e713da1e13
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.h.a.a: java.lang.String a(java.io.InputStream)>
		SHA-256: 429798205c2c83583d727c70683157d1a7176cd097489fb4eae5c3e713da1e13
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14733)
		Method: <com.rubbish.cache.d.a.a$2: byte[] a(byte[],java.lang.String)>
		SHA-256: 8c4ade523c1c493430f4c5c72df86244a2803158021cd8b73a674a83f917c3dc
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <org.interlaken.common.d.c: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: 84f14f624f4d28cf9107055bc7a766b26e093fab380bdd1ccd7ba93d1ad0c206
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.turbo.global.utils.h: byte[] a(byte[])>
		SHA-256: 5d9d30a8fc2b3cab3ce50f64335d69be867a3336784fba439579799587daaa12
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: 8308cc419a228b856ecf812f4a1bcec969318612ae2f3894f4977a38456c2fd4
		Secure: true
	Object:
		Variable: varReplacer14731
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer14731)
		Method: <com.rubbish.cache.d.a.a$2: byte[] a(byte[],java.lang.String)>
		SHA-256: 321b9598b167d9aea8b4d6482d35953f34e1e239404ba488c039e8c1545ed825
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5197)
		Method: <d.u: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: 8fbfe0fec48cd9909a96c174c1c3fbf7b52e2d7d3c8828067a0154b1c9983d02
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.interlaken.common.d.k: byte[] a(java.lang.String,java.io.InputStream)>
		SHA-256: c77dd7e3123e090a0f70bfa24715598749f909592a095168b0c423c9eca397fb
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.h.a.a: byte[] a(java.io.File)>
		SHA-256: 7d5e7b0c1cfa70ba4613c318162e9e61487d6805ffbb7c607cb6a8fc91f841c2
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10583)
		Method: <com.turbo.global.utils.h: byte[] a(byte[])>
		SHA-256: b678a419bd54222a3171526a4421105e57e50bf272777800addda3c939d33222
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.interlaken.common.d.c: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: 412bf4ed61073de9a0ffc866fcb699e1cc15ef84b8208e61e319c37dd5caa685
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer14334)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 948aa4f6f1809d4b48e13bccd533bb768f92340386b22ba1edf7417f4f936665
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <org.enceladus.appexit.a.c: byte[] a(byte[],java.lang.String)>
		SHA-256: 84f14f624f4d28cf9107055bc7a766b26e093fab380bdd1ccd7ba93d1ad0c206
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer11008)
		Method: <org.enceladus.appexit.a.c: byte[] a(byte[],java.lang.String)>
		SHA-256: ce0ae143a769c3bc38f47779809ec03d0471606dba252b18d4d0afd6aa64552e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1868)
		Method: <com.h.a.a: java.lang.String a(java.io.InputStream)>
		SHA-256: 5a3e0ab1be40610adac34a0b2ac1801b18cecb0d5ecb2c429639abb25438bcf8
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.rubbish.cache.d.a.a$2: byte[] a(byte[],java.lang.String)>
		SHA-256: 528f34eade1d2e1325de8f7f1173df3cc96b2f64f4b1332342b0ddfc30f38573
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10701)
		Method: <org.interlaken.common.d.k: byte[] a(java.lang.String,java.io.InputStream)>
		SHA-256: b9023f28fbfd9535dbf0f86bf342ce087246c4ddbe90e1a2177c22e7177e7d5c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7062)
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: 8da57eb54b9b720d6279312c1111dbcf85936d3f8a1a9574db768b5450127a89
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.enceladus.appexit.a.c: byte[] a(byte[],java.lang.String)>
		SHA-256: 412bf4ed61073de9a0ffc866fcb699e1cc15ef84b8208e61e319c37dd5caa685
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12757)
		Method: <org.tethys.a: byte[] a(android.content.pm.Signature[])>
		SHA-256: 4fb6294f3e9ecb7cbf4983dfb85579c36880e8d85e08790fd969f769c0ffca97
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <org.interlaken.common.d.c: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: 65ca7ceaf382c21c1c08f0077dc608c5bc115ac43a0fb223afa54fb3a12c84fc
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyStore
		Statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.mobvista.msdk.base.b.b.i: void <init>(com.mobvista.msdk.base.b.b.i$a,int,com.mobvista.msdk.base.b.b.j)>
		SHA-256: 904974ba4cb6065649466c8090c20e8f6c18ff337ab5e9f4cbda85a1a8b9602f
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer10034)
		Method: <org.interlaken.common.d.c: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: 347eb14bf7a31a9f674b97c66f8de1a3ec0ff78eb1cedcfcbceaf0883e81296e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.apusapps.b.a.d: byte[] a(byte[])>
		SHA-256: 40994c5c62a2939a6203497716434df31caaf7367e749f9d6ff943a5690f90ea
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3332)
		Method: <org.interlaken.common.d.k: byte[] a(java.lang.String,byte[])>
		SHA-256: 653cbcc5e1bbbf92ec79c519a99542070f2a495c0eb4daec51d1975a93cc8258
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.rubbish.cache.d.a.a$1: byte[] a(byte[],java.lang.String)>
		SHA-256: 2b7e9c1bed683db459482ba6e4bace544c2a1aebc1e1c96877e6a04a38d1d177
		Secure: false
	Object:
		Variable: varReplacer14334
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer14334)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 3316b984cd527c7ad24f9c93310fea2d305f0d8bd8eb2a7c6836aa2755d206ec
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1883)
		Method: <com.h.a.a: byte[] a(java.io.File)>
		SHA-256: c50e55cf08f2f57711288f6268d3af81a9a85a17f23ac559dc0cfc1d5134cfd2
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer14731)
		Method: <com.rubbish.cache.d.a.a$2: byte[] a(byte[],java.lang.String)>
		SHA-256: 78967490d00cd7f93dddb8813fad24f1062101417b107d4016703e50eb21cf28
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11007)
		Method: <org.enceladus.appexit.a.c: byte[] a(byte[],java.lang.String)>
		SHA-256: 3a4fe674e9474c6c5027391b75c8480d974a01590ef84cde99db544584404c25
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer14335)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 4b04b0b408de05cebb2085a7bff32e3cfa1338029a0c567f5d56f685988ce696
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.interlaken.common.d.k: byte[] a(java.lang.String,byte[])>
		SHA-256: ac15a362f2ae2f0a8380f561f2a0510521f79b4de643c8e87cc89c93203a384
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10035)
		Method: <org.interlaken.common.d.c: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: a07f319c1756dde5acfed733745f85a934af80801fa06ddabb139fe6771b57bb
		Secure: false

Findings in Java Class: com.h.a.a

	 in Method: java.lang.String a(java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #5a3e0ab1be40610adac34a0b2ac1801b18cecb0d5ecb2c429639abb25438bcf8)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


	 in Method: byte[] a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #c50e55cf08f2f57711288f6268d3af81a9a85a17f23ac559dc0cfc1d5134cfd2)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.interlaken.common.d.c

	 in Method: byte[] a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer10032, $r6, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a07f319c1756dde5acfed733745f85a934af80801fa06ddabb139fe6771b57bb)
			First parameter (with value "DES") should be any of {AES, DESede, RSA}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10035)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #347eb14bf7a31a9f674b97c66f8de1a3ec0ff78eb1cedcfcbceaf0883e81296e)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer10034)


Findings in Java Class: org.interlaken.common.d.k

	 in Method: byte[] a(java.lang.String,java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #b9023f28fbfd9535dbf0f86bf342ce087246c4ddbe90e1a2177c22e7177e7d5c)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.enceladus.appexit.a.c

	 in Method: byte[] a(byte[],java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #3a4fe674e9474c6c5027391b75c8480d974a01590ef84cde99db544584404c25)
			First parameter (with value "DES") should be any of {AES, DESede, RSA}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11007)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #ce0ae143a769c3bc38f47779809ec03d0471606dba252b18d4d0afd6aa64552e)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer11008)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer11006, $r6, $r2)


Findings in Java Class: org.tethys.a

	 in Method: byte[] a(android.content.pm.Signature[])
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #4fb6294f3e9ecb7cbf4983dfb85579c36880e8d85e08790fd969f769c0ffca97)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.apusapps.b.a.d

	 in Method: byte[] a(byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #39a47ee5f8c155063a5bba4acfe5fc1cfcbac57492146f9763bc339227f65769)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13585)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #39a47ee5f8c155063a5bba4acfe5fc1cfcbac57492146f9763bc339227f65769)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = null


Findings in Java Class: com.rubbish.cache.d.a.a$2

	 in Method: byte[] a(byte[],java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8c4ade523c1c493430f4c5c72df86244a2803158021cd8b73a674a83f917c3dc)
			First parameter (with value "DES") should be any of {AES, DESede, RSA}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14733)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer14732, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer14731)


Findings in Java Class: com.rubbish.cache.d.a.a$1

	 in Method: byte[] a(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer14739, $r8)


Findings in Java Class: d.u

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5195, r6, varReplacer5195)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5195, r6, varReplacer5195)


Findings in Java Class: com.my.target.core.utils.h

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer14334)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 38

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 4
	IncompleteOperationError: 2
	ConstraintError: 5
	RequiredPredicateError: 10
=====================================================================
