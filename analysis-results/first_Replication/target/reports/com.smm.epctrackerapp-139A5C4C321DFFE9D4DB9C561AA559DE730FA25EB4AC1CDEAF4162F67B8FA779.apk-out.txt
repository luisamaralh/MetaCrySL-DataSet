Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.smm.epctrackerapp-139A5C4C321DFFE9D4DB9C561AA559DE730FA25EB4AC1CDEAF4162F67B8FA779.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer16988, varReplacer16989)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 7217c94d5a124a35429c1bd1bb23842a0d4edde28670657228d47669b88a7b7e
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLSocketFactory createAdditionalCertsSSLSocketFactory(android.content.Context)>
		SHA-256: 954e9f666dc6663ac3198d4c83a7c885893390e9e77a37fe053a41ffaa347eb7
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer16995)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 4e10b9a71d0a029a51d35d83ea1d4f7e01471837ea9166659a438d23fa87ba0c
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.SSLContext
		Statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3530)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLSocketFactory createAdditionalCertsSSLSocketFactory(android.content.Context)>
		SHA-256: cacc13c32d24b62a9bea38724b970fff3f18e31b0da01c21c7c241b426d28fa8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.KeyManager[]
		Statement: $r4 = virtualinvoke $r15.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: aba9fa4c2396667a557cdcdbfcf86790b8a3f7d67255e7aabf57ef554d38e4ce
		Secure: false
	Object:
		Variable: $r25
		Type: java.security.KeyStore
		Statement: $r25 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>(varReplacer16996, $r24)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 2f275a2c50b499a23c9f4c5b888d846c6f9bcf59dd72a51f7283ea6b0bda1660
		Secure: false
	Object:
		Variable: $r15
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r15 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer16981)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: f3cb4025f2f409e691999fb09b4fd0d04529d1d7c871db73acf7a5bfb4bd5fa4
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer14064)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: e2f1ff7bb284d8814dbdb7f167dff8ebbc4555307184cacc43975ecd88dad513
		Secure: false
	Object:
		Variable: $r25
		Type: java.security.KeyStore
		Statement: $r25 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 70227ee4cebe6669aebfadd648a5aa0401905e3b0c149905f4e0b616961e20b
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory createAdditionalApacheCertsSSLSocketFactory(android.content.Context)>
		SHA-256: 15dd4c09357370287da655c9000eb19b850fa2e138e7fa2b62445048968ecb0c
		Secure: true
	Object:
		Variable: r32
		Type: java.security.SecureRandom
		Statement: specialinvoke r32.<java.security.SecureRandom: void <init>()>()
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: ec5a3b9c459e095d06455cbfbb767d05f39652ee39e2deb63e1be93dffc7f5e7
		Secure: true

Findings in Java Class: org.jivesoftware.smack.tcp.XMPPTCPConnection

	 in Method: void proceedTLSReceived()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #7217c94d5a124a35429c1bd1bb23842a0d4edde28670657228d47669b88a7b7e)
			First parameter (with value "KeychainStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer16988, varReplacer16989)

		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #f3cb4025f2f409e691999fb09b4fd0d04529d1d7c871db73acf7a5bfb4bd5fa4)
			First parameter (with value "SunX509") should be any of {PKIX}
			at statement: $r15 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer16981)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, varReplacer16998, r32)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, varReplacer16998, r32)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #2f275a2c50b499a23c9f4c5b888d846c6f9bcf59dd72a51f7283ea6b0bda1660)
			First parameter (with value "PKCS11") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r25 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>(varReplacer16996, $r24)


Findings in Java Class: com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory

	 in Method: javax.net.ssl.SSLSocketFactory createAdditionalCertsSSLSocketFactory(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3531, $r10, varReplacer3531)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3531, $r10, varReplacer3531)


	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer14062, r6, varReplacer14062)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer14062, r6, varReplacer14062)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 11

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 6
	ConstraintError: 3
=====================================================================
