Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/ac.kr.seoultech.m2-003B94C05BA98DCF97B1EE81919D7F7A16C4DB973F9A3E54FF855172DE5AA8EF.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.RSAHelper: java.lang.String decrypt(java.security.PrivateKey,byte[])>
		SHA-256: 8aa167dbffbcf550bbceb444befe29dfb71e9f4e122e0d88235b739a0d8ed937
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: 4f55213a8d8360caf6ab536b211298eea927bc247fc707288ed14480b4d51c9b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer964)
		Method: <com.sz.pns.base.service.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 61c69fd3259ef89e596ddab93b8d147f4dd292049357ab5d762f5bf4f398bcb6
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: 2573436cc174414da03fbbb4ff96039e8f9916bdef82aa3b9b9fdbcb0aa02325
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPairGenerator
		Statement: $r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer2086)
		Method: <com.sz.fspmobile.util.RSAHelper: java.lang.String[] getRSAKey()>
		SHA-256: e8798905d463b708667517a594d88d453d618024fbf5122311e9ca30bf1cc2f6
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1775)
		Method: <ac.kr.seoultech.m2.SeoultechWebMainActivity: boolean isSign()>
		SHA-256: 3d01cbfa44e077b69177eab74eeaa340f89a295bab1aeda274c7f006ad245129
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: 8684519ca95251366595f3b9551c1d3f8610dc7f121cbac20215755e79dbe9c9
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPair
		Statement: $r2 = virtualinvoke $r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.sz.fspmobile.util.RSAHelper: java.lang.String[] getRSAKey()>
		SHA-256: 30f4e34ed2923be51035a55458c82545690e94b3d59401fb8d0b927e728fe6b6
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.RSAHelper: java.lang.String encrypt(java.security.PublicKey,byte[])>
		SHA-256: 71e7df40425fc73a049bab9f3d8a35c60ecf0bedaf60d2e6ed69b55ad110da74
		Secure: false
	Object:
		Variable: r11
		Type: java.security.SecureRandom
		Statement: specialinvoke r11.<java.security.SecureRandom: void <init>()>()
		Method: <com.sz.fspmobile.net.HttpConnection: java.net.HttpURLConnection makeUrlConnection(java.net.URL)>
		SHA-256: a8f16148a51b6e4027b394f1f7ec20d4748c3daacee5cd39b336be8dcaf03a45
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2095)
		Method: <com.sz.fspmobile.util.RSAHelper: java.lang.String encrypt(java.security.PublicKey,byte[])>
		SHA-256: a342532d377d06e62877b0a8f74cf4a3f809a1dac97bf8d7d752501751dac138
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2089)
		Method: <com.sz.fspmobile.util.RSAHelper: java.lang.String decrypt(java.security.PrivateKey,byte[])>
		SHA-256: 6d78c7214d8db09388c6ad7ce94626cd5b46c5eb25db4895e168d89bfe4688fd
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer441)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] getRawKey(byte[])>
		SHA-256: 4a1debc62fcf16e804a9fb55aac1e69be4cf6b59f7322ec2d53c37f60e6822bb
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer439)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: 21b089c74800974a35b07f1a23cdef69a4cea531a69c9fcfad87d5d3f8d3f1ee
		Secure: false
	Object:
		Variable: varReplacer441
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer441)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] getRawKey(byte[])>
		SHA-256: 484589037289f661e244d188939e719f8ae97637bfb859aefa190dea8b9a77e1
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <ac.kr.seoultech.m2.SeoultechWebMainActivity: boolean isSign()>
		SHA-256: 2a5c03dd41a0dd95ed642ee3369f0d856b42ceaf934b9843510093384a8132a2
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer745)
		Method: <com.sz.fspmobile.net.HttpConnection: java.net.HttpURLConnection makeUrlConnection(java.net.URL)>
		SHA-256: 765182e41e54b1d3569c7dd9457857b9980712281be210a6dcb8fc791637a0db
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: 789302a18c5e2e3df7de02544700bf2c7dcda4cb7bc2b0265733b92b52d4a856
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.sz.pns.base.service.NetworkThread: org.apache.http.client.HttpClient getNewHttpClient()>
		SHA-256: da8980864743f0640d37b8b11ed562c9b31c2fe6c7e80700587852e4e4610a40
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer846)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: bd51bda588cb835407944c5047470bb109225a6814012be0113c9a7ab921450d
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.RSAHelper: byte[] encryptByte(java.security.PublicKey,byte[])>
		SHA-256: 197908b4d90e930d9d21e9c6d6eee68b1a58101e9aeb2a9c18a48463c66469a8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: 444fb612b39bd2468dc7589842a34b14cee885f2b5a9459a2702c898a76df7a2
		Secure: false
	Object:
		Variable: varReplacer439
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer439)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: 8a3570466a1d6daa07c63f8bea2334b121ef7d6f1118c2a860bb321414ed9f36
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: cf8d414a97af46b7e62f4e74025b21be177b2cdb90d0ea7798ba6cbb2cca4289
		Secure: false
	Object:
		Variable: varReplacer846
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer846)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: 2c37b50a33d3bac1c08dc5b9a8816977a4297ba4735e18162a8ba95584afd0db
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1121)
		Method: <com.sz.fspmobile.util.RSAHelper: byte[] encryptByte(java.security.PublicKey,byte[])>
		SHA-256: d7d845b43e06d1c806f49bda59290500f1e5af0cdf393f3a005fd751d87cea1c
		Secure: false

Findings in Java Class: ac.kr.seoultech.m2.SeoultechWebMainActivity

	 in Method: boolean isSign()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3d01cbfa44e077b69177eab74eeaa340f89a295bab1aeda274c7f006ad245129)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1775)


Findings in Java Class: com.sz.fspmobile.util.RSAHelper

	 in Method: java.lang.String[] getRSAKey()
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #e8798905d463b708667517a594d88d453d618024fbf5122311e9ca30bf1cc2f6)
			First parameter (with value 1024) should be any of {2048, 4096}
			at statement: virtualinvoke $r1.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer2082)


	 in Method: java.lang.String encrypt(java.security.PublicKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2096, $r0)


	 in Method: java.lang.String decrypt(java.security.PrivateKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2087, $r0)


	 in Method: byte[] encryptByte(java.security.PublicKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1120, $r0)


Findings in Java Class: com.sz.fspmobile.net.HttpConnection

	 in Method: java.net.HttpURLConnection makeUrlConnection(java.net.URL)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer743, r13, $r1)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer743, r13, $r1)


Findings in Java Class: com.sz.pns.base.service.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer965, r5, varReplacer965)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer965, r5, varReplacer965)


Findings in Java Class: com.sz.fspmobile.util.AESHelper

	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer845, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer846)


	 in Method: byte[] encrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer440, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer439)


	 in Method: byte[] getRawKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer441)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 26

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 12
=====================================================================
