Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.geaxgame.pokerkingvip-052D7D754250B53B7DF9EEC45033699F18E0424DBEF3C0A5FCF7C02290FB8857.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.spec.PBEParameterSpec.PBEParameterSpec( salt iterationCount paramSpec);
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Alive 313593  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2848)
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: 303b679ed6607118dd8f7b58d91341897231368dd85713a5e47c6d4e9c57a59c
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4984)
		Method: <com.appflood.e.j$b: void <init>(java.lang.String,byte[])>
		SHA-256: c7ba4d9776d016d2dec373b39e47f9c9e3e717ad1c19eb678b33fa7fa0258b40
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.geaxgame.casino.client.api.AES: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: a3232e8688ae4e198ca0b61a1f294125840bb3e949c51352e910c17120326afc
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.appflood.e.j$b: void <init>(java.lang.String,byte[])>
		SHA-256: 5023d1fb23f858755586a274bab9b4068723c91183e76eae89e1088436e82dd2
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer4983)
		Method: <com.appflood.e.j$b: void <init>(java.lang.String,byte[])>
		SHA-256: 2fbcaef7332fdb55fd9d61cd17aecc6a23493d76eef79ccae7b581b0e1af6a5b
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.geaxgame.billing.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: c678472b4c19c53650e756c77dab364889209724da847a2f30c698a83517174f
		Secure: false
	Object:
		Variable: r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer12272)
		Method: <com.geaxgame.casino.client.api.AES: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: 67285b922e1c22eb7957bd9e7ce186bc2cb9305c47481f288f39ec2f2c9016e7
		Secure: false
	Object:
		Variable: varReplacer12272
		Type: java.lang.String
		Statement: specialinvoke r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer12272)
		Method: <com.geaxgame.casino.client.api.AES: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: e2031c6afe785d10452c806df229e3ea18ad806aacfa6c1ce96245a45725ae6c
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer12359)
		Method: <com.geaxgame.billing.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 5919ac819620bc6c855fe5a7c170c57ecc64029c8c7d3320cb4dd587d2e1d306
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.appflood.e.j: java.lang.String b(byte[])>
		SHA-256: f0a711a704dba212a150f9b585675172a455965ee158cf4fba7f3f516f4fa21d
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKeyFactory
		Statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4985)
		Method: <com.appflood.e.j$b: void <init>(java.lang.String,byte[])>
		SHA-256: c1f8eb550e8581b84340afd850b5b40418ff6927d9559381e7548f1219778429
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: b06ea93113caf1c0a34502b70367c98fc8260fbfa0ac30bcb23e381db0de6b00
		Secure: true
	Object:
		Variable: varReplacer2846
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2846)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 46e9d17d5be4170e3ea56a85930e6faadeb62075101486c7ac22955f2c042dfa
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2408)
		Method: <u.aly.bj: java.lang.String A(android.content.Context)>
		SHA-256: eab97e8ae1a2793ea0f6d650e9da6345515a70402255a56b55d0e912b1e43c50
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2091)
		Method: <u.aly.bk: java.lang.String a(java.lang.String)>
		SHA-256: d94b854ddee7e1f5027020ee139ce92f351b28524698d7b7bb6bb4d201be789a
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer574)
		Method: <com.appflood.e.j: java.lang.String b(byte[])>
		SHA-256: a9a388830393aa65696211b4ad8e0ed68b9815be1720c6e307223b54cf48ec14
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1988)
		Method: <com.fyber.utils.q: java.lang.String a(java.lang.String)>
		SHA-256: de417c83a259b1a2c0ce25607f5230ccdfeceb33ed6f9c44efff5dc042d621f4
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 712110b6d50d4a42f86c9165e8b14514ae6cccf973f8d32cdf255cac7d8b2aad
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.geaxgame.pokerking.util.OpenUDID_manager: void generateOpenUDID()>
		SHA-256: 383e92c6a9159fc4f0849cfb26da514bdc062562f7df112fbf4a2f6833661549
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <u.aly.bj: java.lang.String A(android.content.Context)>
		SHA-256: 58724a361bbf5df4daf876eebe3769418ddddb0f7192ba5788d5f79f73bd4736
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 8d9ed73f76b0cc35336304903ab76cb718c59eb2a0e5d6566d27757d000fd32
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bk: java.lang.String b(java.lang.String)>
		SHA-256: 7b0e9e4b4482b77d7e90603a509c41cb6b9a71b4e80cef4cb52bd8a7591abd17
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2846)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 286962cb626d74dc839c97119c6ec0fedd05faa32031d650b170623c5c677c8e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12273)
		Method: <com.geaxgame.casino.client.api.AES: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: e0adbf54291a8dbb73949e2869fca682b839d4c3606b5b2a5677d860f4066441
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4986)
		Method: <com.appflood.e.j$b: void <init>(java.lang.String,byte[])>
		SHA-256: dfe688fddc99e612ccbf213ea4152a06785a99cd9c4f28852334489bf70d0acc
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.fyber.utils.q: java.lang.String a(java.lang.String)>
		SHA-256: 256532345a701e2c92c6fc440f379e41a1481858b36eecdd69cc4c3079be8928
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: 8407a152a750198a9cecc8c173b46fb5748136d260fe6f5fbe4a174451640e66
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bk: java.lang.String a(java.lang.String)>
		SHA-256: bb73c91bc1e3bbdcada382ac78affdca310f5624af49e618b853b401fa88d569
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2426)
		Method: <u.aly.bk: java.lang.String b(java.lang.String)>
		SHA-256: dc7b84ff6742fedd479a4dc4e987ff11c34c494ef24a4d151ec80375fb671191
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2845)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 5b47887f1b88a1f45bfa67c1e1b5c59025e9ae153da333dae1faaccc90934057
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: ffde2c3e415be62ad6bfbfe50546823118db13763d58e44ff45979b39cbfde6c
		Secure: false

Findings in Java Class: com.appflood.e.j$b

	 in Method: void <init>(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer4983)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c7ba4d9776d016d2dec373b39e47f9c9e3e717ad1c19eb678b33fa7fa0258b40)
			First parameter (with value "PBEWithMD5AndDES/CBC/PKCS5Padding") should be any of {AES, DESede, RSA}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4984)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #2fbcaef7332fdb55fd9d61cd17aecc6a23493d76eef79ccae7b581b0e1af6a5b)
			Second parameter (with value 1)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer4983)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #dfe688fddc99e612ccbf213ea4152a06785a99cd9c4f28852334489bf70d0acc)
			First parameter (with value "PBEWithMD5AndDES") should be any of {AES, DESede, RSA}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4986)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r5)


Findings in Java Class: com.fyber.utils.q

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #de417c83a259b1a2c0ce25607f5230ccdfeceb33ed6f9c44efff5dc042d621f4)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1988)


Findings in Java Class: com.geaxgame.casino.client.api.AES

	 in Method: byte[] decrypt(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer12272)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer12274, $r2)


Findings in Java Class: com.umeng.analytics.b

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2844, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2846)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2844, $r2, $r4)


Findings in Java Class: com.geaxgame.billing.util.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 31

	CogniCrypt found the following violations. For details see description above.
	ForbiddenMethodError: 1
	RequiredPredicateError: 9
	ConstraintError: 4
=====================================================================
