Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.cleanmaster.security-0A14500243B3DE46394BB967250C145A2183E94CA28CFB1867266896AB518902.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 9812a629d23beccafa21efc59029240b468afb9bb9cb6b7b2b5487adb29f5331
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String b(java.lang.String,byte[])>
		SHA-256: 294774355650ef54317942aa033ea413478f12f314ae78f11ea6aba9303fe7d8
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5255)
		Method: <com.cleanmaster.security.util.MD5Util: java.lang.String a(java.lang.String)>
		SHA-256: c8d7af78ef865427366b2efd6f803fb412a944956dcd63aa3b05315bb87f1f92
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cleanmaster.security.callblock.credentials.KeyUtils: java.lang.String a(java.lang.String)>
		SHA-256: 768f918e8899fae2e4443d8a5d02ce6006788ec0791158961aa3e57ffec4a525
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1446)
		Method: <com.cleanmaster.security.callblock.credentials.KeyUtils: java.lang.String a(android.content.Context)>
		SHA-256: e1a8ffa0018e160558c8ee7af94e8606a68abeeac684641d710c9c416934fd8f
		Secure: false
	Object:
		Variable: varReplacer2716
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2716)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String b(java.lang.String,byte[])>
		SHA-256: 1640a8c0fc3a4252a61abb2dabdfa6de52d06c13b93eeca29d67ea162113fedf
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cleanmaster.security.util.MD5Util: long d(java.lang.String)>
		SHA-256: 9f56225732b386a4c771e564c100c20157dbcdcaf6869feb6594f54bcff22ab6
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1442)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: a437ecf571bfbbf8ad938ce2da238ca0f64dddd7857f57859f2758a59bfcf1c1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2717)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String b(java.lang.String,byte[])>
		SHA-256: d8bfcb84fbb10dabd06f56325c61430ef0d056142e056ea0ddc2dbfde614a4b5
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.cleanmaster.security.util.MD5Util: java.lang.String a(java.lang.String)>
		SHA-256: 9ace980680c171724d02ba9d5b946915c3451001e4c93140e0f2fa26f5947ea3
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4740)
		Method: <com.cleanmaster.security.callblock.credentials.KeyUtils: java.lang.String a(java.lang.String)>
		SHA-256: ef4f2ffa45bb7c982d23cf53a7ec3dd3ad4f6ad99cbe9095567dfbfdcba50ff9
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2716)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String b(java.lang.String,byte[])>
		SHA-256: 1c328316c4fab6fa88a1bd6e42614e5e1063901dc733028b08630af7980a8f67
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6865)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 9f39ea0f3df193d36cf9ada6b2743dbde630d107030320b9c71e3e12a4b4cba5
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String a(java.lang.String,byte[])>
		SHA-256: de94c736b45bd4b8e56c85204c42b87d3fe3f3206b548189d2f92351b974bac8
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14351)
		Method: <com.cleanmaster.security.util.MD5Util: long d(java.lang.String)>
		SHA-256: fac6fa872dc97ac1fd94f831ab4768aa91578a7796ffdd2036519fe7786e7fa3
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cleanmaster.security.callblock.credentials.KeyUtils: java.lang.String a(android.content.Context)>
		SHA-256: 5e040f3bc87a7065a59e4f5e1682870e27673c766f86cb297c22cb3d326cfc2f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer1443)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: c954fa3a7f0275410be5206377aee43e0c99e8766fe7fafbad98dd421eb8ec24
		Secure: true
	Object:
		Variable: varReplacer1442
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1442)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 427aea2b0f09afd33003392b731528c3f13bceab3fa0b33b1644297a33ef19c6
		Secure: false
	Object:
		Variable: varReplacer6867
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6867)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String a(java.lang.String,byte[])>
		SHA-256: f7ce38a4bfa2fe0f2c4af53e9d0014d78a0443f6b206c87e31d7ccc81c654751
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6867)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 1799706943ff34c63cbb2bc0ae7a1bd78159bf1f720c0e5d2d0258d5cee4573c
		Secure: false

Findings in Java Class: com.cleanmaster.security.callblock.credentials.KeyUtils

	 in Method: java.lang.String a(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e1a8ffa0018e160558c8ee7af94e8606a68abeeac684641d710c9c416934fd8f)
			First parameter (with value "SHA") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1446)


Findings in Java Class: com.cleanmaster.security.callblock.utils.SecurityUtil

	 in Method: java.lang.String b(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2715, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2716)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d8bfcb84fbb10dabd06f56325c61430ef0d056142e056ea0ddc2dbfde614a4b5)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2717)


	 in Method: java.lang.String a(java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9f39ea0f3df193d36cf9ada6b2743dbde630d107030320b9c71e3e12a4b4cba5)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6865)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6866, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6867)


	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1442)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 20

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 5
	ConstraintError: 3
=====================================================================
