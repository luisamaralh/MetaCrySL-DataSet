Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.cm_prod.bad-1194ED822C93C9DD20BD09C988C8129ABA0DB3D947F289CB0F9DCE46BCD1C390.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
05:54:53.761 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()> for class dif
05:54:53.818 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class dif
05:54:53.823 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()> for class dif
05:54:53.841 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class dif
05:54:53.922 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()> for class did
05:54:53.922 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class did
05:54:53.922 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()> for class did
05:54:53.927 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class did
05:54:53.959 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()> for class did
05:54:54.198 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()> for class did
05:54:54.198 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class did
05:54:54.198 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()> for class did
05:54:54.220 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()> for class did
05:54:54.220 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class did
05:54:54.557 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class dif
05:54:54.559 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class dif
05:54:54.710 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class did
05:54:54.711 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class did
05:54:54.746 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class did
05:54:54.770 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class did
05:54:55.151 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class die
05:54:55.178 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class die
Alive 17968  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3105)
		Method: <cms: javax.crypto.SecretKey a(java.lang.String)>
		SHA-256: a57580e6ebef980b42971665086370fb03d86699138de0c6e8674fc902f48dfa
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <cmu: byte[] a(byte[],byte[])>
		SHA-256: 3249a016ed19785d0a4e7f8180fe731d814f2f9ecde47275cefc51cc8bbefe1c
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.KeyGenerator
		Statement: $r0 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer3066)
		Method: <cmy: java.lang.String d()>
		SHA-256: 86ee1e3076f39d127b3273e75e847610bfbe75cc8c860b3b9b3d7910a4f5967d
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3107)
		Method: <cms: javax.crypto.SecretKey c(java.lang.String)>
		SHA-256: a380f01c60bc29107eb90c3de8e43208e56db300ad99b3899e6bc9521f8072f6
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <cms: javax.crypto.SecretKey b(java.lang.String)>
		SHA-256: 87a40d8b5ee28535daad68bc322e922e6c11e9a7d63b1fab936ebd507b9dcde7
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3276)
		Method: <cmt: void init()>
		SHA-256: 76e9a9b7000d54529bcb637c9aca22271b2c815225bd45d148ff1529c13b755a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKeyFactory
		Statement: $r2 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3041)
		Method: <cmx: byte[] a()>
		SHA-256: 9dbdf3afd9602306ad212f28fdcfa6597bf4a60f766760a0369c6bc7435f513
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <cmx: byte[] c()>
		SHA-256: 92af56445e8887e855357c062c58538e73cb1d8a82c301c43a4a2e4fefe4c786
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)
		Method: <bgc: byte[] a(bgd,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: 7fa30f76db356c7352ac5f815d84e3ccac4c0daf919705f48784928d66366d14
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3281)
		Method: <cmt: void init()>
		SHA-256: 9ad46aa07f9aa1ed6faa1a5db4174c0a3dd6fa90e77b7f6f8abfe4ed815364ca
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer7339)
		Method: <bgc: byte[] a(bgd,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: b432f3676d8bc6f98b92fcef2fc44591da9a2ab4239e647b6343c539ba8d636f
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, $i0, varReplacer7311)
		Method: <bgc: javax.crypto.SecretKey a(char[],byte[])>
		SHA-256: cd95a1342d1478082d4ddf8c10ff3dba046dbbdd81808af5c28bd87ec70dd696
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKeyFactory
		Statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4266)
		Method: <bgm: java.lang.String j(java.lang.String,java.lang.String)>
		SHA-256: f05e7c4650707d823881bb8ed155871874f9963fb61118650900343c0a63c302
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <cmu: java.lang.String j(java.lang.String)>
		SHA-256: 54de1a1db7499ba109df34d2481a28cf04734ff042110227910901595fd9f14b
		Secure: false
	Object:
		Variable: r7
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r1, varReplacer3039, varReplacer3040)
		Method: <cmx: byte[] a()>
		SHA-256: f9ba139933e346583e3a7349119b8b3d1fc7151b2fd917dd68ec0938aeb00815
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer3052, varReplacer3053)
		Method: <cmu: byte[] b(byte[])>
		SHA-256: c5435910e6eb7997a2c0675ec958ff80e77daeaed2b5740536f15f5ba885c0ad
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer4268, varReplacer4269)
		Method: <bgm: java.lang.String j(java.lang.String,java.lang.String)>
		SHA-256: f471f388ee67e0a278bdfc4b433e7fb9182adb887515fd3cdf8a66cfd08fc57
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3011)
		Method: <cmu: java.lang.String e(java.lang.String)>
		SHA-256: f8d7fc6014b623f0834d04d757776f6c1f7befd2746698986053e584a7e0fe07
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Key
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r1, varReplacer3108)
		Method: <cms: javax.crypto.SecretKey c(java.lang.String)>
		SHA-256: d4de1791e606cadc33535ae99d23d9abff4ca08fdc0ca68e51681507dd98a414
		Secure: false
	Object:
		Variable: varReplacer3011
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3011)
		Method: <cmu: java.lang.String e(java.lang.String)>
		SHA-256: b6f51f6e9a9629eb9b4f2f8deda91c64990c63fe0268504d6eef25cf502fd0ba
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <cms: javax.crypto.Cipher e()>
		SHA-256: b56175635189161ecf8850dc2f55253f4b277a7049fbb52742f080bff6228dae
		Secure: true
	Object:
		Variable: varReplacer3020
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3020)
		Method: <cmu: java.lang.String d(java.lang.String)>
		SHA-256: f20a78cac891134a734eebaf1da54759aadd8bfd4e9e9d8297578ca4bbca2821
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <cqd: java.lang.String g(java.lang.String)>
		SHA-256: 263e2d1e685d8dc9ddd68a91519a2375ea6b62958c78958d00322875e0f4748e
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKeyFactory
		Statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4267)
		Method: <bgm: java.lang.String j(java.lang.String,java.lang.String)>
		SHA-256: 442e479a0c5fed98a91b87fcbc68ea0886c41c7e837fa00b0d6082265dbf704a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6090)
		Method: <cmu: java.lang.String i(java.lang.String)>
		SHA-256: 302974b6a73c1ae9c1b70aefae8c0f4f0addf137371f7d114a7021778f699a73
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer7322)
		Method: <bgc: byte[] a(bge,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: 120d91fd203e03fff842a8715008d9ec243c5262c9e863c7a3ae7c783d891cc2
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.SecretKeyFactory
		Statement: $r1 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3275)
		Method: <cmz: javax.crypto.SecretKey a()>
		SHA-256: 9d76983e6e61c3bc71a56c837f7fc2b31321bed7c9fd99040003f0f681496eca
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer7309)
		Method: <bgc: javax.crypto.SecretKey a(char[],byte[])>
		SHA-256: 2fe01915d56882a7287fe6a0eb43e53c7ee4b0ec03a34d26c2395a9c1d2459c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <cmu: byte[] b(byte[])>
		SHA-256: 1872e0c123b4cf229569f614c0ee0aa8db04615b5c673f1446445e05ad2b4d53
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <bgc: byte[] a(bge,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: 954cbf9a690ad3adffeb087ddf809369fe58d867f5daf81339c904d2d668ce6b
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3020)
		Method: <cmu: java.lang.String d(java.lang.String)>
		SHA-256: 7b37c70ee2c856903cd92b40428e7f455075a614ed16f73a71cabcc92bf7cb48
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzeH(java.lang.String)>
		SHA-256: 7032a0954db7bd1ce36bc7196ce24399c23934259a2b3e0a45884009b74cc7be
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer7027)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzCc()>
		SHA-256: 497d2335204fc9004fc5142f068fac11765572b4c311bf2924b8d5ec221ad325
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)
		Method: <cmx: byte[] a()>
		SHA-256: b480cfded0a7a659234b3b40105f43718f1703dfba23570a9d4e779b468da8fc
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <cmu: byte[] b(byte[],byte[])>
		SHA-256: 53509f27d99d70af1a760bbf1eb3acec16c0d58a47b0a751d61450b911db3fc0
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <cmu: byte[] a(byte[],byte[])>
		SHA-256: 1c0896d3d691f4757528beef6ec7a5e3e546b2ea268554d5b89ba1102eab17da
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <okhttp3.internal.Util: java.lang.String md5Hex(java.lang.String)>
		SHA-256: 457befec09ee01f499984056d58f4d20ef949d09698697c48af426417758494a
		Secure: true
	Object:
		Variable: $r21
		Type: javax.net.ssl.SSLContext
		Statement: $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5850)
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: 5626794a448059eafa25a397f944ade1cc938f4bb5dc9f9cdda6dd71eb801ea0
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r8)
		Method: <cmt: java.lang.String get(java.lang.Object)>
		SHA-256: a95244a8cf8bdc08492a9687de42b2ab4151450bb1a5488073e5681c89d31af8
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <cmy: java.lang.String d()>
		SHA-256: eb646054e2dbb88f5e2508c33f08b733f76fee76ecfba8354fcefd35828319ad
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6077)
		Method: <cmu: java.lang.String j(java.lang.String)>
		SHA-256: 2c342cf22fd06afe094e5c79a187b15b865e9d52fea2f9724cc4f207bbeee21a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3045)
		Method: <cmu: byte[] a(byte[],byte[])>
		SHA-256: 88fc3d24fd23338b80ed35a305181c60f71581070dd2527ddb4a58668abf842a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)
		Method: <cmz: javax.crypto.SecretKey a()>
		SHA-256: bc71c4c5e6e6b37030f2117ea2649e3e12ebd1ccb6f98abfa2e82aa0757c5370
		Secure: false
	Object:
		Variable: varReplacer6090
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6090)
		Method: <cmu: java.lang.String i(java.lang.String)>
		SHA-256: 92fd868e6dd0235fbca74ab08ba5c970ee0ebf9cffc0845c32e75565cf6c9a1a
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <cmu: java.lang.String e(java.lang.String)>
		SHA-256: 94c00a31f0bdc354f6a842cdeba5bef2f898347c9549d9fe859c88e05ef1873d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7043)
		Method: <cqd: java.lang.String g(java.lang.String)>
		SHA-256: 21d36f8c3d6037c2d114f0cb70eff51bce0363b20bd9b7f5a9a1b1ffeda5921d
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4270)
		Method: <bgm: java.lang.String i(java.lang.String,java.lang.String)>
		SHA-256: e752daf83ee07d6e30c792a669a9e0564ab296d8397d11c9767d959c4f88ba07
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <cmu: byte[] b(byte[],byte[])>
		SHA-256: da36e163c421bcd0200092a3fff3cebf332f6585698c88b11db3998a7293827c
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzd(java.lang.String,long)>
		SHA-256: 2abb37024bd464fc0c2ccf69b2ceddf0aedb43bffcb4711b7b94cf28f4b552ea
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <cmx: byte[] c()>
		SHA-256: ac37c231d432dccec830ddc7256ad63c44461474196798b30c403ad42bb08999
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3013)
		Method: <cmu: java.lang.String e(java.lang.String)>
		SHA-256: 468c07e3001def51915c65154337d8ab4d81fabb062da6315e13be5ecdd13e17
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <bgc: void <clinit>()>
		SHA-256: 607895d9de6c501447f088a04ad93531b2d1ebf7737c7da02d002fc779768867
		Secure: true
	Object:
		Variable: varReplacer7312
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer7312)
		Method: <bgc: javax.crypto.SecretKey a(char[],byte[])>
		SHA-256: b9f282945c998fc423468fdfe4fe9f7a1d84d99cf20cb88a07b322b7ca67641e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <okhttp3.internal.Util: dmt sha1(dmt)>
		SHA-256: edbf0fb2bfe0c263fc769f68ee377a5ac04ba061b9ab95fdebb5ffc8a7b78c46
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <bgc: byte[] a(bgd,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: 954cbf9a690ad3adffeb087ddf809369fe58d867f5daf81339c904d2d668ce6b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6961)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 2bd25ae8eac3701ddb76353aac2926340fbebc32b6df5a14290a89302d5a3bf
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7342)
		Method: <bgc: byte[] a(bgd,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: 25a4058d2d71e0e24080b9031582a91c182d38bb3d33f6178ec0adffd70200c3
		Secure: false
	Object:
		Variable: varReplacer3040
		Type: int
		Statement: specialinvoke r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r1, varReplacer3039, varReplacer3040)
		Method: <cmx: byte[] a()>
		SHA-256: b749ba727338952c4eaccbca75db11e8334804005f56993b1d0edbf311a6b98c
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)
		Method: <bgc: byte[] a(bge,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: 7fa30f76db356c7352ac5f815d84e3ccac4c0daf919705f48784928d66366d14
		Secure: true
	Object:
		Variable: varReplacer3045
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3045)
		Method: <cmu: byte[] a(byte[],byte[])>
		SHA-256: d6acd7f598322bcc55f9b3765b076b302f9bf9d6703977e0860861f6f49a19da
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3016)
		Method: <cmu: java.lang.String d(java.lang.String)>
		SHA-256: a26ce864e0dee7a388746f3ef59cbac24fa1f737e13f0c547e9613b021abcc38
		Secure: false
	Object:
		Variable: varReplacer4269
		Type: int
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer4268, varReplacer4269)
		Method: <bgm: java.lang.String j(java.lang.String,java.lang.String)>
		SHA-256: 61bec1bc6b67e40d428936254208cc0ff77931d81e11e9d979241d022d9cc9dc
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7320)
		Method: <bgc: byte[] a(bge,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: 28f0d76edd6158444ccf60594aebab9e90c78890dad91c4ba27ee78d2be7c32f
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <cmu: java.lang.String i(java.lang.String)>
		SHA-256: 597ae8bc1b28e5f2f0e90c0a92af32006290c3c786cdd39d74851d048079617c
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)
		Method: <bgc: javax.crypto.SecretKey a(char[],byte[])>
		SHA-256: c869c9a0e8dc382f116c0cadffce4c27c350ceb0db2f9fa3b8bdccce6c4b18c3
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3073)
		Method: <cmu: byte[] b(byte[],byte[])>
		SHA-256: 1206efc53afd38d18e9ca3b240fe96e7239b91882d7aadee980c3855e81828dc
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3277)
		Method: <cmt: void init()>
		SHA-256: 6b412568a6dcc5300f7a77da58c00479a2a37c96174ed3c53b559b921a25a649
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r1, varReplacer6091, varReplacer6092)
		Method: <cmu: java.lang.String i(java.lang.String)>
		SHA-256: ef2ebb406d5b326840df3572869d87156261258e40dc86be19ab8ed78f49473b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3113, varReplacer3114)
		Method: <cms: javax.crypto.SecretKey b(java.lang.String)>
		SHA-256: 742e4751ca3c97bc4d963b5726261a230d7271716d867f5e1692889a57e2ea5d
		Secure: true
	Object:
		Variable: varReplacer7311
		Type: int
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, $i0, varReplacer7311)
		Method: <bgc: javax.crypto.SecretKey a(char[],byte[])>
		SHA-256: 6dd3ac0864026b0e6da3325dda4000ed301815df075ac3390e71e3ff3a96aade
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3072)
		Method: <cmu: byte[] b(byte[],byte[])>
		SHA-256: a773e823756b7a46fc60a90c00cd7787e0feea171109882d6f2bace33acea78
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer7312)
		Method: <bgc: javax.crypto.SecretKey a(char[],byte[])>
		SHA-256: f9f20864c61573d3ae9037e7e2e0ca59de58a9cb07aa8db2958347eb2fb3c640
		Secure: false
	Object:
		Variable: varReplacer4234
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4234)
		Method: <bgm: java.lang.String a(java.lang.String,java.lang.String,ark)>
		SHA-256: 77ef61dd06a9f6f471de07da7090ec063b9cc4c459bab9ae816ff1c43d6887ea
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <bgm: java.lang.String j(java.lang.String,java.lang.String)>
		SHA-256: 6306a4a1b72d04e86a01918a3d4eda7f8069da72acfcb3c68385a8a55acdea33
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6078)
		Method: <cmu: java.lang.String j(java.lang.String)>
		SHA-256: a70a29dd4439d3a8ff080758eaf177cca150f6a87588008f5795335280955bb2
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <bgc: byte[] a(bge,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: d633da79664386c418096f8fe7c476b6ce70f2d8a1bd03eeabcc263ff3f1033b
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <bgm: java.lang.String g()>
		SHA-256: 3f9b51f10a404124a1384eca527f53d71184d78157b631bc720fb1a66efadc57
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3044)
		Method: <cmu: byte[] a(byte[],byte[])>
		SHA-256: 1666f7013494902a1bae1158867dc676e91e20435d04c0dffafdc6cadf1e1021
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <bgc: byte[] a(bgd,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: d633da79664386c418096f8fe7c476b6ce70f2d8a1bd03eeabcc263ff3f1033b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11500)
		Method: <okhttp3.internal.Util: dmt sha1(dmt)>
		SHA-256: 2093458ec6c18e2c4f32789558b81e463623ce252049d15128e84f30a470796f
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4233)
		Method: <bgm: java.lang.String a(java.lang.String,java.lang.String,ark)>
		SHA-256: ffef4c722ec2af9197fea20663297b727a7b47b9aab56c4a9b65b2a25fce3a79
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3279)
		Method: <cmt: void init()>
		SHA-256: 5ad9c45655483cbfe8e28b021a6365f220b7eeb90039b8536b79e62f150d2233
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer3050)
		Method: <cmu: byte[] b(byte[])>
		SHA-256: 1efcccc331d9610196dc2211bb47867d713c001293984f9e7df538d90d349e86
		Secure: false
	Object:
		Variable: varReplacer3072
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3072)
		Method: <cmu: byte[] b(byte[],byte[])>
		SHA-256: 325925e8a9615db6abc4c5c9314066c6f97343aee754493d10957c444500efca
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <bgm: java.lang.String i(java.lang.String,java.lang.String)>
		SHA-256: 70b5d31ba9902e54afcf2dc927a1a801d7b26ecf48b0bcb48e5a128f55178e91
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r7)
		Method: <bgm: java.lang.String a(java.lang.String,java.lang.String,ark)>
		SHA-256: efa21f96be3a34ae550e45605792dcea18f90dd38d18beb07c13d309415642bf
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <cms: javax.crypto.Cipher a(byte[])>
		SHA-256: 7963bfe4011be7a79e56ed87a3e9273afe7185e751500c79d50434d5a8a0cb39
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <cmy: java.lang.String d()>
		SHA-256: 97c90767f7759632cdac0b2b02c2857523db77334662109efad2b13118b427d0
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r0.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <cmy: java.lang.String d()>
		SHA-256: b02fe0ac54f7297850251eb588f579b96be0e64bc73dc0d7071060cf5d2c31ba
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzCc()>
		SHA-256: 968515fe3dc43775aac26b1af0e5ac4665f7dd045aac5aaf7b6965e6f3e812a6
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4234)
		Method: <bgm: java.lang.String a(java.lang.String,java.lang.String,ark)>
		SHA-256: af6859971e5f7e762d5161afe52c9c5c5a5de9ac1563d40486b01629d72dcd22
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6095)
		Method: <cmu: java.lang.String i(java.lang.String)>
		SHA-256: 688ebc3b73feed1bdb1616d6b0c3008cd68ca8a5a1a6daaafe093ba4edb137fd
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <cmu: java.lang.String d(java.lang.String)>
		SHA-256: 7012e28733f97769b861b0315d7688c542bf9323c02c5c73245f0af7e4406468
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzd(java.lang.String,long)>
		SHA-256: 9b8a78d9edc971be91147cb909e582cf4e5d47ad532216cffc3f02042f047f00
		Secure: true
	Object:
		Variable: varReplacer6078
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6078)
		Method: <cmu: java.lang.String j(java.lang.String)>
		SHA-256: 686f294e6653f16da585972d061bbfb9ecfb482cf7c74e8252d109bd76256db5
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13556)
		Method: <okhttp3.internal.Util: java.lang.String md5Hex(java.lang.String)>
		SHA-256: 43fb09bc5b1c540aeca82b08f5aa366cd14df22d7a3af9a801b3ec1ddfa1352b
		Secure: true

Findings in Java Class: cmx

	 in Method: byte[] a()
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #9dbdf3afd9602306ad212f28fdcfa6597bf4a60f766760a0369c6bc7435f513)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r2 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3041)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #f9ba139933e346583e3a7349119b8b3d1fc7151b2fd917dd68ec0938aeb00815)
			Third parameter (with value 1024)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r1, varReplacer3039, varReplacer3040)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #f9ba139933e346583e3a7349119b8b3d1fc7151b2fd917dd68ec0938aeb00815)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: specialinvoke r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r1, varReplacer3039, varReplacer3040)


Findings in Java Class: cmu

	 in Method: byte[] a(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1666f7013494902a1bae1158867dc676e91e20435d04c0dffafdc6cadf1e1021)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3044)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3045)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3043, $r2)


	 in Method: byte[] b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer3046, $r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyGenerator (on Object #1efcccc331d9610196dc2211bb47867d713c001293984f9e7df538d90d349e86)
			Operation on object of type javax.crypto.KeyGenerator object not completed. Expected call to generateKey, init
			at statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer3050)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3072)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3074, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1206efc53afd38d18e9ca3b240fe96e7239b91882d7aadee980c3855e81828dc)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3073)


	 in Method: java.lang.String e(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3008, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3011)


	 in Method: java.lang.String d(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3020)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3021, $r2)


	 in Method: java.lang.String i(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6087, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6090)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r1, varReplacer6091, varReplacer6092)


	 in Method: java.lang.String j(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6084, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6078)


Findings in Java Class: cms

	 in Method: javax.crypto.SecretKey a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #a57580e6ebef980b42971665086370fb03d86699138de0c6e8674fc902f48dfa)
			First parameter (with value "AndroidKeyStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3105)


	 in Method: javax.crypto.SecretKey c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #a380f01c60bc29107eb90c3de8e43208e56db300ad99b3899e6bc9521f8072f6)
			First parameter (with value "AndroidKeyStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3107)


	 in Method: javax.crypto.Cipher a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: cmt

	 in Method: void init()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #5ad9c45655483cbfe8e28b021a6365f220b7eeb90039b8536b79e62f150d2233)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3279)


	 in Method: java.lang.String put(java.lang.String,java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #76e9a9b7000d54529bcb637c9aca22271b2c815225bd45d148ff1529c13b755a)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)


	 in Method: java.lang.String get(java.lang.Object)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r8)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #76e9a9b7000d54529bcb637c9aca22271b2c815225bd45d148ff1529c13b755a)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init
			at statement: $r5 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)


	 in Method: boolean containsKey(java.lang.Object)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #76e9a9b7000d54529bcb637c9aca22271b2c815225bd45d148ff1529c13b755a)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init
			at statement: $r5 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)


Findings in Java Class: cqd

	 in Method: boolean a(java.lang.String,java.lang.Object)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #76e9a9b7000d54529bcb637c9aca22271b2c815225bd45d148ff1529c13b755a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r6.<cmt: java.lang.String get(java.lang.Object)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #76e9a9b7000d54529bcb637c9aca22271b2c815225bd45d148ff1529c13b755a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r6.<cmt: java.lang.String get(java.lang.Object)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #76e9a9b7000d54529bcb637c9aca22271b2c815225bd45d148ff1529c13b755a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r6.<cmt: java.lang.String put(java.lang.String,java.lang.String)>($r1, $r5)


	 in Method: java.lang.Object a(java.lang.String,djn)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #76e9a9b7000d54529bcb637c9aca22271b2c815225bd45d148ff1529c13b755a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r3.<cmt: java.lang.String get(java.lang.Object)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #76e9a9b7000d54529bcb637c9aca22271b2c815225bd45d148ff1529c13b755a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r3.<cmt: java.lang.String put(java.lang.String,java.lang.String)>($r1, $r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #76e9a9b7000d54529bcb637c9aca22271b2c815225bd45d148ff1529c13b755a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $z0 = virtualinvoke $r3.<cmt: boolean containsKey(java.lang.Object)>($r1)


	 in Method: void a(java.lang.String[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #76e9a9b7000d54529bcb637c9aca22271b2c815225bd45d148ff1529c13b755a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $z0 = virtualinvoke $r3.<cmt: boolean containsKey(java.lang.Object)>($r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #76e9a9b7000d54529bcb637c9aca22271b2c815225bd45d148ff1529c13b755a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r3.<cmt: java.lang.String put(java.lang.String,java.lang.String)>($r2, $r5)


Findings in Java Class: bgm

	 in Method: java.lang.String j(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #f471f388ee67e0a278bdfc4b433e7fb9182adb887515fd3cdf8a66cfd08fc57)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r6 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer4268, varReplacer4269)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #442e479a0c5fed98a91b87fcbc68ea0886c41c7e837fa00b0d6082265dbf704a)
			First parameter (with value "PBKDF2WithHmacSHA1And8bit") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4267)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #f05e7c4650707d823881bb8ed155871874f9963fb61118650900343c0a63c302)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4266)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #f471f388ee67e0a278bdfc4b433e7fb9182adb887515fd3cdf8a66cfd08fc57)
			Third parameter (with value 1)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer4268, varReplacer4269)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


	 in Method: java.lang.String a(java.lang.String,java.lang.String,ark)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4234)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2bd25ae8eac3701ddb76353aac2926340fbebc32b6df5a14290a89302d5a3bf)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6961)


Findings in Java Class: bgc

	 in Method: javax.crypto.SecretKey a(char[],byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #cd95a1342d1478082d4ddf8c10ff3dba046dbbdd81808af5c28bd87ec70dd696)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r7 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, $i0, varReplacer7311)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer7312)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #2fe01915d56882a7287fe6a0eb43e53c7ee4b0ec03a34d26c2395a9c1d2459c)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer7309)


	 in Method: byte[] a(bgd,javax.crypto.SecretKey,javax.crypto.SecretKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer7341, $r2, $r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


	 in Method: byte[] a(bge,javax.crypto.SecretKey,javax.crypto.SecretKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer7318, $r2, $r11)


Findings in Java Class: cmz

	 in Method: javax.crypto.SecretKey a()
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: void <init>(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5847, varReplacer5847, varReplacer5847)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5847, varReplacer5847, varReplacer5847)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 99

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 32
	IncompleteOperationError: 13
	TypestateError: 3
	ConstraintError: 12
=====================================================================
