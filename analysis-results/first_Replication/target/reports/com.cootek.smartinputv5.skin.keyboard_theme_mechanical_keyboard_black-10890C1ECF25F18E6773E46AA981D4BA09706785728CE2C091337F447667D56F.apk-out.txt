Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.cootek.smartinputv5.skin.keyboard_theme_mechanical_keyboard_black-10890C1ECF25F18E6773E46AA981D4BA09706785728CE2C091337F447667D56F.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer256)
		Method: <com.cootek.tark.ads.utility.Utility: java.lang.String MD5(java.lang.String)>
		SHA-256: 1efa678dc799c17c30499f70990ba23abfbd33c77bd664759acc729b973a4ea6
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer934)
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: 1f0898f00e34b91e909f5ab93fe7adb77c44e7542ee53892af75e808e4b84895
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5846)
		Method: <com.cootek.usage.e: javax.crypto.Cipher a(java.lang.String,int)>
		SHA-256: 4ee15743111389a38535b5d186233525591f38c580cdababfedaa44221d43eb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5847)
		Method: <com.cootek.usage.e: javax.crypto.Cipher a(java.lang.String,int)>
		SHA-256: ebf36f4bfb4e11dfef8b1cda717c099cf27b60bfffd3994167c4e95f00e0479d
		Secure: true
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke $r19.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r14)
		Method: <com.cootek.usage.p: org.apache.http.client.methods.HttpPost c()>
		SHA-256: bed10e67db81dc5284f6022d4fe5225eeb88fc74ca61f05812736614d21780ce
		Secure: false
	Object:
		Variable: r36
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke r36.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r2, $r16)
		Method: <com.cootek.usage.v: void a(com.cootek.usage.v,com.cootek.usage.UsageData)>
		SHA-256: 6686e0c6d6397311c0eb730cae9d461054f5173a001789ef723e66ae7d47a3e5
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer5844)
		Method: <com.cootek.usage.e: javax.crypto.Cipher a(java.lang.String,int)>
		SHA-256: 23e0c7f75e164eaab7ab8b9eda2931b181cb6a1ab3fe0ee2ebfa2adb38562055
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cootek.usage.e: javax.crypto.Cipher a(java.lang.String,int)>
		SHA-256: 69a6e11629d5ad4330e68020ab53d94117f3fa7ade657ab7d93f293532f4646b
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okhttp3.internal.Util: okio.ByteString sha256(okio.ByteString)>
		SHA-256: b9fa638f7c73836986e4b143e5c8a0f5f8453b073695b12e807f45e7b460c05a
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okhttp3.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 35b0119aad99960d8bec3a1c0a0d18ad4ede33706412ee7d9291554433d85f77
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.cootek.usage.e: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 2ad0333bd37733d881e1e75d1c5088ccdf12edb497eece16a7e2a254cc071845
		Secure: false
	Object:
		Variable: varReplacer5984
		Type: java.lang.String
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5984)
		Method: <com.cootek.usage.e: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 25a2060000a058b6c189aa0eb5b4da3a1143e591d4fa0352b375c1bdcf8e8718
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.MessageDigest
		Statement: $r13 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5935)
		Method: <com.cootek.usage.p: org.apache.http.client.methods.HttpPost c()>
		SHA-256: 475a91e02fe68aaa077948b06f105e32d0d546138a1977178fc8c402491ba23e
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cootek.tark.ads.utility.Utility: java.lang.String MD5(java.lang.String)>
		SHA-256: f7b053846a463dbc5c1e4e18ab43e2cae80462e1eb802289f71b55e9dae9e429
		Secure: true
	Object:
		Variable: $r14
		Type: byte[]
		Statement: $r16 = virtualinvoke $r19.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r14)
		Method: <com.cootek.usage.p: org.apache.http.client.methods.HttpPost c()>
		SHA-256: a786b2349da436e1670c50fdaf6d4dbb4b36d69c9271bec07e6c3dedc3f381b3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7186)
		Method: <okhttp3.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 6c845b5e13e3fa4fcb49e96a185d6cd1f76c87e96979e502a8d2b3240ceef342
		Secure: true
	Object:
		Variable: $r19
		Type: javax.crypto.Cipher
		Statement: $r19 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5945)
		Method: <com.cootek.usage.p: org.apache.http.client.methods.HttpPost c()>
		SHA-256: 7b1da8c56acbabac1ec76e9e12deb25450e25be6af50d07efabf9ac283d6570a
		Secure: false
	Object:
		Variable: r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5984)
		Method: <com.cootek.usage.e: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 306e62932bb6dfe822e8537e018655d401c6cdd1b9c83420af31389e12371ead
		Secure: false
	Object:
		Variable: $r22
		Type: javax.net.ssl.SSLContext
		Statement: $r22 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4368)
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: 2d319bfe9261412afb36a1182ade1b014529511878d049ce1ccc237726a9829d
		Secure: false
	Object:
		Variable: varReplacer5844
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer5844)
		Method: <com.cootek.usage.e: javax.crypto.Cipher a(java.lang.String,int)>
		SHA-256: 63e59cf47ff88a43a025f94ace327a8adbcfc611ec8c4c4b8964d601890eed5b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6745)
		Method: <okhttp3.internal.Util: okio.ByteString sha256(okio.ByteString)>
		SHA-256: 3927ff1b531815c65e64f5be6a6d738396d15457ac406a18795940039b77d4b0
		Secure: true
	Object:
		Variable: $r14
		Type: byte[]
		Statement: $r14 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cootek.usage.p: org.apache.http.client.methods.HttpPost c()>
		SHA-256: f43f0b80cc24f7364199acb9950a0f04dbd8191c02216c1f94e49ad87e486405
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5985)
		Method: <com.cootek.usage.e: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 79e9102e0795bb1f177c03e51f82c4e3dbe532e6448cf3ace0e417618a09c0eb
		Secure: false
	Object:
		Variable: r10
		Type: java.security.SecureRandom
		Statement: specialinvoke r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: c49baf8b2831a2be9aa3b8b2b456003f3087b1f5f20fd8411803ca8aa53c7285
		Secure: true

Findings in Java Class: com.facebook.ads.internal.util.g

	 in Method: void b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer935, r12, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer935, r12, $r3)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #1f0898f00e34b91e909f5ab93fe7adb77c44e7542ee53892af75e808e4b84895)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer934)


Findings in Java Class: com.cootek.usage.v

	 in Method: void a(com.cootek.usage.v,com.cootek.usage.UsageData)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #4ee15743111389a38535b5d186233525591f38c580cdababfedaa44221d43eb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r36.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r2, $r16)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #6686e0c6d6397311c0eb730cae9d461054f5173a001789ef723e66ae7d47a3e5)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke r36.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r2, $r16)


Findings in Java Class: com.cootek.usage.e

	 in Method: javax.crypto.Cipher a(java.lang.String,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer5844)


	 in Method: java.lang.String a(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5986, r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5984)


Findings in Java Class: com.cootek.usage.p

	 in Method: org.apache.http.client.methods.HttpPost c()
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r19.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5940, $r18)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: void <init>(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4369, varReplacer4369, varReplacer4369)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4369, varReplacer4369, varReplacer4369)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 24

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 2
	ConstraintError: 1
	RequiredPredicateError: 8
=====================================================================
