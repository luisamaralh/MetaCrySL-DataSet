Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.mobidia.android.mdm-0F802C11D3D540575F931B441AB6AC458946DBB261E035E3FABEF5CB02CA4BC0.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: 71f25f831938e9eb967e3a3705806f64ed3334ce52b0e926a6edc04a1a175ed
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.d: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 241276ba7fbe554c9c7e1038bdc11fbabee2cb00feeec2afeb6ea18d38d3178
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: 667d1c74233dc4695844b2a369b7ca168b7b3f396ce37cb94fd304b9f22f5e14
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.e: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 1ce24e3d8f0119e534d3b54ae438fc33290bdd425784e6d29169a069644e0c7b
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 712110b6d50d4a42f86c9165e8b14514ae6cccf973f8d32cdf255cac7d8b2aad
		Secure: true
	Object:
		Variable: r21
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r21.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2720)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 90de04f8111627fcac688849373e87a85a8769e396bc39f62815ec4f40ab44cc
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer11689)
		Method: <b.a.a.a.e.d.e: javax.net.ssl.SSLContext a()>
		SHA-256: 4b32675c30846fa461c71db29233e9545fed5f4fd803480ee86517e3f8ca2298
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14914)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: a6bcad70d132e5dfe4ad8d1a76d1f419e6a78840deced110893d954fdbc44c2f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKeyFactory
		Statement: $r2 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2408)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: b9e5e509b334f732fdba994bd812b5f1162483852c85f5b13a71a89e9a13da7f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6459)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: 9c04e821e7022c814c3fd5c48baf5298107c8642a1b82577a28e8e83fcabdf4f
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer14869)
		Method: <com.leanplum.aU: javax.net.ssl.SSLSocketFactory b(com.leanplum.aU)>
		SHA-256: 8e71beb3bf254c31365245bb4964dd8856cc06b88c054f2ca3aafc4fd2c3c277
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.mobidia.android.mdm.common.c.y: java.lang.String d(java.lang.String)>
		SHA-256: a47d7bbddfc030a5506065a1b4bf461bc4eb178d9f8603cb0c33f5de55c0cc2
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 370c144343593a2f250efa941f352a4014e247d247772ee8513fb5ea08368c0d
		Secure: false
	Object:
		Variable: varReplacer2723
		Type: int
		Statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer2722, varReplacer2723)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: f8ff66ec55ba21308ca6dfa25b656b656e36e1b3f2c1defc936e69d133a0156f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer11702)
		Method: <com.b.a.a.j: void <init>(java.security.KeyStore)>
		SHA-256: b342cd0a7edef6adec9b659a1a9cfbe87b236f482f781592007863ffda8a1701
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKeyFactory
		Statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2725)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 98fff3a0ce921e4e49f1dfc3a6333f049351248c7cfc4af57345dde81e9a15b4
		Secure: false
	Object:
		Variable: varReplacer2720
		Type: java.lang.String
		Statement: specialinvoke r21.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2720)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 136346ca6c66a998023ceb6b52c55d4f4dddb744510cf723c83ad40d86167087
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobidia.android.mdm.common.c.y: java.lang.String b(java.lang.String)>
		SHA-256: bb04aa38e54b764a200792b2e223d4054826ef6bf167dcd0c2fab6e0e00bf6a6
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2563)
		Method: <com.leanplum.Util: com.leanplum.Util$DeviceIdInfo a(com.leanplum.Leanplum$DeviceIdMode)>
		SHA-256: b83297bb5ff3dbf9b4fb1968f4ae823cd04ea6f0193d650695674201b527b2da
		Secure: true
	Object:
		Variable: r9
		Type: java.security.DigestInputStream
		Statement: specialinvoke r9.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>(r12, $r1)
		Method: <com.leanplum.FileManager: com.leanplum.j a(java.io.InputStream)>
		SHA-256: 133c6271dfef209c4fe0ca5ec7a66d4f3f6886c0cfadc93cb686d64267a2b169
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r3)
		Method: <b.a.a.a.e.d.g: void <init>(java.security.KeyStore)>
		SHA-256: eb053316d2b8d7ceb242e95aa16f22b095c017b4428bad20c0adae5d1cac41cf
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.mobidia.android.mdm.common.c.y: java.lang.String c(java.lang.String)>
		SHA-256: c35d0f8e06dc7b03e9338a2ac24d309418ee41bd8b012583eb87a8f286e6cbe8
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2392)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: 8a43b3aba3fa2eb588f4b3dc075d636ea3e2097a25b96f64eb3e75e2c65eafdc
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2384)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: 5654907e1acdbe2a891ec9db6805d4c9bedf87b292e928eb256153ee4b87d81e
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2714)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 8dc358fdefd2011426239d91fe7914220e7bc7dd3bb996fa5c5c16e16dfac440
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <com.b.a.a.j: java.security.KeyStore d()>
		SHA-256: a4780aba4306a23ed55bbfc3bf21f50f6e1e2a18c2604c23b61a0cedbbf2f6ca
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4937)
		Method: <com.mobidia.android.mdm.common.c.y: java.lang.String b(java.lang.String)>
		SHA-256: 3a5dd19eac105246f23f54cee1cb019aaa5bbf9d17b6b5a277a5188367d4d3f7
		Secure: true
	Object:
		Variable: $r16
		Type: java.security.PublicKey
		Statement: $r16 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.d: android.content.Intent a(android.os.Bundle,java.security.KeyPair)>
		SHA-256: c32cf731cc86df07e8311a82df7c055c94014a59b236207d9560fbb6c00d13c7
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.e: java.security.KeyPair d(java.lang.String)>
		SHA-256: ba8c3bff7867b8051e37c6245c69ff5ac3d84c87fad6658b6d446b5948932f99
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.d: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: f69c5cf6979a6cf50e38f27dd1d1cc1741192cf076a6eaaf9073009bc2a9107e
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: db8072afebe4b7e5cf036ef9f5e83e17ea8cf5ec2bda667e613b5015e947f54f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2796)
		Method: <com.leanplum.FileManager: com.leanplum.j a(java.io.InputStream)>
		SHA-256: a7d1e2e13f75e26af85c426615eae6eb4940ee99bda213cf9ac34e0df9c6320f
		Secure: false
	Object:
		Variable: varReplacer2406
		Type: int
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer2405, varReplacer2406)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: a8ce9fc8c1b525b90672e0a7f2b4fec0a4b3cfdac287862f099d503f8e339344
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.leanplum.Util: com.leanplum.Util$DeviceIdInfo a(com.leanplum.Leanplum$DeviceIdMode)>
		SHA-256: 73c00de4aabbd1e30b803e43a1424eb449559342e2c534257b933ddf6f8d3d54
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: 9ecaa33e86e33ff9831c13444b6f49d916db391d3317455582d3c37ae0d36a9c
		Secure: false
	Object:
		Variable: r22
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r22.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 9de94fb3b8b644281a93e70f5ced5a864e7605e93cd7ead74732dcaed3d32d5f
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer14929)
		Method: <com.google.android.gms.iid.b: java.security.KeyPair a()>
		SHA-256: c6c501e19d39cf9ce659ae5df3a1ebed2e30fa037d55c23adcdcf475fcc7f3ae
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.b: java.security.KeyPair a()>
		SHA-256: 7783709ffb59212b53ecfaa3646ac9e01977d69d48097298577a30772a4d8880
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.PrivateKey
		Statement: $r4 = virtualinvoke $r0.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.d: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: cf2b6911999dfc1b13649759f15d29c7c9209f057091e536b4e744c484308ea5
		Secure: true
	Object:
		Variable: varReplacer2392
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2392)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: 774cfd7fa9873b926af60f8eb1f465960b4a9d65c885af7dfca07bcdc45ba483
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.PrivateKey
		Statement: $r10 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.e: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: e3937725b54efa2cdca665505748f1fac90b93798750264f705130372206db70
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4950)
		Method: <com.mobidia.android.mdm.common.c.y: java.lang.String c(java.lang.String)>
		SHA-256: c6dcbc3191c4f7f23546f40ad2e4186b1afe2ff4fd76c13f7bd64526503527f1
		Secure: true
	Object:
		Variable: $r21
		Type: javax.net.ssl.SSLContext
		Statement: $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4097)
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: 9c8da04aad925cccd9d2f509198704226b452e09295ace6c70b730601fb12b7b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2367)
		Method: <com.mobidia.android.mdm.common.c.y: java.lang.String d(java.lang.String)>
		SHA-256: 9984a6f71e36f3c02ace38d49cfd7dc550d1b4f3cdf38caf24fb87e00b994df
		Secure: true
	Object:
		Variable: r20
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer2722, varReplacer2723)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 40c0b1f41e01c8894f6016dd21fcbc576ea295a35060114aa95d73668ee3ba2d
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: a3d08211d3ba404e6ba4646686ff2b51d3fd8d0e847ca8bb2960c48a82e64856
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.PublicKey
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: a4e4ecffbfa24945c7b9252e6e971a5919b9c0bad5744e4045419497644909c7
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer2405, varReplacer2406)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: 59ff03e8f2d8a2c39d55d02fd851387ada1dfb23c8f843dd2bfbdbb95f970f42
		Secure: false

Findings in Java Class: com.mobidia.android.mdm.client.common.utils.j

	 in Method: byte[] a(java.lang.String,byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #59ff03e8f2d8a2c39d55d02fd851387ada1dfb23c8f843dd2bfbdbb95f970f42)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r7 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #59ff03e8f2d8a2c39d55d02fd851387ada1dfb23c8f843dd2bfbdbb95f970f42)
			Third parameter (with value 1000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer2405, varReplacer2406)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2392)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer2405, varReplacer2406)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2414, $r6, $r9)


Findings in Java Class: com.leanplum.a

	 in Method: byte[] a(int,java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer2722, varReplacer2723)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r9, $r11)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #40c0b1f41e01c8894f6016dd21fcbc576ea295a35060114aa95d73668ee3ba2d)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer2722, varReplacer2723)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r21.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2720)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r22.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #40c0b1f41e01c8894f6016dd21fcbc576ea295a35060114aa95d73668ee3ba2d)
			Third parameter (with value 1000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer2722, varReplacer2723)


Findings in Java Class: com.leanplum.FileManager

	 in Method: com.leanplum.j a(java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #a7d1e2e13f75e26af85c426615eae6eb4940ee99bda213cf9ac34e0df9c6320f)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #133c6271dfef209c4fe0ca5ec7a66d4f3f6886c0cfadc93cb686d64267a2b169)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: specialinvoke r9.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>(r12, $r1)


Findings in Java Class: com.google.android.gms.iid.a

	 in Method: java.lang.String a(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a6bcad70d132e5dfe4ad8d1a76d1f419e6a78840deced110893d954fdbc44c2f)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14914)


Findings in Java Class: com.google.android.gms.iid.d

	 in Method: java.lang.String a(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #f69c5cf6979a6cf50e38f27dd1d1cc1741192cf076a6eaaf9073009bc2a9107e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: b.a.a.a.e.d.e

	 in Method: javax.net.ssl.SSLContext a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer11690, varReplacer11690, varReplacer11690)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer11690, varReplacer11690, varReplacer11690)


Findings in Java Class: com.leanplum.aU

	 in Method: javax.net.ssl.SSLSocketFactory b(com.leanplum.aU)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer14866, varReplacer14866, varReplacer14866)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer14866, varReplacer14866, varReplacer14866)


Findings in Java Class: com.b.a.a.j

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer11700, r5, varReplacer11700)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer11700, r5, varReplacer11700)


Findings in Java Class: b.a.a.a.e.d.g

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r9, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r9, $r10)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: void <init>(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4092, varReplacer4092, varReplacer4092)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4092, varReplacer4092, varReplacer4092)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 48

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 20
	IncompleteOperationError: 3
	ConstraintError: 4
	TypestateError: 1
=====================================================================
