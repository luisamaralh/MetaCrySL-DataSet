Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.expressvpn.vpn-048592BB1E3398081E454CD31218025F58D1F2F8BE1F92DD35740A352E92E863.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1815)
		Method: <com.expressvpn.vpn.config.crypter.PiiCrypter: void loadKeyStore()>
		SHA-256: adfec47a2bbbc2cb44c4fe76a90cfca2e79c00769329ce7ddded2e9be471479f
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.KeyGenerator
		Statement: $r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1831)
		Method: <com.expressvpn.vpn.config.crypter.PiiCrypter: void generateKey()>
		SHA-256: 9b54a2397ad5910dcb3e1c50ab1bc8a44481dff5f53af0bd1884a6fdb87d2560
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.expressvpn.vpn.config.crypter.PiiCrypter: void generateKey()>
		SHA-256: 502ad7d0e5ef9cdebbfcb036c0f02dd38a5f4e996f960da920557375444cbe4e
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer1821, varReplacer1822)
		Method: <com.expressvpn.vpn.config.crypter.PiiCrypter: byte[] decrypt(byte[])>
		SHA-256: 9147fb02a4bfef91cd81ee9d1e3cc2678e79ad3fc27f955401eaec129634ea12
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3074)
		Method: <com.expressvpn.vpn.xvca.XvcaClient: void init()>
		SHA-256: 6217105511f0734134c451fb8747a0f5344c6dc880665840b8794e2193e7b869
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.expressvpn.vpn.config.crypter.PiiCrypter: byte[] decrypt(byte[])>
		SHA-256: 77b62d744ea7f6d73527fd973b9c409f44fda837acac96d681fe9cb3d8366a1f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.expressvpn.vpn.config.crypter.PiiCrypter: void generateKey()>
		SHA-256: c01e7b69c038f216e68a94669a08d70851400131614ea0e03c9f531ef7ba4df6
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3312)
		Method: <com.expressvpn.vpn.config.service.XVPNHttpClient: org.apache.http.conn.ssl.SSLSocketFactory newSslSocketFactory(com.expressvpn.vpn.EvpnContext)>
		SHA-256: bac7020fe653c5fb20dc7eee7696d05e352b1702fee29a9d9dffd26d76619be0
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.expressvpn.vpn.tracking.TrackingUtils: java.lang.String md5(java.lang.String)>
		SHA-256: 1ce4a4cc6d5400beb3ee493079524a43c50539a61cfbefabe257e22700f7503d
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5800)
		Method: <com.expressvpn.vpn.util.SHA256Hash: java.lang.String computeHash(java.lang.String)>
		SHA-256: b69875337df85d40df66833a1f2ffe1011acb54a5bdbb7eddd3a73f1a1b9ff6b
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r1 = virtualinvoke $r2.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer1809, varReplacer1810)
		Method: <com.expressvpn.vpn.config.crypter.PiiCrypter: boolean keyAvailable()>
		SHA-256: c2f4f03128c05e198fb35c43c51d634da9dfbc624c1cc18468b29dcc324f567f
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer360)
		Method: <com.expressvpn.vpn.tracking.TrackingUtils: java.lang.String md5(java.lang.String)>
		SHA-256: 76202aaaac2fb4b8c5f4a846a4e9e5233a32b738f333b1361e8cdf412ddebaa7
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.expressvpn.vpn.util.SHA256Hash: java.lang.String computeHash(java.lang.String)>
		SHA-256: 86d993b568b1794e2fea0ee015fc06420b165f2d4a80dabbfc963ba0b406f584
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r1 = virtualinvoke $r3.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer1826, varReplacer1827)
		Method: <com.expressvpn.vpn.config.crypter.PiiCrypter: void loadKey()>
		SHA-256: b2f31c9691eebeeb193b4a6ee0bf2b10a1ba15f97483b4b6d213dfa926b69daf
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5392)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: 9c5791ccc28bf042b2635ef0369f2b4692ff03f60d7d0bf6f7a04ed93f14539f
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r9 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer3075)
		Method: <com.expressvpn.vpn.xvca.XvcaClient: void init()>
		SHA-256: a4d0791f96ae37bdf6654593aa91d50c7589e590330ff976ff3bff0495b7319a
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.KeyManager[]
		Statement: $r10 = virtualinvoke $r9.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.expressvpn.vpn.xvca.XvcaClient: void init()>
		SHA-256: b07f1959370dc1c02a702a2aee4a7c05c41056bb4bac5ad971a8c07004aceb35
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.SSLContext
		Statement: $r11 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3077)
		Method: <com.expressvpn.vpn.xvca.XvcaClient: void init()>
		SHA-256: 14693df9530feae07865164b6b831a53b131cdbd4529db6d0b1dd44237f12ea3
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r1, varReplacer1820, $i0)
		Method: <com.expressvpn.vpn.config.crypter.PiiCrypter: byte[] decrypt(byte[])>
		SHA-256: 941a543b1d0cd696277840b0416e56be75a131f5ff4add3195127b8781ab75b
		Secure: false

Findings in Java Class: com.expressvpn.vpn.config.crypter.PiiCrypter

	 in Method: void loadKeyStore()
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #adfec47a2bbbc2cb44c4fe76a90cfca2e79c00769329ce7ddded2e9be471479f)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, varReplacer1814)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #adfec47a2bbbc2cb44c4fe76a90cfca2e79c00769329ce7ddded2e9be471479f)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>(varReplacer1812)


	 in Method: void saveKeyStore()
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #adfec47a2bbbc2cb44c4fe76a90cfca2e79c00769329ce7ddded2e9be471479f)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r4.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r5, varReplacer1817)


	 in Method: byte[] decrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1819, $r4, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1819, $r4, $r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9147fb02a4bfef91cd81ee9d1e3cc2678e79ad3fc27f955401eaec129634ea12)
			First parameter (with value "AES/GCM/NoPadding") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer1821, varReplacer1822)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)


Findings in Java Class: com.expressvpn.vpn.xvca.XvcaClient

	 in Method: void init()
		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a4d0791f96ae37bdf6654593aa91d50c7589e590330ff976ff3bff0495b7319a)
			First parameter (with value "X509") should be any of {PKIX}
			at statement: $r9 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer3075)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r11.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r10, varReplacer3068, varReplacer3068)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r11.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r10, varReplacer3068, varReplacer3068)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5393, r7, varReplacer5393)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5393, r7, varReplacer5393)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 19

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 7
	TypestateError: 3
	ConstraintError: 2
=====================================================================
