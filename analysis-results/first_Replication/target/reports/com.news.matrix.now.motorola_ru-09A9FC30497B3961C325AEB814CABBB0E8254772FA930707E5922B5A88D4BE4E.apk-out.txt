Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.news.matrix.now.motorola_ru-09A9FC30497B3961C325AEB814CABBB0E8254772FA930707E5922B5A88D4BE4E.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.appsee.jb: java.lang.String M(byte[])>
		SHA-256: 86b5aa4c16c503610b7034eebb4d1d4610e1f8ba63fec804f81b325fa6b5f6ea
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <com.loopj.android.http.p: java.security.KeyStore a()>
		SHA-256: 2b07ca059440c5511bd37927988fcf6efa990e1795b8235032779d20bc37799b
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3114)
		Method: <com.b.a.a.a.b.c: byte[] a(byte[])>
		SHA-256: c8f75a3bb12c505d780cc0d092e57ba583280aeb8eb570efe96d88bf190b795a
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3342)
		Method: <com.c.a.aj: javax.net.ssl.SSLSocketFactory y()>
		SHA-256: 4ac22f158b407422077af95ef940bd58bc94ff89c3e7d8dabd33cdeb117a227b
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzcu(java.lang.String)>
		SHA-256: a107f0a15b16b8e021c95c077590c48b5b253ddc4b8bda38bce253162a9875cd
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.c.a.a.m: b.j a(b.j)>
		SHA-256: caff16dd6cc6ca34c4ae1c9225a64434d55e4a4d1c77d972b816e772de1dff5d
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3656)
		Method: <com.caribbean.util.aj: byte[] b(byte[])>
		SHA-256: 63dfddad0a93a0fe210f3178672370282074e057901238ddfdc62aa79cdb5e86
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.caribbean.util.aj: byte[] b(byte[])>
		SHA-256: 1e45784992aa24305ea4b83b04b472a4a7417edb2fbec7bd663e61437443f7c0
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1790)
		Method: <com.loopj.android.http.p: void <init>(java.security.KeyStore)>
		SHA-256: 94909d744c24a0289e1bd0a6dc40e37d575da26fd0d665d68267afde402c8abe
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.b.a.a.a.b.c: byte[] a(byte[])>
		SHA-256: 2c9b15e05768c3bb41a85d6b678b8517c98e5491cef1f7980fad6a50e7446d8b
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5097)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzcu(java.lang.String)>
		SHA-256: 5a0e0a9b4bd9e8e234379c081881d60bae403346e468dd040f44376fd3428617
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.appsee.jb: java.lang.String M(byte[])>
		SHA-256: 2deaf9dcafd5be0fa392381e7345e04f3e6c7d4a0c3c7f757f8ec7481c4308a5
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9923)
		Method: <com.c.a.a.m: b.j a(b.j)>
		SHA-256: 6aeacdfba59bf4a84051277d7be3a3034ad647d842113f39364b8c16ad1a43d
		Secure: true

Findings in Java Class: com.c.a.aj

	 in Method: javax.net.ssl.SSLSocketFactory y()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3339, varReplacer3339, varReplacer3339)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3339, varReplacer3339, varReplacer3339)


Findings in Java Class: com.loopj.android.http.p

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1791, r5, varReplacer1791)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1791, r5, varReplacer1791)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 4
=====================================================================
