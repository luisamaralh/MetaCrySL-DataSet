Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.symantec.applock-10AAF42984F8B77257B3BDF7E660996E907B1CC270A16A16ABD1B9F7A94567C2.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer2748
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2748)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 3310e06ebcc38ac1134306d410c5ecefa2dc4e9ed4083a5dbb464a485706c022
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.Signature
		Statement: $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer5307)
		Method: <com.symantec.maf.ce.o: boolean b(java.lang.String,java.lang.String)>
		SHA-256: 2b849786375fe23e9c78989b10e30f0522b8c4138dc2ae170fd55e2ca884bba1
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 482d867abb00b5fa8d1685e20890d1eb11dedb43c7827641f214e2f719e967b0
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5056)
		Method: <com.symantec.applock.ai: javax.crypto.SecretKey f()>
		SHA-256: 4e7b6ef532c67e1b282dae7dcc10280f49cb48075dbe5eb73d9720a1ec9a4092
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.SSLContext
		Statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1262)
		Method: <com.symantec.ping.PingTaskService: boolean a(com.symantec.ping.h)>
		SHA-256: fae203661ecce677282c3547a63752cc16a3a8cd0ec0d6d08e1f1be6ba82299a
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2739)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 7fa4caa5ab7eac0843ee443dfb6ce75c6c78d7048915d67975b7c11c0d6d52dc
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer5062, varReplacer5063)
		Method: <com.symantec.applock.ai: javax.crypto.SecretKey f()>
		SHA-256: a3e921b1637171e2cf249137c61e3b43f770d7ce9be594407375187d9ecc3314
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.symantec.android.machineidentifier.r: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: f2c7fcb3df82a62092a5b1513f3ede91007310b6e2f628bd506124b3f7eb0936
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 482d867abb00b5fa8d1685e20890d1eb11dedb43c7827641f214e2f719e967b0
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.SecretKey
		Statement: $r9 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 4b01a801d746959d736f4907318be4d7e4a334de59f9a1866c499330ff00ac80
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2741)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 533356f74838f1b724577f1b22cb75e74a944b8484ee352e5f9d68ecc942c21d
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r9.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.symantec.maf.ce.o: boolean b(java.lang.String,java.lang.String)>
		SHA-256: d483e74d15cdf9b97fa2cbcf53edae524f0ba713286a4044aa1fa825fc16b903
		Secure: false
	Object:
		Variable: varReplacer2747
		Type: int
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r8, $r1, varReplacer2746, varReplacer2747)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: d163691f87543e0b8e38b43842901ee4963c0c10bd40b6d7bc18948c21a47576
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2738)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: af28eaaaf5261e04ceca308ba73ab45005909e10b84edf4ba4b9cf4fb3b0f4b8
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2748)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 67665436781d8175a03cf84969679a88ef85b029ca8c62aafdeb1b27dd6e9ba4
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r8, $r1, varReplacer2746, varReplacer2747)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: e14b74768101003227e3f59bd0490ed847ec5827f668667a01acbad55c4829cb
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5051)
		Method: <com.symantec.applock.ai: javax.crypto.Cipher e()>
		SHA-256: 2137be025ccc14ec62859af6816ac58419f2391277ca71a40b5551ba0d51e9da
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.symantec.android.appstoreanalyzer.p: byte[] b(java.lang.String)>
		SHA-256: e49d258bf7b39c8c406205c838f4b53308b74c04530539a1737a6becdcd3341b
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2850)
		Method: <com.symantec.android.machineidentifier.r: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: da6dd45261cf5b1e7ec98f6134082ab0874769567cd66b8076ca96b3717a76fa
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: $r7 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2757)
		Method: <com.symantec.android.machineidentifier.c: void a(boolean)>
		SHA-256: 9c8c3bb0d4de92cb6558f8bb318283d44cc5f930d9ee723bd24d3ef5b8a5fa6e
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3349)
		Method: <com.symantec.android.appstoreanalyzer.p: byte[] b(java.lang.String)>
		SHA-256: eaf59fc162a62608f86516850eab9d59044e9578b6b59cdc161cd9bd1f67a817
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.symantec.applock.ai: javax.crypto.SecretKey f()>
		SHA-256: a283a088ce262fc172867bde4cea2afcae6555a4649cdda5587dd9edde05284e
		Secure: true

Findings in Java Class: com.symantec.android.machineidentifier.a

	 in Method: void <init>(byte[],java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r8, $r1, varReplacer2746, varReplacer2747)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #e14b74768101003227e3f59bd0490ed847ec5827f668667a01acbad55c4829cb)
			Third parameter (with value 1024)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r8, $r1, varReplacer2746, varReplacer2747)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #e14b74768101003227e3f59bd0490ed847ec5827f668667a01acbad55c4829cb)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2748)


Findings in Java Class: com.symantec.android.machineidentifier.r

	 in Method: byte[] a(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #da6dd45261cf5b1e7ec98f6134082ab0874769567cd66b8076ca96b3717a76fa)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2850)


Findings in Java Class: com.symantec.applock.ae

	 in Method: void a(com.symantec.applock.ag)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2137be025ccc14ec62859af6816ac58419f2391277ca71a40b5551ba0d51e9da)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke $r2.<com.symantec.applock.ai: void a(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback)>($r4)


Findings in Java Class: com.symantec.applock.ai

	 in Method: javax.crypto.SecretKey f()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #4e7b6ef532c67e1b282dae7dcc10280f49cb48075dbe5eb73d9720a1ec9a4092)
			First parameter (with value "AndroidKeyStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5056)


Findings in Java Class: com.symantec.maf.ce.o

	 in Method: boolean b(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r9.<java.security.Signature: void initVerify(java.security.PublicKey)>($r8)


Findings in Java Class: com.symantec.ping.PingTaskService

	 in Method: boolean a(com.symantec.ping.h)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1272, r26, varReplacer1272)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1272, r26, varReplacer1272)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 22

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 2
	RequiredPredicateError: 8
	ConstraintError: 3
=====================================================================
