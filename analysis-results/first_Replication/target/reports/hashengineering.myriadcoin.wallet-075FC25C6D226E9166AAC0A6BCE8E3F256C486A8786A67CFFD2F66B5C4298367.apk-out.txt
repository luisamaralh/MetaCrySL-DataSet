Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/hashengineering.myriadcoin.wallet-075FC25C6D226E9166AAC0A6BCE8E3F256C486A8786A67CFFD2F66B5C4298367.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Alive 56564  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r28
		Type: java.security.Signature
		Statement: $r28 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()>
		SHA-256: d3c7b83e7486f02ed3737d00a2cac468af662a3672495cefd4612607b0a6eeed
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.DigestInputStream
		Statement: specialinvoke $r3.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r2, $r11)
		Method: <com.google.bitcoin.core.CheckpointManager: void <init>(com.google.bitcoin.core.NetworkParameters,java.io.InputStream)>
		SHA-256: b501322860cf6b46d4a3ca5a9672f34e477c550346be270e44218d81199ce94c
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.google.bitcoin.core.Utils: byte[] sha256hash160(byte[])>
		SHA-256: 546d290a2432772f7d77fd096aafe14fd3233a466aced47ca28eb87d03674bd9
		Secure: true
	Object:
		Variable: $r26
		Type: java.security.MessageDigest
		Statement: $r26 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5061)
		Method: <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>
		SHA-256: e56916ac3e730990360edaec10ae7794376f2bee0827b8c02ad88b4b0c31be49
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3097)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: java.security.KeyStore createKeyStore(java.lang.String)>
		SHA-256: 8e6d8b128b3a6bcc809dd84fe4eeb92f2b4457752ce90aa84345c2eb1bfa5a3a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer655)
		Method: <com.google.bitcoin.core.Utils: void <clinit>()>
		SHA-256: 57b76c86a63b36b3e0dacc75babc245f1741b2bef719d01e0b5b6d9cfc1c4e8a
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6480)
		Method: <com.hashengineering.crypto.Groestl: void <clinit>()>
		SHA-256: a6cb1f23412b677a3ae14cce4667a23eb8cbd85aded3fb378e8f24c9b86c988
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: java.security.KeyStore createKeyStore(java.lang.String)>
		SHA-256: 42405f43c07d0cd9ac87f0e4cabacd6c6d8859ff772f57160ec37ce6ebdf0f30
		Secure: true
	Object:
		Variable: $r30
		Type: byte[]
		Statement: $z0 = virtualinvoke $r28.<java.security.Signature: boolean verify(byte[])>($r30)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()>
		SHA-256: 23ab06d7af157d4146cea1b1243ee9d40e5e853ed562861ee8ccf78940d8de6b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3178)
		Method: <com.google.bitcoin.core.Utils: byte[] sha256hash160(byte[])>
		SHA-256: e61d1ecf9fbb1ab4bfcfd9286b10dab2c385cde1642a03148a9a6991f7520f3b
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r26.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>
		SHA-256: 8e31e01138be74028ef3a6b58db86216562b93149a95d68d64b87e6f3437ab3b
		Secure: true
	Object:
		Variable: $r26
		Type: java.security.MessageDigest
		Statement: $r26 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5063)
		Method: <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>
		SHA-256: 54eb5e538e70a12cb6f14a87b9025b8b15c6e0d89227a477cee3225e1e1f9b1d
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.bitcoin.core.ECKey: void <clinit>()>
		SHA-256: b8182c8b806eae893d66be9f5681d586425e17587ba497b9aa5ad2da95e1152
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6528)
		Method: <com.lambdaworks.crypto.SCrypt: byte[] scryptJ(byte[],byte[],int,int,int,int)>
		SHA-256: f8a5aaae697fa39f22d855b64e7d114642ced47b650d0dede129921df7e5f708
		Secure: false
	Object:
		Variable: r50
		Type: java.security.cert.PKIXParameters
		Statement: specialinvoke r50.<java.security.cert.PKIXParameters: void <init>(java.security.KeyStore)>($r23)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()>
		SHA-256: c91c5c04f9ad4493017b9698b5414d54240b894f945aec5970e752f66e428e43
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3836)
		Method: <com.google.bitcoin.core.CheckpointManager: void <init>(com.google.bitcoin.core.NetworkParameters,java.io.InputStream)>
		SHA-256: 5f01bf80b75a5d8a0fa362f216ce6269cba05e042cbb6b0543505f3f5d927c3e
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r26.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>
		SHA-256: 8e31e01138be74028ef3a6b58db86216562b93149a95d68d64b87e6f3437ab3b
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: java.security.KeyStore createKeyStore(java.lang.String)>
		SHA-256: c802f952b3f7fbd04b9e61c85189101cdaa4ba6bbac327aa4fbf07b49ff3fc88
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <de.schildbach.wallet.util.Crypto: void <clinit>()>
		SHA-256: 85d47204815d2c880a4f9340a728bff586b271e476d0c85901ff5549e19af52b
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6433)
		Method: <com.hashengineering.crypto.Skein: void <clinit>()>
		SHA-256: 2704b72a98b312a979912d680d5c4464d796095047939fe9da021d37cb224fa6
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r0.<javax.crypto.Mac: void doFinal(byte[],int)>($r4, varReplacer6536)
		Method: <com.lambdaworks.crypto.PBKDF: void pbkdf2(javax.crypto.Mac,byte[],int,byte[],int)>
		SHA-256: 8d73ad36d902d87f45b88c87ba1043689f98b224c5448dce0f5ba2b4ce9d1aed
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6525)
		Method: <com.lambdaworks.crypto.SCrypt: byte[] scryptJ(byte[],byte[],int,int,int,int)>
		SHA-256: 72549b63d77e8202cf0f830fa3e9832c7e158a01fde5cc97bca9dd9893ac7f34
		Secure: false
	Object:
		Variable: varReplacer6525
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6525)
		Method: <com.lambdaworks.crypto.SCrypt: byte[] scryptJ(byte[],byte[],int,int,int,int)>
		SHA-256: f69db38abfa0f27c886e189396c79d888c608a7d6f9b11a9a97a9b41e0682c18
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3094)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: java.security.KeyStore createKeyStore(java.lang.String)>
		SHA-256: 88f520c268bdf86cba2ff5d83495e9e1fd4e592c70c847b91b784fa6e471bb64
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.bitcoin.crypto.KeyCrypterScrypt: void <clinit>()>
		SHA-256: fdba3ff09a29f7bd6f734efc4217ade56b46c6431eddfac7a2866238eec414d5
		Secure: true

Findings in Java Class: com.google.bitcoin.core.CheckpointManager

	 in Method: void <init>(com.google.bitcoin.core.NetworkParameters,java.io.InputStream)
		ForbiddenMethodError violating CrySL rule for java.security.DigestInputStream
			Detected call to forbidden method void on(boolean) of class java.security.DigestInputStream
			at statement: virtualinvoke $r3.<java.security.DigestInputStream: void on(boolean)>(varReplacer3837)

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #b501322860cf6b46d4a3ca5a9672f34e477c550346be270e44218d81199ce94c)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: virtualinvoke $r3.<java.security.DigestInputStream: void on(boolean)>(varReplacer3837)

		ForbiddenMethodError violating CrySL rule for java.security.DigestInputStream
			Detected call to forbidden method void on(boolean) of class java.security.DigestInputStream
			at statement: virtualinvoke $r3.<java.security.DigestInputStream: void on(boolean)>(varReplacer3840)

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #b501322860cf6b46d4a3ca5a9672f34e477c550346be270e44218d81199ce94c)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: virtualinvoke $r3.<java.security.DigestInputStream: void on(boolean)>(varReplacer3840)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #5f01bf80b75a5d8a0fa362f216ce6269cba05e042cbb6b0543505f3f5d927c3e)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #5f01bf80b75a5d8a0fa362f216ce6269cba05e042cbb6b0543505f3f5d927c3e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r2, $r11)


Findings in Java Class: com.google.bitcoin.protocols.payments.PaymentSession

	 in Method: java.security.KeyStore createKeyStore(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #8e6d8b128b3a6bcc809dd84fe4eeb92f2b4457752ce90aa84345c2eb1bfa5a3a)
			First parameter (with value "AndroidCAStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3097)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #88f520c268bdf86cba2ff5d83495e9e1fd4e592c70c847b91b784fa6e471bb64)
			First parameter (with value "JKS") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3094)


	 in Method: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r28.<java.security.Signature: void initVerify(java.security.PublicKey)>($r27)


Findings in Java Class: com.lambdaworks.crypto.PBKDF

	 in Method: void pbkdf2(javax.crypto.Mac,byte[],int,byte[],int)
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #f8a5aaae697fa39f22d855b64e7d114642ced47b650d0dede129921df7e5f708)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void update(byte[])>($r5)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #f8a5aaae697fa39f22d855b64e7d114642ced47b650d0dede129921df7e5f708)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void update(byte[])>($r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #f8a5aaae697fa39f22d855b64e7d114642ced47b650d0dede129921df7e5f708)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $i3 = virtualinvoke $r0.<javax.crypto.Mac: int getMacLength()>()


Findings in Java Class: com.lambdaworks.crypto.SCrypt

	 in Method: byte[] scryptJ(byte[],byte[],int,int,int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6525)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #f8a5aaae697fa39f22d855b64e7d114642ced47b650d0dede129921df7e5f708)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: staticinvoke <com.lambdaworks.crypto.PBKDF: void pbkdf2(javax.crypto.Mac,byte[],int,byte[],int)>($r5, $r0, varReplacer6526, $r4, varReplacer6527)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 25

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 5
	ForbiddenMethodError: 2
	TypestateError: 3
	RequiredPredicateError: 2
	ConstraintError: 2
=====================================================================
