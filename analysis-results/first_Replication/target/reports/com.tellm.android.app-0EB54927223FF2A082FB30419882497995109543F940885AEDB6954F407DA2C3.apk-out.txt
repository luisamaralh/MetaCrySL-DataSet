Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.tellm.android.app-0EB54927223FF2A082FB30419882497995109543F940885AEDB6954F407DA2C3.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: bb7187a5bb3b8757816d72f6d792fc777b962cfcc06524eec6d517f459d321b
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.jodelapp.jodelandroidv3.api.HmacInterceptor: java.lang.String calculateSaltHash(android.content.Context)>
		SHA-256: e28281151f7c5086567a908d51fac900f213780710bf7a793169e7e856546553
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair tr()>
		SHA-256: dc323537daf211f39a0027256aeb7e3a62e9ebc48faef1f40995267cac3806fe
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair aK(java.lang.String)>
		SHA-256: fdb563a61f8e0347aa28ffbc9251ddd88a7797d97796ee99b6f835fa6ff57d2e
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2859)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String a(java.security.KeyPair)>
		SHA-256: fbdde59886024e99fb40c2970f16c9068dbafbc1e00219e9117b4c5b6ce7f9a1
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r6, varReplacer3371, varReplacer3372)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: byte[] ax(android.content.Context)>
		SHA-256: 4431d4d78506983b5aefa014b5eacb6d6dff5ea324a78d7062abfd1c0d4d4f2f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3483)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: java.lang.String dt(java.lang.String)>
		SHA-256: 1c0f86b92286c6fd03c97d18306d2c8882674f6a693078a3ad8bd53cb14f3a31
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3490)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: java.lang.String du(java.lang.String)>
		SHA-256: 83e61e534c085503ad227ee929448bef2141278b8f3a2a2d693ea68b4dfc94e2
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: ac332d587bf39023540fdf27c9a6e0af48c14d7b2a948ab0d52f7121a0730bd1
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: java.lang.String du(java.lang.String)>
		SHA-256: 4db7f4c8b8dcc9cd59218ebf55f61dc169bb7788eb69c63d53c85115ffd322b5
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.SSLContext
		Statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1770)
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: 2ac2179ce7c3d355b8f517035bb74384e9798e842d8aa0cbfc8d50e5299a152f
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair f(java.lang.String,long)>
		SHA-256: b1a3c2e51971c55999a38ad2a26b17dfe86bf1526bed5477e12114e8e75e089d
		Secure: true
	Object:
		Variable: varReplacer3372
		Type: int
		Statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r6, varReplacer3371, varReplacer3372)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: byte[] ax(android.content.Context)>
		SHA-256: d2c159a3bcd19c20a1a88efb8a40f0a1b6f7c564c81e26a832c5ff4370cbc56b
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3479)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: java.lang.String dt(java.lang.String)>
		SHA-256: b0b121be19a510ff5d9da9612e058587c91523d4af713992edd875789e3948cd
		Secure: false
	Object:
		Variable: varReplacer3479
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3479)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: java.lang.String dt(java.lang.String)>
		SHA-256: a112e6713a5c2f77c3510f8960a8d95fcec8948a5adb5ef849d893b7fa9e175f
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKeyFactory
		Statement: $r8 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3369)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: byte[] ax(android.content.Context)>
		SHA-256: ad1214790cde03aa43bbd453e91f927534730132f26cee805544cabc26e17e82
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6339)
		Method: <okhttp3.internal.Util: okio.ByteString a(okio.ByteString)>
		SHA-256: bb78f984ccdb4eb8d7a7d7eb9a67613077dfb34048a6b731ec55d8654e08310d
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String a(java.security.KeyPair)>
		SHA-256: 756b01b06feb63ec058f055931b7364dec725eddbf18032316df47bfbaf76753
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <okhttp3.internal.Util: okio.ByteString a(okio.ByteString)>
		SHA-256: e12a4bede81b02f3ec9b7a9d52d2fed42a2ff31c2ffb5afaa4b01ccdec2a388f
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer2924)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair tr()>
		SHA-256: 6a9067a550d9111ef1950cf53ed6bb44d9c771cde9a190110f95d3d001a3dd75
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.SecretKey
		Statement: $r9 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r7)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: byte[] ax(android.content.Context)>
		SHA-256: d9fe345977ee1d26ebda849cc3b5a162519b374bae84caa87f1cd4a1f2f97540
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: java.lang.String dt(java.lang.String)>
		SHA-256: e169e8fa5faab8197645ba73cd6e517a4d3f497a4c35eafe3661ca043bbdf833
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8111)
		Method: <com.jodelapp.jodelandroidv3.api.HmacInterceptor: java.lang.String calculateSaltHash(android.content.Context)>
		SHA-256: 63c3a9db29363dc7dd5fd08c3e7250d5f24549a7ab00314668aa99b6a0d9cbdc
		Secure: false
	Object:
		Variable: varReplacer3487
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3487)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: java.lang.String du(java.lang.String)>
		SHA-256: 3872b1d6dec31b4907f8f8afb85720ba554cfd92a6e16f95eb374f403fb3db80
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair f(java.lang.String,long)>
		SHA-256: 5b6d91ccbfe4cdad843eeca339ac144281a5bc04b13d6a5705dff126a149c24c
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3487)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: java.lang.String du(java.lang.String)>
		SHA-256: 20d3e92e4032f00243e4b89ebcda82467da8f44732af32a49a26c47a08b5d268
		Secure: false

Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String a(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #ac332d587bf39023540fdf27c9a6e0af48c14d7b2a948ab0d52f7121a0730bd1)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String a(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fbdde59886024e99fb40c2970f16c9068dbafbc1e00219e9117b4c5b6ce7f9a1)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2859)


Findings in Java Class: com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences

	 in Method: byte[] ax(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r6, varReplacer3371, varReplacer3372)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r9 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r7)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #ad1214790cde03aa43bbd453e91f927534730132f26cee805544cabc26e17e82)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r8 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3369)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #4431d4d78506983b5aefa014b5eacb6d6dff5ea324a78d7062abfd1c0d4d4f2f)
			Third parameter (with value 1000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r6, varReplacer3371, varReplacer3372)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #4431d4d78506983b5aefa014b5eacb6d6dff5ea324a78d7062abfd1c0d4d4f2f)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r9 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r7)


	 in Method: java.lang.String dt(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1c0f86b92286c6fd03c97d18306d2c8882674f6a693078a3ad8bd53cb14f3a31)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3483)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3479)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3485, $r4)


	 in Method: java.lang.String du(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3487)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #83e61e534c085503ad227ee929448bef2141278b8f3a2a2d693ea68b4dfc94e2)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3490)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3491, $r4)


Findings in Java Class: com.jodelapp.jodelandroidv3.api.HmacInterceptor

	 in Method: java.lang.String calculateSaltHash(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #63c3a9db29363dc7dd5fd08c3e7250d5f24549a7ab00314668aa99b6a0d9cbdc)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8111)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: void <init>(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1771, varReplacer1771, varReplacer1771)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1771, varReplacer1771, varReplacer1771)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 26

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 7
	RequiredPredicateError: 9
	IncompleteOperationError: 1
=====================================================================
