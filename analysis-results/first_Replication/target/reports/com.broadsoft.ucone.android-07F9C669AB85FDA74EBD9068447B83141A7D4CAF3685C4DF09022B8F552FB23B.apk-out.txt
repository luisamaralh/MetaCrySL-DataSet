Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.broadsoft.ucone.android-07F9C669AB85FDA74EBD9068447B83141A7D4CAF3685C4DF09022B8F552FB23B.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.spec.PBEParameterSpec.PBEParameterSpec( salt iterationCount paramSpec);
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 4c7add4d41f06fa92bd57618e77b2df1a78eb8d44e5f363952002486d67608cc
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3123)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decrypt(java.lang.String,android.content.Context)>
		SHA-256: a592c56e0dbeff8a8758e3f4c53137053b0c12d9a79041f027316b9c5628d2d1
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer7632)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzvx()>
		SHA-256: 33abae69a16cc8478d580a30e02643a98d4747bb67c56494f1e877a10a9aa949
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r6)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.IvParameterSpec generateIv(android.content.Context,java.lang.String,javax.crypto.Cipher)>
		SHA-256: 3e15c1bfd3601c8cdeba9ee67111e58b43122ece40c8b2416f86295231a37146
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptSSOToken(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 8be624ac93d5f3c7d6c8c24d00c5423cc183c8f6c9ac2cc4d0e89ac93142d824
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptSSOToken(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 888f004bf913285256e45e2b1573cc1058f35316800cc38f5ffed7511e5fb70
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 954231d089fea2084e9bb2c9f137806e2fab130323a05a53cd60512611d9a38e
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3184)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithRSA(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 5bb0b7bff886ddf28800678cc299917fa0990839b44035fc800c110ba0382b78
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.broadsoft.xmpp.android.database.ChatDbAdapter: java.lang.String createAndSavePassword()>
		SHA-256: bcfaf5c44fd9a888857663a6c2adf53080af4cf1569a34884b32b2ebc4feaf6e
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4537)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: e37c3e0f02e961e04efc1ca7416ad0545c7f88884fe5a0b55403087eb183144d
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.IvParameterSpec generateIv(android.content.Context,java.lang.String,javax.crypto.Cipher)>
		SHA-256: b0ca51b0a92b88348fe08e17a9f827eba359c5358c6a60ce465718da926f1a95
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: b8d0f92b40d7acf197133bd0e9f1f9654be4a8e5f2c47e0c0fa59ebca9053c85
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPairGenerator
		Statement: $r10 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3188, varReplacer3189)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.security.KeyPair generateRsaPairWithGenerator(android.content.Context,java.lang.String)>
		SHA-256: 13c34683234a1e0a200585a532757ba9f2de2234143cfd90701ffc8ef398a006
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r12)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: d44de015c0936c9d1fdfdd4e9dbd342f92bed011c7a26624fd806a1b4ed1df77
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer7170)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.security.PublicKey getRsaPublicKey(android.content.Context,java.lang.String)>
		SHA-256: af85df92956390e9d5ba3ee6b840f88f066f58bc2af128f4211a8399ddbe3e2d
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzdu(java.lang.String)>
		SHA-256: 91d6ae651ea468ee55b204b8531f2e40ebb8a460987b346249056da8de8b5b12
		Secure: true
	Object:
		Variable: varReplacer3155
		Type: int
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r14, $r6, varReplacer3154, varReplacer3155)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 38bb2d08fb19d9cdfb809e8c0d0940c1c4a29a4731d25616c4a7099f79e9db20
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r9)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: be5a7fd13e20b844eb558609a583ef5f8105d50743ebe32cfc6119bb18928986
		Secure: true
	Object:
		Variable: $r15
		Type: javax.crypto.SecretKey
		Statement: $r15 = virtualinvoke $r13.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: adfd25914b57e6c5186a6c5b5f999fa351da76c6f4982d0bd8d1afb7c2b2366
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r2.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r1, $r10)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.Object decryptStream(android.content.Context,java.lang.String,java.io.InputStream)>
		SHA-256: 7d49e7f8a172ebd749888a1a4d4a6bb9ef11a577623e5d09e0dde9c05786bb36
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r11, varReplacer3127)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decrypt(java.lang.String,android.content.Context)>
		SHA-256: 43440e9b8d4b41f7bf87f9ca1c4253c42dfe3a4f1458aa613a4af6a9817715f9
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decrypt(java.lang.String,android.content.Context)>
		SHA-256: 63d507aaa1e0e967461ed1b6e09e4081da1b22a07c94628e676040af9093cbe0
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3180)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithRSA(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 9c98928319c5f3bd65b686205e4a3eaae73b4d2e60406acd3d8cfd440525e19a
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: f944777d9d8e89e0f8adf0af9c3ccd064733a31fa3f1e06304f27dc756cb592b
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzvx()>
		SHA-256: 824ba22683660c59575f402494a9b5aa5f91d72d9fe95dd6abdf94f6948ceab0
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5174)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.Object decryptStream(android.content.Context,java.lang.String,java.io.InputStream)>
		SHA-256: 408faf472a10dd82b6d435130e468125d6adb09ca76e37074c1fc05e6a661344
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3140)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: byte[] decryptWithRSAToByteArray(java.lang.String,java.lang.String)>
		SHA-256: 8257a135256489395ca5e1328d4c232d24f0caea0eafb9ca052dda9e306c7baf
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3415)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptSSOToken(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 96277b32727f8acfc949d4ef550db49707e316b6c95633fdc0bc05e32461e49b
		Secure: false
	Object:
		Variable: $r13
		Type: javax.crypto.SecretKeyFactory
		Statement: $r13 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3162)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 2ba6684f264b4f934cbd649aeb12119d6ee0cff51c2e3c410b92ee964d1ef5f8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3130)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decrypt(java.lang.String,android.content.Context)>
		SHA-256: fb95edca4ba77bae5ea2078edd14cb3d83348e65f4985443599d6346e3c1cf07
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3133)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 8d418c8c76c6f71afd78b52d5a9090e41757170a2ba16541ca450b129e7e7a2d
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.IvParameterSpec generateIv(android.content.Context,java.lang.String,javax.crypto.Cipher)>
		SHA-256: a5dfacf5fbc744197fb5bd7a789b65d2d801234cd696d7912b619c415a6758b2
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: d42b59b2002448288977196c3e1488faf64960bf5f56942a8275adeba1b3346d
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: $r11 = virtualinvoke $r10.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.security.KeyPair generateRsaPairWithGenerator(android.content.Context,java.lang.String)>
		SHA-256: 7a054836665fd20834bd98373ace3cc88132431dc2d6a6d6eccc200797af4985
		Secure: false
	Object:
		Variable: varReplacer3415
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3415)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptSSOToken(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 9546a443312d0dc879d551f32eed2783ab6223bac9a7fdb7e4a8c892f11b54c6
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: varReplacer3161
		Type: java.lang.String
		Statement: specialinvoke $r16.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3161)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 3e524e08a295111cee7af703d786b6e222c27e4e2ebd323782bb8953bbdb7bb9
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r12)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 14ae6927928ab37a5a5963ed3fe6b7b1fd57834d893578aaf9d81441f3b3f8e9
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3141)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: byte[] decryptWithRSAToByteArray(java.lang.String,java.lang.String)>
		SHA-256: 584386bd8f6e27fc7493f383067e3a3b9677106a4fc4e49ec7c8ee83f5c7b351
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: byte[] decryptWithRSAToByteArray(java.lang.String,java.lang.String)>
		SHA-256: 6f09f4a70112028e7919aec1ff0281157533d598dc94ebc202176cac908afc75
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decrypt(java.lang.String,android.content.Context)>
		SHA-256: fedc6360aa8b1a08e982fd2e889072f2836f4ba1a74c342237603003dba27626
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r10)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithRSA(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: af9233f686a066a755ade8f23647d33647dc22c82d743a73c43b1294476d21bc
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3416)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptSSOToken(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: a4a550c62c06ef1479a30db689bb3a008bbee36bd0e08a66f70305bf46d4af49
		Secure: false
	Object:
		Variable: $r16
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r16.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3161)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 46c9c8951791ad180890159ade519155ae0f16f47caaee545cb63797876a7f72
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r14, $r6, varReplacer3154, varReplacer3155)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 8783529404d6693b9a74bab17665fe790341549b8aa73a4669f995c8542430b5
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.IvParameterSpec generateIv(android.content.Context,java.lang.String,javax.crypto.Cipher)>
		SHA-256: a5dfacf5fbc744197fb5bd7a789b65d2d801234cd696d7912b619c415a6758b2
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.Cipher
		Statement: $r12 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4701)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: void encryptStream(android.content.Context,java.lang.String,java.io.Serializable,java.io.OutputStream)>
		SHA-256: daadf6ce11a6c768b06756f715eebf6915ae09b2b2e541d75002b5ad11bcfefe
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 881f32e58721878700841a3cc56af8ca5dbdadf35259f6b65f19a5df722c29e4
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r7.<java.security.SecureRandom: void nextBytes(byte[])>($r6)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: ab3925dc9527d47d02367b8fad778b168cbe4814fd43010bb9d6573bd5205c91
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7570)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 45e720943769c4468f5be9a02dd3e65e2e5f012083f436fa0446d4379fd4bc25
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r3.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r2, $r12)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: void encryptStream(android.content.Context,java.lang.String,java.io.Serializable,java.io.OutputStream)>
		SHA-256: 1787e3c4aad6b4501f536b9d39e4d1fc63cedfb1d4a005ba13c963528b9d4669
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r6)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.IvParameterSpec generateIv(android.content.Context,java.lang.String,javax.crypto.Cipher)>
		SHA-256: 3e15c1bfd3601c8cdeba9ee67111e58b43122ece40c8b2416f86295231a37146
		Secure: true

Findings in Java Class: com.broadsoft.android.xsilibrary.util.CryptoUtils

	 in Method: java.lang.String decrypt(java.lang.String,android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r11, varReplacer3127)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #43440e9b8d4b41f7bf87f9ca1c4253c42dfe3a4f1458aa613a4af6a9817715f9)
			Second parameter (with value 20)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r11, varReplacer3127)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3128, $r7, $r9)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r6)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a592c56e0dbeff8a8758e3f4c53137053b0c12d9a79041f027316b9c5628d2d1)
			First parameter (with value "PBEWithMD5AndDES") should be any of {AES, DESede, RSA}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3123)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)


	 in Method: java.lang.String decryptWithAES(android.content.Context,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #8d418c8c76c6f71afd78b52d5a9090e41757170a2ba16541ca450b129e7e7a2d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r8 = staticinvoke <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.IvParameterSpec generateIv(android.content.Context,java.lang.String,javax.crypto.Cipher)>($r0, $r2, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3136, $r6, $r9)


	 in Method: byte[] decryptWithRSAToByteArray(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #8257a135256489395ca5e1328d4c232d24f0caea0eafb9ca052dda9e306c7baf)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r1, varReplacer3143)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #8257a135256489395ca5e1328d4c232d24f0caea0eafb9ca052dda9e306c7baf)
			First parameter (with value "AndroidKeyStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3140)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3142, $r6)


	 in Method: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r15 = virtualinvoke $r13.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #8783529404d6693b9a74bab17665fe790341549b8aa73a4669f995c8542430b5)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r15 = virtualinvoke $r13.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r16.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3161)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #8783529404d6693b9a74bab17665fe790341549b8aa73a4669f995c8542430b5)
			Third parameter (with value 1000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r14, $r6, varReplacer3154, varReplacer3155)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #2ba6684f264b4f934cbd649aeb12119d6ee0cff51c2e3c410b92ee964d1ef5f8)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r13 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3162)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r14, $r6, varReplacer3154, varReplacer3155)


	 in Method: java.lang.String encryptWithRSA(android.content.Context,java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #5bb0b7bff886ddf28800678cc299917fa0990839b44035fc800c110ba0382b78)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r5 = virtualinvoke $r4.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r2, varReplacer3182)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #5bb0b7bff886ddf28800678cc299917fa0990839b44035fc800c110ba0382b78)
			First parameter (with value "AndroidKeyStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3184)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3183, $r6)


	 in Method: void encryptStream(android.content.Context,java.lang.String,java.io.Serializable,java.io.OutputStream)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #daadf6ce11a6c768b06756f715eebf6915ae09b2b2e541d75002b5ad11bcfefe)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke $r3.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r2, $r12)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #1787e3c4aad6b4501f536b9d39e4d1fc63cedfb1d4a005ba13c963528b9d4669)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r5.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r3)


	 in Method: java.lang.Object decryptStream(android.content.Context,java.lang.String,java.io.InputStream)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #408faf472a10dd82b6d435130e468125d6adb09ca76e37074c1fc05e6a661344)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r12 = virtualinvoke $r13.<javax.crypto.SealedObject: java.lang.Object getObject(javax.crypto.Cipher)>($r10)

		TypestateError violating CrySL rule for javax.crypto.CipherInputStream (on Object #7d49e7f8a172ebd749888a1a4d4a6bb9ef11a577623e5d09e0dde9c05786bb36)
			Unexpected call to method close on object of type javax.crypto.CipherInputStream. Expect a call to one of the following methods read
			at statement: virtualinvoke $r2.<javax.crypto.CipherInputStream: void close()>()


	 in Method: java.security.PublicKey getRsaPublicKey(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #af85df92956390e9d5ba3ee6b840f88f066f58bc2af128f4211a8399ddbe3e2d)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r1, varReplacer7169)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #af85df92956390e9d5ba3ee6b840f88f066f58bc2af128f4211a8399ddbe3e2d)
			First parameter (with value "AndroidKeyStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer7170)


	 in Method: java.lang.String decryptSSOToken(java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3419, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3415)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


	 in Method: java.lang.String encryptWithAES(android.content.Context,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4534, $r7, $r11)


	 in Method: java.security.KeyPair generateRsaPairWithGenerator(android.content.Context,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared R S A
			at statement: virtualinvoke $r10.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r9)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #45e720943769c4468f5be9a02dd3e65e2e5f012083f436fa0446d4379fd4bc25)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7570)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 54

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 1
	RequiredPredicateError: 16
	ForbiddenMethodError: 1
	IncompleteOperationError: 8
	ConstraintError: 9
=====================================================================
