Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/in.invpn-10980C85EE593103263EDAE09B5602842B49B2A39F8E7F1E77EE8EFB10C39982.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Alive 15726  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2574)
		Method: <u.aly.bu: java.lang.String u(android.content.Context)>
		SHA-256: 3f5bc5e10aec3a6abcd90e117636f826c308bc1410193d3b02b49bdbd05a02b
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.android.agoo.common.c: byte[] a(byte[],javax.crypto.spec.SecretKeySpec,byte[])>
		SHA-256: 8f2e7913c00617921e7d852b9a31479fa9f5aae33209b7f9e78a25b1061dfac
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer1083)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: 7b6fe50b4716cc97b682db769af676a077a59dbf19af37194d32ba5e634352e0
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1638)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: 116274d009756265342c355ea7161124201a3f55c95e75b522c2e8be7a9631f1
		Secure: false
	Object:
		Variable: varReplacer5706
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5706)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: cdb584c177ff3e4c426a34b4e42b92ea6a71c28743ddc72f45eae3bb268b2b04
		Secure: false
	Object:
		Variable: varReplacer6294
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6294)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: 44dddf48751c9b8fcc074ae82a25c16c351c90af7dbdb906b44c72d5e50a45fb
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: 112de34efa7b8be9b5ffcb803e9a8d349b144a8eb478ee5a675a596c16edd59c
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6293)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: b0f1b8a4eb267a0260f393b30f35f2f41fc3a523bc39c5fe326e82155494d9b4
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: dfdfbc12720b58582472a369ee7126d2c89ffccd15b06b641717c7d7a71ba579
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: a496e81fbb4fcdc5e03a647a323f9f888baa3ef5d73648a3e0b5a3b467ddbd1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1633)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: 802628c6e646d07d9cc209c3f155106b6711384d784fbbf8f5f6e753e2e846f1
		Secure: false
	Object:
		Variable: varReplacer1637
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1637)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: 61faa9fd47d90bb26fd217510f42442e4d6fb7568d53690604d34794f7c688a1
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: bffe37a2d2b82caef2b49a93bd47e25da59c724bee9ad61d727e7de99f7acae
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1637)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: 7bee2bb460da3e991ec03f62f6a82b0e02adf4954cabf622d717dc2d220fd8e
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.message.proguard.g: java.lang.String a(java.lang.String)>
		SHA-256: 8f4b35d04dbcf5b1d5c11b169e15fe55a7ce24c9198acfcbf22b27572989e7da
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1024)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 634b1cf83c0410ba07bf446fc24a72cb04b5f526b112428a6cb4031b6534cfdb
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 480d62b2174afc77ea171637c712e1afce063fa35eb4849bf29d0ae0c68791d8
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5700)
		Method: <org.android.agoo.common.c: byte[] a(byte[])>
		SHA-256: 5b506630e9e64bbedc93121db912e41f9ead8a711d228ca98d46363a74fb3f4f
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6900)
		Method: <com.alibaba.sdk.android.httpdns.g: java.lang.String a(java.lang.String)>
		SHA-256: b1438654b526f7cf0386a2b1d173f48179a98231f80aaf9d21d848e2b1d9d651
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <u.aly.aw: void a()>
		SHA-256: 6839d53c5c853cf50908053a93d66c4ab720e87bbff149d04df2410de8242ab0
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: 4ff8afa2916954f9a0d986129d899a15493555d793f466f2b9548afac2d34340
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[])>
		SHA-256: 9bec08917d8c17d6308fce1047325c6c7c3f151094e6e268fc8e7d3e89e5beab
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bv: java.lang.String b(java.lang.String)>
		SHA-256: d86468cc9392a30c0a2ba2dbe963f5571fbe21bc8208cf57bb28622d3680cc60
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1023)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 8d1fde9b2bdc6fbe4b4e291288217c7ef900e2f987c3603f3bbc9cd782276fee
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.alibaba.sdk.android.httpdns.g: java.lang.String a(java.lang.String)>
		SHA-256: 6d1a39c1831e5568cb7c076330221adccad2df3c11e1e633666447394a4bab1a
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1437)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: 4450b45e6e72741b4bda347b8c097aee2d12e2639e314fad58db115798647af0
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5706)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: b124b817dfb21a95efa9f7744a8fae2ef52c2d6225a15044f3b2a1c04990f803
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1027)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[])>
		SHA-256: 7e606f6c2bcdcea64633971517d5701a5bbec05e05e811be9340934ffce749d7
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5659)
		Method: <org.android.agoo.control.AgooFactory: java.lang.String parseEncryptedMsg(java.lang.String)>
		SHA-256: f4060b9175a2b71c19ff91d86cf2f8a68c4da21b370cc1fe280238dd7668c3c7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer5708)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: 9104549c62698996748152674d2d877f908d9a9bca620427b0034eecc8981c14
		Secure: true
	Object:
		Variable: varReplacer5659
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5659)
		Method: <org.android.agoo.control.AgooFactory: java.lang.String parseEncryptedMsg(java.lang.String)>
		SHA-256: 99a299a85633148c0add54845eac5ec2543d3f0450c0044e31cd72e7951f3aa9
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer1028, varReplacer1029)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[])>
		SHA-256: dce11163aec3a73bea75e522355607de8d0cbe9d78dbe3684e8af1d6825953d2
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1438)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: 57f83c3eb0a56e38d559532d2ce6d59bf5864d7985d4d02336e6932ab398cbb7
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: 266ce8ef6af251212529e05fd6070ced123a10d0494f7eae63a9e8bb332a6b13
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: d3e541c1dd63b5d8b4b266e404ab796177c7a82d78852375cf3fcf1b299b6aa7
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.android.agoo.common.c: void <clinit>()>
		SHA-256: 1cfaf2cb7506204331ef3ecc4990394b16071f06c77b1b96aef866a09c9d21cc
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <u.aly.bu: java.lang.String u(android.content.Context)>
		SHA-256: b76e41fac3e3573bc28b2b0271af174bb43f8e90d4fcf4a9a078f6c58c75983c
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <org.android.agoo.common.c: void <clinit>()>
		SHA-256: 2705022dbbf2fad58b29aa7b832e91827679edd40f99b8f72f776b0057153b67
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6134)
		Method: <u.aly.bb: void <init>(java.security.KeyStore)>
		SHA-256: 9733863216dddaaa51aa8664d440d4994136ef0a2d386e0af6b359f0de1aacdd
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6781)
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: 541b389d3faea61a37ec5822295053660e643096270798702f1c7e4c3d3e58b
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: c5a57e32c0226a86444337cd105d2e743b580d87ce60e2157049afb4d2848a9a
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bv: java.lang.String a(java.lang.String)>
		SHA-256: 1192797ef7ac70aefcb78b371048d02d5d6336b44a9003cf24a1687fda802802
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: 9cfd93e16e92695722f1605f9722d0827a7d09b24ac41bd14056584a47c8b9b9
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 6eeb388f9f05d7f3e8f96664808a2e18b13430fbe401cac4e442507aee164771
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 114e16caa40e734a0e255361d38b3835adb74935128fc69bdb16f1ab64dce330
		Secure: false
	Object:
		Variable: varReplacer1437
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1437)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: 8c9d47e780137995f0aff4b80ab1955ab054ea608062613f5dc7ad56d2aee27e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: 53e689f0838acc09cc36cef29f7f79a88f3727bc41513a6f98273796d8efc71d
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: 7a5b6ff3104b0c697c70f8001151345e86e1c53eed3860aed8f6f84bad7a619c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bs: java.lang.String c(java.lang.String)>
		SHA-256: bbe0b8ef84642ecfe2d0251874077e3b23da2170e4f2fb08bea07ceb3b40eade
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: a82afbb0761a6034a969f37b27432ebbeb3f0ad07c0c9c757c6dc182b3a5c0b2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2062)
		Method: <u.aly.bs: java.lang.String c(java.lang.String)>
		SHA-256: ed12fc98d649656a663154cbb39deff9d2c16457e04b1618ff0a0ab256315ebc
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bs: byte[] b(byte[])>
		SHA-256: 3249420ad06991ff84956727aec3c333639d8ef077ab4291201463339c541e4b
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1348)
		Method: <com.umeng.message.proguard.g: java.lang.String a(java.lang.String)>
		SHA-256: f7b503aa7093a215d104ad5fd807f542ba096df317f920e6e22d78c6f04de747
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1729)
		Method: <u.aly.bv: java.lang.String a(java.lang.String)>
		SHA-256: 11758febb37a85dc86e18fb173ebc2d60a044b2ba0f71b4a3e4df72933c5fd91
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2367)
		Method: <u.aly.bv: java.lang.String b(java.lang.String)>
		SHA-256: c7af2f0befbd0d753696f3db791eae9f5f11ac1396603e3df62f07a32bb5a4cc
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6897)
		Method: <com.alibaba.sdk.android.httpdns.g: java.lang.String b(java.lang.String)>
		SHA-256: 51d598f006bc6e7d7b62738d47f6fb134a68216801dde8110f9d4fdd1babe01a
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: ce27a79f159a0b0e9d5beb5b86a8d9d0630db56327d0e0bd86801b701d7f64e7
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: 34aa3b6ee6c7ba7ca161fa3e216f9558d03e22fe0bd8369b62d3fa741d32e768
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: ac2912fd2a8cc62f2d028959fdfebed1a18ae39f8a205fd829cc8080606487cd
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2371)
		Method: <u.aly.bs: byte[] b(byte[])>
		SHA-256: ad5f385e41fae8a181b0387f28cf1a6f65d2120ab8bc683b554c0e04a1861e69
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.android.agoo.common.c: byte[] a(byte[])>
		SHA-256: 85075d05eb7693deb90f4991b9c7d9d0798b6b3872d213e4dd07d55a4a51f8b6
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6294)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: 446d86fa4be6f8f65ee2f170afaa7f627f8c746db860fdcfd240064c978edc7d
		Secure: false
	Object:
		Variable: varReplacer1635
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1635)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: 38e903d7cad81dcee9a08780fa3db645cfae01249629c7b27ebbf8f3cc8189dd
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5722)
		Method: <org.android.agoo.common.c: javax.crypto.Cipher a()>
		SHA-256: d54c79904e706e6fd36f681a3fdae340002e2c2711bd8192fab2796b376012f4
		Secure: false
	Object:
		Variable: varReplacer1023
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1023)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 46cba8528cd4afac5c5ad94034514809d0eb35134303a4f3041ac3939b337592
		Secure: false
	Object:
		Variable: r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <org.android.agoo.common.c: javax.crypto.Cipher a(javax.crypto.spec.SecretKeySpec,byte[],int)>
		SHA-256: 3d1c29f9a6a16f7cacfdcd66eb1c08940e0808e6b96f4e756037ca7ac8bac0b2
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.alibaba.sdk.android.httpdns.g: java.lang.String b(java.lang.String)>
		SHA-256: 76c238b127f0dc616e39488c530b32fcba1af40805ec7fc0872956a83a6da782
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1635)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: d37fee4938d5d22d5c8e6754ebfc1cd256ba3406a5925db22e177de695773e62
		Secure: false

Findings in Java Class: u.aly.bs

	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ed12fc98d649656a663154cbb39deff9d2c16457e04b1618ff0a0ab256315ebc)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2062)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1635)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1634, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1634, $r2, $r4)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1637)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1636, $r2, $r4)


Findings in Java Class: com.alibaba.sdk.android.httpdns.g

	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #51d598f006bc6e7d7b62738d47f6fb134a68216801dde8110f9d4fdd1babe01a)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6897)


Findings in Java Class: org.android.agoo.common.c

	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5706)


	 in Method: javax.crypto.Cipher a(javax.crypto.spec.SecretKeySpec,byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(varReplacer5712, $r0, $r3, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Fourth parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(varReplacer5712, $r0, $r3, $r4)


Findings in Java Class: u.aly.bb

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6132, r7, varReplacer6132)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6132, r7, varReplacer6132)


Findings in Java Class: com.ta.utdid2.b.a.a

	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1025, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1023)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6294)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6292, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6292, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer1030, $r2)


Findings in Java Class: com.ta.utdid2.device.c

	 in Method: java.lang.String b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)


Findings in Java Class: com.umeng.message.proguard.b

	 in Method: java.lang.String a(java.lang.String[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1437)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1436, $r6, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1436, $r6, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: org.android.agoo.control.AgooFactory

	 in Method: java.lang.String parseEncryptedMsg(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5659)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 68

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 28
=====================================================================
