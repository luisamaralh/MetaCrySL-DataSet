Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.djinnworks.StickmanSoccer2014-0739FA79091DE171ACE70EBCD624585F7FAA0B3F4FE0910376441BA517151B6C.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Alive 69535  5000
05:55:42.099 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <android.content.Context: android.content.Context getApplicationContext()> for class com.google.android.gms.analytics.internal.zzf
05:56:24.713 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <android.content.Context: android.content.Context getApplicationContext()> for class com.google.android.gms.common.util.zzh
05:57:22.217 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <android.content.Context: android.content.Context getApplicationContext()> for class com.google.android.gms.analytics.internal.zzl$3
05:57:22.437 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <android.content.Context: android.content.Context getApplicationContext()> for class com.google.android.gms.analytics.zzi
05:58:20.314 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <android.content.Context: android.content.Context getApplicationContext()> for class com.google.android.gms.analytics.GoogleAnalytics
Alive 875472  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2694)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: 2c85ec6ef289a82502df58735c750feffd92c0667aef9892bd13101792135431
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amazon.device.ads.DebugProperties: byte[] decrypt(byte[])>
		SHA-256: 5d248c3f8ef76900dc074a59dc38db9dbf99fde5e42aefc19f5fe31533017b9c
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2294)
		Method: <com.amazon.device.ads.DebugProperties: byte[] decrypt(byte[])>
		SHA-256: aaeac77617db3d2a32d1027064d4e9c6e74640703f29125dc5be4d5a2a117ee
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzcv(java.lang.String)>
		SHA-256: 635d2d0bad81cfe7a34ecffc927df94b3302c4a29f5c25cffef87aeb06b2d36c
		Secure: true
	Object:
		Variable: varReplacer2698
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2698)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: 78541fdb6532a1d05081e17d8f1c6f148c753d095aa32ccecea25d35a48eb8fa
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <net.robotmedia.billing.security.DefaultSignatureValidator: boolean validate(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: fcf425a61f9c00bd01192a1fa6df9d5fe06f04aecf9b5d78c9156fac372b6c1f
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.djinnworks.framework.GameHelperUtils: java.lang.String getSHA1CertFingerprint(android.content.Context)>
		SHA-256: 3ac6e58fcd8bb82ce1b2b27a796f26b39df833e681cb038e8208a5e856fd857e
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: f16dfe7ab918fac0a7bda52c2af73b52cdc8e115a289e15e9c50f706cf7bce04
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2698)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: 2bb7b5b52ea3ea8a6a41cd108020742fe0e4f9505887daf1a33765d1306b88b0
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: d45cbb8ae1c2ccdafb9ad0a36f8a30035f6d87cf3476afa04042a87d9c496bae
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <net.robotmedia.billing.utils.Security: void <clinit>()>
		SHA-256: 8ddcf38a1e0bdef51068a323103a33b28120a3e433574b859d695e36dcfba0fd
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer2701, varReplacer2702)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: 350660f6f40dd4ec65d124307653e763e7a0ef5b69328a802d9a06f0d29a1c57
		Secure: false
	Object:
		Variable: varReplacer2702
		Type: int
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer2701, varReplacer2702)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: 26e38700a4be815ca78adb3549889d73cda240a976fc6129a6e171c784bbe1b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5145)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzcv(java.lang.String)>
		SHA-256: aaf9cceb83c2a269216c6f598ee0c3dd46abba714ae5ec84261e6bc759da7aed
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2699)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: edf89cd7966ff3411bbddab838f3df9cd6401bcc3c7c7235bb1985627b7da8ea
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer2732)
		Method: <net.robotmedia.billing.security.DefaultSignatureValidator: boolean validate(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: b6db79bde54ae5cd95683a842c4c106899b825b0f5006da7368c74f1d0bd3dc6
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.djinnworks.billing.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: r10
		Type: java.security.SecureRandom
		Statement: specialinvoke r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: c49baf8b2831a2be9aa3b8b2b456003f3087b1f5f20fd8411803ca8aa53c7285
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.immersion.hapticmediasdk.utils.FileManager: java.lang.String getUniqueFileName(java.lang.String)>
		SHA-256: 60094877678a6cfe02028ceaff580697009c76d513bd885f3bb0e4545bbe8212
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4866)
		Method: <com.djinnworks.framework.GameHelperUtils: java.lang.String getSHA1CertFingerprint(android.content.Context)>
		SHA-256: 92cf16e0c7e7a539a22a52331a8d284e1828ef812adac0e3803eac8388099fbe
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5426)
		Method: <com.immersion.hapticmediasdk.utils.FileManager: java.lang.String getUniqueFileName(java.lang.String)>
		SHA-256: 92f9883ed9a6285a5e8e3bc9e56249ad7178d2c424f09dddc4fb55bddebd6058
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer638)
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: c2cc14820da2e85f7aee470ebdb8e50400aa8cd9d9ae5717ce8bca7d6199d538
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2700)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: 1e1771665985eaab8da6a10f3611bcfb842990016863baa44110b52e9a0823bf
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: f16dfe7ab918fac0a7bda52c2af73b52cdc8e115a289e15e9c50f706cf7bce04
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer5054)
		Method: <com.djinnworks.billing.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: b0a5254bbaf34b9bbafafd8c5454c08eee5c95f2397ad265b3bd0e11766bb200
		Secure: false

Findings in Java Class: com.facebook.ads.internal.util.g

	 in Method: void b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer640, r12, $r3)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #c2cc14820da2e85f7aee470ebdb8e50400aa8cd9d9ae5717ce8bca7d6199d538)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer638)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer640, r12, $r3)


Findings in Java Class: com.amazon.device.ads.DebugProperties

	 in Method: byte[] decrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2293, $r6)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #aaeac77617db3d2a32d1027064d4e9c6e74640703f29125dc5be4d5a2a117ee)
			First parameter (with value "RSA") should be any of {OAEPPadding, NoPadding, PKCS1Padding}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2294)


Findings in Java Class: net.robotmedia.billing.utils.AESObfuscator

	 in Method: void <init>(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer2701, varReplacer2702)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #350660f6f40dd4ec65d124307653e763e7a0ef5b69328a802d9a06f0d29a1c57)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r8 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r8 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2698)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #350660f6f40dd4ec65d124307653e763e7a0ef5b69328a802d9a06f0d29a1c57)
			Third parameter (with value 1024)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer2701, varReplacer2702)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: com.djinnworks.framework.GameHelperUtils

	 in Method: java.lang.String getSHA1CertFingerprint(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #92cf16e0c7e7a539a22a52331a8d284e1828ef812adac0e3803eac8388099fbe)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4866)


Findings in Java Class: net.robotmedia.billing.security.DefaultSignatureValidator

	 in Method: boolean validate(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: com.djinnworks.billing.util.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 25

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	ConstraintError: 4
	RequiredPredicateError: 10
=====================================================================
