Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.til.new_york_city_guide-025BFCB1A42783C459085B595CEE1147232C46ACC4F30C498E7D55DF97D549D8.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
06:34:10.541 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <android.content.Context: android.content.Context getApplicationContext()> for class com.google.android.gms.analytics.internal.zzf
Alive 44152  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair a()>
		SHA-256: b6cc8ac493f44dad3810c3a2f8466a33a72ab2c638b8dfbfccb655950d0b27ab
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.apsalar.sdk.ApsalarResolve: int doGet(boolean)>
		SHA-256: 722693473e87d360d38788a89c7055858deb456a5df34d1d5effc90c9b720f5b
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3260)
		Method: <wt: void <init>(android.content.Context)>
		SHA-256: 162a0668e7a5fa3ffccbfd73fd581514b1d66c8a3c383ab795d764b1c31136df
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <BI: Dw a(Dw)>
		SHA-256: 3a46c4f32f5ec0c29e1cf31a3ed25d7186c3b5f3c50027a449e38d6d2ab07255
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5805)
		Method: <com.comscore.utils.Utils: java.lang.String md5(java.lang.String)>
		SHA-256: ae4f4d005eda1c8d88e1bffa914022379fd0d4436344fdb1836dc831eec2c1e0
		Secure: true
	Object:
		Variable: varReplacer3220
		Type: java.lang.String
		Statement: specialinvoke r27.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer3220)
		Method: <ww: void <init>(android.content.Context,java.lang.String)>
		SHA-256: bcdbda3c6f1a9e6a0766d5e6568364a1d7004b1bdbf121d6c0c7deac04eadc63
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2246)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String a(java.security.KeyPair)>
		SHA-256: b19d313a95419044cbadeeb263f5ddabea78aa8b10e94dfe82c42359a6ca5a0
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2107)
		Method: <com.apsalar.sdk.ApsalarEvent: java.lang.String makeHash(java.lang.String,java.lang.String)>
		SHA-256: 2d0e1875615cd70039032407aa494f6ba4228ed861c36fc9df85f42977de290f
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r1, varReplacer3241, varReplacer3242)
		Method: <wr: java.security.Key a(android.content.Context)>
		SHA-256: e8a9f41dbfda169072720cd56e4b91e95f46807cbbad8a03b1c5d099e0e0185b
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)
		Method: <wu: java.lang.String b(java.lang.String,java.security.Key)>
		SHA-256: 89ea27a94a92c5eeaf38bf6f864e1f1f3833ccc8f681793b3127bbc3d4c9184f
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <wr: java.lang.String b(android.content.Context)>
		SHA-256: b670bc4a8f1329bc184f0e88d6c77c6dbb1653660b2d117f3c4abd40b14e0ff9
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.apsalar.sdk.ApsalarEvent: java.lang.String makeHash(java.lang.String,java.lang.String)>
		SHA-256: ed6c5eb376a62f47dffd8439a16966ba0cc5ea27a24cc0e41b88872d5e7402cc
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String a(java.security.KeyPair)>
		SHA-256: 756b01b06feb63ec058f055931b7364dec725eddbf18032316df47bfbaf76753
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <wu: java.lang.String b(java.lang.String,java.security.Key)>
		SHA-256: ce5a61d7b69fd446805cb210c6dd1b6a08d5139bf65f1345e9e92e60e994583a
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: bb7187a5bb3b8757816d72f6d792fc777b962cfcc06524eec6d517f459d321b
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKeyFactory
		Statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3239)
		Method: <wr: java.security.Key a(android.content.Context)>
		SHA-256: 914008fb9bd8676f256933e0e58031ffcf83401258df9e726f9345eb543da104
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6688)
		Method: <com.skobbler.ngx.SKMaps: java.lang.String a(java.lang.String)>
		SHA-256: 91f5c88fbd507363c0ec5f280d42b76c3f8f5f306b5d5633e0f679656d54ba9b
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: ee43d3c27e21c5b1ebbc253f41bdf471d170acb772d54f94537e8e4b3da9ea54
		Secure: true
	Object:
		Variable: $r16
		Type: javax.net.ssl.SSLContext
		Statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer945)
		Method: <Bf: void <init>(Bh)>
		SHA-256: 2affb5815aacddb6118fb7744cb324dde1c2aa1eda1b22fa33fef95eb828106c
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <wu: java.lang.String b(java.lang.String,java.security.Key)>
		SHA-256: 9b2a776ace8c58f731ca237b2a23a17c12a714e8302e937c199e9a84ea12f882
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.comscore.utils.Utils: java.lang.String md5(java.lang.String)>
		SHA-256: 2a163244cfcd82e254e29b166060ac6e03542e1814ada8ad57fee97449727f11
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.Key
		Statement: $r11 = interfaceinvoke $r12.<java.security.Key: byte[] getEncoded()>()
		Method: <ww: void <init>(android.content.Context,java.lang.String)>
		SHA-256: 7a34c4ff58e841fc825b375baf2914b4a4ed56bf2c946cba94c5718724b22298
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair d(java.lang.String)>
		SHA-256: a60088a0c77a890bf25074b4e1ccdd640604a936ae63e5fe7fdec7cf2044428d
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.til.happytrips.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: c678472b4c19c53650e756c77dab364889209724da847a2f30c698a83517174f
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2320)
		Method: <com.apsalar.sdk.ApsalarResolve: int doGet(boolean)>
		SHA-256: 4138a8a7707c3cf7d1995f72d7b153a26c9dbab91e20edef9b8931dd917f931
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <wr: java.security.Key a(android.content.Context)>
		SHA-256: 8a18293d25bd4e0e4496aab2f692053d02876383f7d9925df51022b51fa68219
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5865)
		Method: <com.comscore.utils.Utils: java.lang.String encrypt(java.lang.String)>
		SHA-256: 22eeaebcdbf03220b3ffb7d2d5d0129e234406fbcc157a79b4d1e5c08ac0511e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.comscore.utils.Utils: java.lang.String encrypt(java.lang.String)>
		SHA-256: 2e25fc4f5817014fc577a5b1652183606647b49d2e3de30023a176d46a6dac26
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.skobbler.ngx.SKMaps: java.lang.String a(java.lang.String)>
		SHA-256: d160ffc82304384fcee9e71ed6973615397cf943ea12b14acf6215115716e448
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer2190)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair a()>
		SHA-256: 337855f49575e59c86835b9be4a5ae50aac0bd22944abe6c9756d98bb49f4eac
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3240)
		Method: <wr: java.security.Key a(android.content.Context)>
		SHA-256: a3f2a052035df01a287b2295039e4f73a3b519a271d43dbbd000b73d1ed6e016
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer7795)
		Method: <com.til.happytrips.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 33e1d472d6258c45c2409d0ddfdbaa8c3774362c37b94c78f30a21c9a11576d5
		Secure: false
	Object:
		Variable: varReplacer3240
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3240)
		Method: <wr: java.security.Key a(android.content.Context)>
		SHA-256: 99006aa1bf63910951fad87830b9baa9de07e9973d30e55ee58a4610cae9a48
		Secure: false
	Object:
		Variable: varReplacer3242
		Type: int
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r1, varReplacer3241, varReplacer3242)
		Method: <wr: java.security.Key a(android.content.Context)>
		SHA-256: 68fdfe14694b43cdd2086012a63d0ccb648ca43497edd6a3099e142a7a97088c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: ac332d587bf39023540fdf27c9a6e0af48c14d7b2a948ab0d52f7121a0730bd1
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1466)
		Method: <com.apsalar.sdk.ApsalarSQLiteHelper: android.database.sqlite.SQLiteDatabase getSQLWritableDatabase(android.content.Context)>
		SHA-256: c01c5ad4db28b3c1277a043ed2230b4006ad5b23eac5282f2369b9ec02208560
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <wr: java.security.Key a(android.content.Context)>
		SHA-256: 30c3487d8c10516cde0819d14296afbe13e0adef8213086e8551a44562c7dd9
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.apsalar.sdk.ApsalarSQLiteHelper: android.database.sqlite.SQLiteDatabase getSQLWritableDatabase(android.content.Context)>
		SHA-256: 32e2f33a4655528c9a3a92df640335d1224bc41956277f7f0a449ea7853913a6
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3248)
		Method: <wr: java.lang.String b(android.content.Context)>
		SHA-256: 316958315115069470c2c71c6bc245974da657fb8d5bd5f76895378ba397b618
		Secure: false
	Object:
		Variable: r27
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r27.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer3220)
		Method: <ww: void <init>(android.content.Context,java.lang.String)>
		SHA-256: 98491b43905213dea7ac695c400064b5f4ac88112f987f359dec4466b46e3d99
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = interfaceinvoke $r12.<java.security.Key: byte[] getEncoded()>()
		Method: <ww: void <init>(android.content.Context,java.lang.String)>
		SHA-256: 6e635b1ba663c480ab5f00804ae6facb86fa8a06deac51db60f083a6ba955407
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 2cbee2b1f1e301f5e0fd6a68eabf46e222064dcd3b3e2060dbe5051d968e770f
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8462)
		Method: <BI: Dw a(Dw)>
		SHA-256: c1306e24c72501d31f29fc5a966783f75d6473c237e03f3b5f9ca864b1f71f3e
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <wr: java.security.Key a(android.content.Context)>
		SHA-256: 6c2dcbeb07bd7f1b70eb6d154701de6808a364968c7ce939ff18e08510a1524
		Secure: false

Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String a(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #ac332d587bf39023540fdf27c9a6e0af48c14d7b2a948ab0d52f7121a0730bd1)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String a(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b19d313a95419044cbadeeb263f5ddabea78aa8b10e94dfe82c42359a6ca5a0)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2246)


Findings in Java Class: wr

	 in Method: java.security.Key a(android.content.Context)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #e8a9f41dbfda169072720cd56e4b91e95f46807cbbad8a03b1c5d099e0e0185b)
			Third parameter (with value 1000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r1, varReplacer3241, varReplacer3242)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3240)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r1, varReplacer3241, varReplacer3242)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #e8a9f41dbfda169072720cd56e4b91e95f46807cbbad8a03b1c5d099e0e0185b)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)


	 in Method: java.lang.String b(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #316958315115069470c2c71c6bc245974da657fb8d5bd5f76895378ba397b618)
			First parameter (with value "SHA") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3248)


Findings in Java Class: wt

	 in Method: void <init>(android.content.Context)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #162a0668e7a5fa3ffccbfd73fd581514b1d66c8a3c383ab795d764b1c31136df)
			First parameter (with value "AndroidKeyStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3260)


Findings in Java Class: Bf

	 in Method: void <init>(Bh)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer946, varReplacer946, varReplacer946)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer946, varReplacer946, varReplacer946)


Findings in Java Class: wu

	 in Method: java.lang.String b(java.lang.String,java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6505, $r2, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


Findings in Java Class: com.comscore.utils.Utils

	 in Method: java.lang.String encrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5866, $r4)


Findings in Java Class: com.til.happytrips.util.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: ww

	 in Method: void <init>(android.content.Context,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r27.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer3220)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 44

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 11
	ConstraintError: 5
	IncompleteOperationError: 1
=====================================================================
