Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.farsight.bowling-11423A0C977749609A212016C06A447F710BCFAE7134D252C1C20C97A944081C.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4212)
		Method: <com.farsight.bowling.inAppPurchase.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 76fa04d0abd9ccef9b37e6345192a5d2bec71fac16fa792e57e016648d8fdf8e
		Secure: false
	Object:
		Variable: varReplacer5080
		Type: java.lang.String
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5080)
		Method: <com.parse.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters)>
		SHA-256: b83df001dfe1928731d231f4f94fc1ae0748c7f7b395d20944599a36ed1ecf6f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3038)
		Method: <co.cashplay.android.client.Environment: java.lang.String CalculateContentMD5(byte[])>
		SHA-256: e753f0b84d728c42b13187467ff24bf763362b7956b7437e89a2c11f22d67001
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Mac
		Statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer5081)
		Method: <com.parse.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters)>
		SHA-256: 5a0523110fd2e184f399fe4db4f7b1f0a084650d33d91547e3dd6d9cd3cf649a
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.chartboost.sdk.Libraries.b: byte[] a(byte[])>
		SHA-256: c0cb1f3950d1c303a878b272d33cc6b233c283f11853d4c605a6892d1b773e17
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.farsight.bowling.inAppPurchase.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.parse.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: b832aa670c828e2ede739dc34ac5c16bb43a49eaa1e85346ac40adef288109f1
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <co.cashplay.android.client.Environment: java.lang.String CalculateContentMD5(byte[])>
		SHA-256: c9d8606dbe87b223d4998a072edb36b3ce1f211c896cca611c50e5c38fa1d38
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer365)
		Method: <com.parse.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: caf1ed7da08c744c3f3bb3ee31b873498571335150eef9075ffb6034af874f94
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.Mac
		Statement: $r10 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer3034)
		Method: <co.cashplay.android.client.Environment: java.lang.String CalculateHMAC(byte[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: b8eab36b1b64fc293f1259c34e62febbd91a636764937530327c04eecd24f08d
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1158)
		Method: <com.facebook.internal.Utility: java.lang.String md5hash(java.lang.String)>
		SHA-256: 7c7cad5f97f77f3f6c3041d9d242bce68726a86943a073f30efcc0b0be76c37d
		Secure: true
	Object:
		Variable: varReplacer3030
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3030)
		Method: <co.cashplay.android.client.Environment: java.lang.String CalculateHMAC(byte[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 708d223366cf3ee646e100a26f44312dbefce819b0722efd8854eb632c9a017c
		Secure: false
	Object:
		Variable: r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5080)
		Method: <com.parse.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters)>
		SHA-256: 95b3921daccbbae8508c704bce126ba79711faa0c76cc18b21d75a1110b6e0bc
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r6)
		Method: <com.parse.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters)>
		SHA-256: 60029a1b2e5ee22a3931915434a5fa44cf27db5eb408040851f105ce7e16415b
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3980)
		Method: <com.chartboost.sdk.Libraries.b: byte[] a(byte[])>
		SHA-256: a088e7e8fbc33b2af4a0c8bcb84dd0b689b239e1d1604018b940ff3e6d2f02d2
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3030)
		Method: <co.cashplay.android.client.Environment: java.lang.String CalculateHMAC(byte[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 6b4ba0a8a69268854ba69a568d16d86e857aaeb776aa5d5ea7a2f742ef17189b
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String md5hash(java.lang.String)>
		SHA-256: 2927e1a5cb224287b03f6dd515d016a63eb5cb0704288180ae31d42a6182fe4b
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r10.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <co.cashplay.android.client.Environment: java.lang.String CalculateHMAC(byte[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 7a52f690f1fdf9952f0f2d34846b11b21239a839867e186530e00484dbdcf4d6
		Secure: true

Findings in Java Class: com.farsight.bowling.inAppPurchase.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: com.parse.signpost.signature.HmacSha1MessageSigner

	 in Method: java.lang.String sign(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5080)


Findings in Java Class: co.cashplay.android.client.Environment

	 in Method: java.lang.String CalculateHMAC(byte[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3030)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 18

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 3
=====================================================================
