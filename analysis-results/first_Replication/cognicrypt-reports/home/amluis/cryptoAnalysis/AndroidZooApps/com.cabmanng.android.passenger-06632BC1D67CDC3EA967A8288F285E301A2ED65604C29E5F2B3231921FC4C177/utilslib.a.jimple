public class utilslib.a extends java.lang.Object
{
    private static final java.util.concurrent.atomic.AtomicBoolean a;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicBoolean $r0;
        int varReplacer2180;

        nop;

        $r0 = new java.util.concurrent.atomic.AtomicBoolean;

        varReplacer2180 = 0;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(varReplacer2180);

        <utilslib.a: java.util.concurrent.atomic.AtomicBoolean a> = $r0;

        return;
    }

    public static java.lang.String a(utilslib.b, utilslib.c)
    {
        utilslib.b $r0;
        utilslib.c $r1;
        java.lang.String $r2, varReplacer20738;

        nop;

        $r0 := @parameter0: utilslib.b;

        $r1 := @parameter1: utilslib.c;

        varReplacer20738 = "UTF-8";

        $r2 = staticinvoke <utilslib.a: java.lang.String a(utilslib.b,utilslib.c,java.lang.String)>($r0, $r1, varReplacer20738);

        return $r2;
    }

    public static java.lang.String a(utilslib.b, utilslib.c, java.lang.String)
    {
        utilslib.b $r0;
        utilslib.c $r1;
        java.lang.String $r2, $r3, varReplacer20739;
        byte[] $r4;

        nop;

        $r0 := @parameter0: utilslib.b;

        $r1 := @parameter1: utilslib.c;

        $r2 := @parameter2: java.lang.String;

        $r3 = new java.lang.String;

        $r4 = staticinvoke <utilslib.a: byte[] b(utilslib.b,utilslib.c)>($r0, $r1);

        varReplacer20739 = "UTF-8";

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, varReplacer20739);

        return $r3;
    }

    public static java.lang.String a(utilslib.c)
    {
        utilslib.c $r0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: utilslib.c;

        $r1 = virtualinvoke $r0.<utilslib.c: java.lang.String toString()>();

        return $r1;
    }

    public static utilslib.b a(java.lang.String, utilslib.c)
    {
        java.lang.String $r0, varReplacer26889;
        utilslib.c $r1;
        utilslib.b $r2;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: utilslib.c;

        varReplacer26889 = "UTF-8";

        $r2 = staticinvoke <utilslib.a: utilslib.b a(java.lang.String,utilslib.c,java.lang.String)>($r0, $r1, varReplacer26889);

        return $r2;
    }

    public static utilslib.b a(java.lang.String, utilslib.c, java.lang.String)
    {
        java.lang.String $r0, $r2, varReplacer26890;
        utilslib.c $r1;
        byte[] $r3;
        utilslib.b $r4;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: utilslib.c;

        $r2 := @parameter2: java.lang.String;

        varReplacer26890 = "UTF-8";

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer26890);

        $r4 = staticinvoke <utilslib.a: utilslib.b a(byte[],utilslib.c)>($r3, $r1);

        return $r4;
    }

    public static utilslib.b a(byte[], utilslib.c)
    {
        byte[] $r0, $r3, $r6;
        utilslib.c $r1;
        javax.crypto.spec.IvParameterSpec $r2;
        javax.crypto.Cipher $r4;
        javax.crypto.SecretKey $r5;
        utilslib.b $r7;
        java.lang.String varReplacer26891;
        int varReplacer26892;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: utilslib.c;

        $r3 = staticinvoke <utilslib.a: byte[] a()>();

        varReplacer26891 = "AES/CBC/PKCS5Padding";

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer26891);

        $r5 = virtualinvoke $r1.<utilslib.c: javax.crypto.SecretKey a()>();

        $r2 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3);

        varReplacer26892 = 1;

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer26892, $r5, $r2);

        $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] getIV()>();

        $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

        $r6 = staticinvoke <utilslib.b: byte[] a(byte[],byte[])>($r3, $r0);

        $r5 = virtualinvoke $r1.<utilslib.c: javax.crypto.SecretKey b()>();

        $r6 = staticinvoke <utilslib.a: byte[] a(byte[],javax.crypto.SecretKey)>($r6, $r5);

        $r7 = new utilslib.b;

        specialinvoke $r7.<utilslib.b: void <init>(byte[],byte[],byte[])>($r0, $r3, $r6);

        return $r7;
    }

    public static utilslib.c a(java.lang.String)
    {
        java.lang.String $r0, varReplacer20771, varReplacer20772, varReplacer20773, varReplacer20775, varReplacer20776, varReplacer20778;
        java.lang.String[] $r1;
        int $i0, varReplacer20774, varReplacer20777, varReplacer20779;
        java.lang.IllegalArgumentException $r2;
        byte[] $r3, $r5;
        java.security.InvalidKeyException $r4;
        utilslib.c $r6;
        javax.crypto.spec.SecretKeySpec $r7, $r8;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer20772 = ":";

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer20772);

        $i0 = lengthof $r1;

        if $i0 == 2 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer20773 = "Cannot parse aesKey:hmacKey";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer20773);

        throw $r2;

     label1:
        $r0 = $r1[0];

        varReplacer20777 = 2;

        $r3 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r0, varReplacer20777);

        $i0 = lengthof $r3;

        if $i0 == 16 goto label2;

        $r4 = new java.security.InvalidKeyException;

        varReplacer20778 = "Base64 decoded key is not 128 bytes";

        specialinvoke $r4.<java.security.InvalidKeyException: void <init>(java.lang.String)>(varReplacer20778);

        throw $r4;

     label2:
        $r0 = $r1[1];

        varReplacer20779 = 2;

        $r5 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r0, varReplacer20779);

        $i0 = lengthof $r5;

        if $i0 == 32 goto label3;

        $r4 = new java.security.InvalidKeyException;

        varReplacer20771 = "Base64 decoded key is not 256 bytes";

        specialinvoke $r4.<java.security.InvalidKeyException: void <init>(java.lang.String)>(varReplacer20771);

        throw $r4;

     label3:
        $r6 = new utilslib.c;

        $r7 = new javax.crypto.spec.SecretKeySpec;

        $i0 = lengthof $r3;

        varReplacer20774 = 0;

        varReplacer20775 = "AES";

        specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer20774, $i0, varReplacer20775);

        $r8 = new javax.crypto.spec.SecretKeySpec;

        varReplacer20776 = "HmacSHA256";

        specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer20776);

        specialinvoke $r6.<utilslib.c: void <init>(javax.crypto.SecretKey,javax.crypto.SecretKey)>($r7, $r8);

        return $r6;
    }

    public static utilslib.c a(java.lang.String, byte[])
    {
        java.lang.String $r0, varReplacer20782, varReplacer20787, varReplacer20788;
        byte[] $r1, $r6;
        javax.crypto.spec.PBEKeySpec $r2;
        char[] $r3;
        javax.crypto.SecretKeyFactory $r4;
        javax.crypto.SecretKey $r5;
        javax.crypto.spec.SecretKeySpec $r7, $r8;
        utilslib.c $r9;
        int varReplacer20780, varReplacer20781, varReplacer20783, varReplacer20784, varReplacer20785, varReplacer20786;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        staticinvoke <utilslib.a: void b()>();

        $r2 = new javax.crypto.spec.PBEKeySpec;

        $r3 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        varReplacer20785 = 10000;

        varReplacer20786 = 384;

        specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer20785, varReplacer20786);

        varReplacer20787 = "PBKDF2WithHmacSHA1";

        $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer20787);

        $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2);

        $r6 = interfaceinvoke $r5.<javax.crypto.SecretKey: byte[] getEncoded()>();

        varReplacer20780 = 0;

        varReplacer20781 = 16;

        $r1 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r6, varReplacer20780, varReplacer20781);

        varReplacer20783 = 16;

        varReplacer20784 = 48;

        $r6 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r6, varReplacer20783, varReplacer20784);

        $r7 = new javax.crypto.spec.SecretKeySpec;

        varReplacer20788 = "AES";

        specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer20788);

        $r8 = new javax.crypto.spec.SecretKeySpec;

        varReplacer20782 = "HmacSHA256";

        specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer20782);

        $r9 = new utilslib.c;

        specialinvoke $r9.<utilslib.c: void <init>(javax.crypto.SecretKey,javax.crypto.SecretKey)>($r7, $r8);

        return $r9;
    }

    public static boolean a(byte[], byte[])
    {
        byte[] $r0, $r1;
        byte $b0, $b3, $b4;
        int $i1, $i2, varReplacer20743, varReplacer20744, varReplacer20745;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $i1 = lengthof $r0;

        $i2 = lengthof $r1;

        if $i1 == $i2 goto label1;

        varReplacer20744 = 0;

        return varReplacer20744;

     label1:
        $i1 = 0;

        $b3 = 0;

     label2:
        $i2 = lengthof $r0;

        if $i1 >= $i2 goto label3;

        $b4 = $r0[$i1];

        $b0 = $r1[$i1];

        $b0 = $b4 ^ $b0;

        $b3 = $b3 | $b0;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        if $b3 != 0 goto label4;

        varReplacer20743 = 1;

        return varReplacer20743;

     label4:
        varReplacer20745 = 0;

        return varReplacer20745;
    }

    public static byte[] a()
    {
        byte[] $r0;
        int varReplacer26893;

        nop;

        varReplacer26893 = 16;

        $r0 = staticinvoke <utilslib.a: byte[] a(int)>(varReplacer26893);

        return $r0;
    }

    private static byte[] a(int)
    {
        int $i0;
        byte[] $r0;
        java.security.SecureRandom $r1;
        java.lang.String varReplacer26894;

        nop;

        $i0 := @parameter0: int;

        staticinvoke <utilslib.a: void b()>();

        varReplacer26894 = "SHA1PRNG";

        $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer26894);

        $r0 = newarray (byte)[16];

        virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0);

        return $r0;
    }

    public static byte[] a(byte[], javax.crypto.SecretKey)
    {
        byte[] $r0;
        javax.crypto.SecretKey $r1;
        javax.crypto.Mac $r2;
        java.lang.String varReplacer20746;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: javax.crypto.SecretKey;

        varReplacer20746 = "HmacSHA256";

        $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer20746);

        virtualinvoke $r2.<javax.crypto.Mac: void init(java.security.Key)>($r1);

        $r0 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0);

        return $r0;
    }

    public static void b()
    {
        nop;

        return;
    }

    public static byte[] b(utilslib.b, utilslib.c)
    {
        utilslib.b $r0;
        utilslib.c $r1;
        javax.crypto.spec.IvParameterSpec $r2;
        byte[] $r3, $r4;
        javax.crypto.SecretKey $r5;
        boolean $z0;
        javax.crypto.Cipher $r6;
        java.security.GeneralSecurityException $r7;
        java.lang.String varReplacer20740, varReplacer20741;
        int varReplacer20742;

        nop;

        $r0 := @parameter0: utilslib.b;

        $r1 := @parameter1: utilslib.c;

        $r3 = virtualinvoke $r0.<utilslib.b: byte[] b()>();

        $r4 = virtualinvoke $r0.<utilslib.b: byte[] a()>();

        $r3 = staticinvoke <utilslib.b: byte[] a(byte[],byte[])>($r3, $r4);

        $r5 = virtualinvoke $r1.<utilslib.c: javax.crypto.SecretKey b()>();

        $r3 = staticinvoke <utilslib.a: byte[] a(byte[],javax.crypto.SecretKey)>($r3, $r5);

        $r4 = virtualinvoke $r0.<utilslib.b: byte[] c()>();

        $z0 = staticinvoke <utilslib.a: boolean a(byte[],byte[])>($r3, $r4);

        if $z0 == 0 goto label1;

        varReplacer20741 = "AES/CBC/PKCS5Padding";

        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer20741);

        $r5 = virtualinvoke $r1.<utilslib.c: javax.crypto.SecretKey a()>();

        $r2 = new javax.crypto.spec.IvParameterSpec;

        $r3 = virtualinvoke $r0.<utilslib.b: byte[] b()>();

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3);

        varReplacer20742 = 2;

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer20742, $r5, $r2);

        $r3 = virtualinvoke $r0.<utilslib.b: byte[] a()>();

        $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

        return $r3;

     label1:
        $r7 = new java.security.GeneralSecurityException;

        varReplacer20740 = "MAC stored in civ does not match computed MAC.";

        specialinvoke $r7.<java.security.GeneralSecurityException: void <init>(java.lang.String)>(varReplacer20740);

        throw $r7;
    }
}
