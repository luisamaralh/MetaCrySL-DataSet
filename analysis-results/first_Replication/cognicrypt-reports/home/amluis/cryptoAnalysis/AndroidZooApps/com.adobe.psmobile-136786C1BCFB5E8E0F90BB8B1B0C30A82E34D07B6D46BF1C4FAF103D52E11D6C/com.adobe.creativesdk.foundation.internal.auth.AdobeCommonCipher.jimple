final class com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher extends java.lang.Object
{
    private static com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher instance;
    private javax.crypto.Cipher decryptionCipher;
    private javax.crypto.Cipher encryptionCipher;

    static void <clinit>()
    {
        null_type varReplacer1049;

        nop;

        varReplacer1049 = null;

        <com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher instance> = varReplacer1049;

        return;
    }

    public void <init>(byte[]) throws javax.crypto.NoSuchPaddingException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher $r0;
        byte[] $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Cipher $r3;
        java.lang.String varReplacer1059, varReplacer1060, varReplacer1063;
        int varReplacer1061, varReplacer1062;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher;

        $r1 := @parameter0: byte[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new javax.crypto.spec.SecretKeySpec;

        varReplacer1063 = "AES";

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1063);

        varReplacer1060 = "AES";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1060);

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: javax.crypto.Cipher encryptionCipher> = $r3;

        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: javax.crypto.Cipher encryptionCipher>;

        varReplacer1061 = 1;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1061, $r2);

        varReplacer1059 = "AES";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1059);

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: javax.crypto.Cipher decryptionCipher> = $r3;

        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: javax.crypto.Cipher decryptionCipher>;

        varReplacer1062 = 2;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1062, $r2);

        return;
    }

    static com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher createInstance(byte[]) throws javax.crypto.NoSuchPaddingException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException
    {
        byte[] $r0;
        com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher $r1;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = <com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher instance>;

        if $r1 != null goto label1;

        $r1 = new com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher;

        specialinvoke $r1.<com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: void <init>(byte[])>($r0);

        <com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher instance> = $r1;

     label1:
        $r1 = <com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher instance>;

        return $r1;
    }

    java.lang.String decrypt(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher $r0;
        java.lang.String $r1, varReplacer8916, varReplacer8917, varReplacer8918;
        java.lang.Exception $r2;
        javax.crypto.Cipher $r3;
        byte[] $r4;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r5;
        java.lang.Class $r6;
        int varReplacer8919;
        null_type varReplacer8920;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label6;

     label1:
        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: javax.crypto.Cipher decryptionCipher>;

        varReplacer8918 = "UTF-8";

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer8918);

        varReplacer8919 = 2;

        $r4 = staticinvoke <android.util.Base64: byte[] decode(byte[],int)>($r4, varReplacer8919);

        $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

     label2:
        $r1 = new java.lang.String;

     label3:
        varReplacer8916 = "UTF-8";

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, varReplacer8916);

     label4:
        return $r1;

     label5:
        $r2 := @caughtexception;

        $r5 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        $r6 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        varReplacer8917 = "Decryption error";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r1, varReplacer8917, $r2);

     label6:
        varReplacer8920 = null;

        return varReplacer8920;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    java.lang.String encrypt(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher $r0;
        java.lang.String $r1, varReplacer1362, varReplacer1363, varReplacer1366;
        java.lang.Exception $r2;
        javax.crypto.Cipher $r3;
        byte[] $r4;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r5;
        java.lang.Class $r6;
        int varReplacer1364;
        null_type varReplacer1365;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label6;

     label1:
        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: javax.crypto.Cipher encryptionCipher>;

        varReplacer1363 = "UTF-8";

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1363);

        $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

     label2:
        $r1 = new java.lang.String;

     label3:
        varReplacer1364 = 2;

        $r4 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>($r4, varReplacer1364);

        varReplacer1366 = "UTF-8";

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, varReplacer1366);

     label4:
        return $r1;

     label5:
        $r2 := @caughtexception;

        $r5 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        $r6 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        varReplacer1362 = "Encryption error";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r1, varReplacer1362, $r2);

     label6:
        varReplacer1365 = null;

        return varReplacer1365;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
