public class com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_ACCESS_TOKEN;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_ACCESS_TOKEN_EXPIRATION;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_ADOBE_ID;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_CONTINUABLE_EVENT_ERROR_CODE;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_CONTINUABLE_EVENT_JUMP_URL;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_CONTINUATION_TOKEN;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_COUNTRY_CODE;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_DEVICE_TOKEN;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_DEVICE_TOKEN_EXPIRATION;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_DISPLAY_NAME;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_EMAIL;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_EMAIL_VERIFIED;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_ENTERPRISE_INFO;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_ENTITLEMENTS;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_ENVIRONMENT_INDICATOR;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_FIRST_NAME;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_KEYCHAIN_VERSION;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_LAST_NAME;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_MIGRATED;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_REFRESH_TOKEN;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_REFRESH_TOKEN_EXPIRATION;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_UUID;
    public static final java.lang.String ADOBE_AUTH_KEYCHAIN_VERSION;
    public static final java.lang.String ADOBE_AUTH_SHARED_KEYCHAIN_CONTINUATION_TOKEN;
    public static final java.lang.String ADOBE_AUTH_SHARED_KEYCHAIN_DEVICE_TOKEN;
    public static final java.lang.String ADOBE_AUTH_SHARED_KEYCHAIN_REFRESH_TOKEN;
    public static final int AUTH_KEYCHAIN_VERSION;
    public static final java.lang.String CLIENT_ID;
    public static final java.lang.String CLIENT_SECRET;
    public static final java.lang.String CLIENT_STATE;
    public static final java.lang.String DEVICE_ID;
    public static final java.lang.String DEVICE_NAME;
    public static final java.lang.String IDP_FLOW;
    private static com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain sharedKeychain;
    protected android.content.Context context;
    private java.lang.String groupID;
    private com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService ims;
    protected android.content.SharedPreferences migratedSharedPreferences;
    private com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue migrationStatusValue;
    protected android.content.SharedPreferences sharedPreferences;

    static void <clinit>()
    {
        boolean $z0;
        java.lang.Class $r0;

        nop;

        $r0 = class "Lcom/adobe/creativesdk/foundation/internal/auth/AdobeAuthKeychain;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: boolean $assertionsDisabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public void <init>(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue $r2, $r10;
        com.adobe.creativesdk.foundation.internal.common.AdobeCommonApplicationContextHolder $r3;
        android.content.Context $r4;
        boolean $z0;
        java.lang.AssertionError $r5;
        android.content.SharedPreferences $r6;
        int $i0, varReplacer992, varReplacer994, varReplacer996, varReplacer998;
        java.lang.Integer $r7;
        android.content.SharedPreferences$Editor $r8;
        com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr $r9;
        java.lang.String varReplacer990, varReplacer991, varReplacer993, varReplacer995, varReplacer997, varReplacer999;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        $r1 := @parameter0: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue Undefined>;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue migrationStatusValue> = $r2;

        varReplacer990 = "";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void setGroupID(java.lang.String)>(varReplacer990);

        $r3 = staticinvoke <com.adobe.creativesdk.foundation.internal.common.AdobeCommonApplicationContextHolder: com.adobe.creativesdk.foundation.internal.common.AdobeCommonApplicationContextHolder getSharedApplicationContextHolder()>();

        $r4 = virtualinvoke $r3.<com.adobe.creativesdk.foundation.internal.common.AdobeCommonApplicationContextHolder: android.content.Context getApplicationContext()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.Context context> = $r4;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService ims> = $r1;

        $z0 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r4 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.Context context>;

        if $r4 != null goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r4 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.Context context>;

        varReplacer993 = "Foundation";

        varReplacer994 = 0;

        $r6 = virtualinvoke $r4.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>(varReplacer993, varReplacer994);

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences sharedPreferences> = $r6;

        $z0 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r6 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences sharedPreferences>;

        if $r6 != null goto label2;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $r6 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences sharedPreferences>;

        varReplacer997 = "KeychainVersion";

        varReplacer998 = 0;

        $i0 = interfaceinvoke $r6.<android.content.SharedPreferences: int getInt(java.lang.String,int)>(varReplacer997, varReplacer998);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        if $i0 >= 10 goto label3;

        $r6 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences sharedPreferences>;

        $r8 = interfaceinvoke $r6.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        varReplacer999 = "EnvironmentIndicator";

        interfaceinvoke $r8.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>(varReplacer999);

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void resetTokens()>();

        varReplacer991 = "KeychainVersion";

        varReplacer992 = 10;

        interfaceinvoke $r8.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>(varReplacer991, varReplacer992);

        interfaceinvoke $r8.<android.content.SharedPreferences$Editor: void apply()>();

        $r9 = staticinvoke <com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr: com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr getInstance()>();

        virtualinvoke $r9.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr: void deleteFoundationAuthAESKey()>();

     label3:
        $r4 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.Context context>;

        varReplacer995 = "FoundationMigrated";

        varReplacer996 = 0;

        $r6 = virtualinvoke $r4.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>(varReplacer995, varReplacer996);

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences migratedSharedPreferences> = $r6;

        $z0 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r6 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences migratedSharedPreferences>;

        if $r6 != null goto label4;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label4:
        $r2 = specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue getMigrationStatusValue()>();

        $r10 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue NotMigrated>;

        if $r2 != $r10 goto label5;

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void migratePreferences()>();

     label5:
        return;
    }

    private java.util.Date convertStringtoDate(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, $r8;
        java.lang.Exception $r2;
        java.lang.Long $r3;
        java.util.Calendar $r4;
        long $l0;
        java.util.Date $r5;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r6;
        java.lang.Class $r7;
        null_type varReplacer1230, varReplacer1231;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        varReplacer1230 = null;

        return varReplacer1230;

     label1:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r1);

        $r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $l0 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        virtualinvoke $r4.<java.util.Calendar: void setTimeInMillis(long)>($l0);

        $r5 = virtualinvoke $r4.<java.util.Calendar: java.util.Date getTime()>();

     label2:
        return $r5;

     label3:
        $r2 := @caughtexception;

        $r6 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        $r7 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $r8 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r6, $r1, $r8, $r2);

        varReplacer1231 = null;

        return varReplacer1231;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue getMigrationStatusValue()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue $r1, $r2;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue[] $r3;
        android.content.SharedPreferences $r4;
        int $i0;
        java.lang.String varReplacer1032;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue migrationStatusValue>;

        $r2 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue Undefined>;

        if $r1 != $r2 goto label1;

        $r3 = staticinvoke <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue[] values()>();

        $r4 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences sharedPreferences>;

        $r1 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue NotMigrated>;

        $i0 = virtualinvoke $r1.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue: int ordinal()>();

        varReplacer1032 = "KeyChainMigrated";

        $i0 = interfaceinvoke $r4.<android.content.SharedPreferences: int getInt(java.lang.String,int)>(varReplacer1032, $i0);

        $r1 = $r3[$i0];

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue migrationStatusValue> = $r1;

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue migrationStatusValue>;

        return $r1;
    }

    public static com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain getSharedKeychain()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain r0;

        nop;

        r0 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain sharedKeychain>;

        return r0;
    }

    private boolean hasEnvironmentChanged()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        android.content.SharedPreferences $r1;
        int $i0, $i1, varReplacer1126, varReplacer1128, varReplacer1130, varReplacer1131;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r2;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment $r3, $r4;
        java.lang.String varReplacer1125, varReplacer1127, varReplacer1129;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences sharedPreferences>;

        varReplacer1129 = "EnvironmentIndicator";

        varReplacer1130 = -1;

        $i0 = interfaceinvoke $r1.<android.content.SharedPreferences: int getInt(java.lang.String,int)>(varReplacer1129, varReplacer1130);

        if $i0 == -1 goto label2;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService ims>;

        $r3 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment getEnvironment()>();

        $i1 = virtualinvoke $r3.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment: int ordinal()>();

        if $i0 == $i1 goto label1;

        $r3 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment AdobeAuthIdentityManagementServiceUndefined>;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService ims>;

        $r4 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment getEnvironment()>();

        if $r3 == $r4 goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService ims>;

        $r3 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment getEnvironment()>();

        varReplacer1127 = "EnvironmentIndicator";

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void internalUpdateOrAdd(java.lang.String,com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment)>(varReplacer1127, $r3);

        varReplacer1126 = 1;

        return varReplacer1126;

     label1:
        varReplacer1131 = 0;

        return varReplacer1131;

     label2:
        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService ims>;

        $r3 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment getEnvironment()>();

        varReplacer1125 = "EnvironmentIndicator";

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void internalUpdateOrAdd(java.lang.String,com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment)>(varReplacer1125, $r3);

        varReplacer1128 = 1;

        return varReplacer1128;
    }

    private java.lang.String internalFindKey(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue $r2, $r3;
        android.content.SharedPreferences $r4;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r5;
        com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher $r6;
        null_type varReplacer1034, varReplacer1035;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue migrationStatusValue>;

        $r2 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue NotMigrated>;

        if $r3 != $r2 goto label1;

        $r4 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences sharedPreferences>;

        varReplacer1034 = null;

        $r1 = interfaceinvoke $r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, varReplacer1034);

        $r5 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService ims>;

        $r6 = virtualinvoke $r5.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher getCipher()>();

        $r1 = virtualinvoke $r6.<com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: java.lang.String decrypt(java.lang.String)>($r1);

        return $r1;

     label1:
        $r4 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences migratedSharedPreferences>;

        varReplacer1035 = null;

        $r1 = interfaceinvoke $r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, varReplacer1035);

        return $r1;
    }

    private void internalUpdateOrAdd(java.lang.String, com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, varReplacer1132;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment $r2;
        android.content.SharedPreferences $r3;
        android.content.SharedPreferences$Editor $r4;
        int $i0;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment;

        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences sharedPreferences>;

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $i0 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment: int ordinal()>();

        varReplacer1132 = "EnvironmentIndicator";

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>(varReplacer1132, $i0);

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    private void internalUpdateOrAdd(java.lang.String, java.lang.Object)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, $r5;
        java.lang.Object $r2;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue $r3, $r6;
        boolean $z0;
        java.util.Date $r4;
        long $l0;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r7;
        com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher $r8;
        android.content.SharedPreferences $r9;
        android.content.SharedPreferences$Editor $r10;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $z0 = $r2 instanceof java.util.Date;

        if $z0 == 0 goto label2;

        $r4 = (java.util.Date) $r2;

        $l0 = virtualinvoke $r4.<java.util.Date: long getTime()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

     label1:
        $r6 = specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue getMigrationStatusValue()>();

        $r3 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue NotMigrated>;

        if $r6 != $r3 goto label3;

        $r7 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService ims>;

        $r8 = virtualinvoke $r7.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher getCipher()>();

        $r5 = virtualinvoke $r8.<com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: java.lang.String encrypt(java.lang.String)>($r5);

        $r9 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences sharedPreferences>;

        $r10 = interfaceinvoke $r9.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r10.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r5);

        interfaceinvoke $r10.<android.content.SharedPreferences$Editor: void apply()>();

        return;

     label2:
        $r5 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        goto label1;

     label3:
        $r9 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences migratedSharedPreferences>;

        $r10 = interfaceinvoke $r9.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r10.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r5);

        interfaceinvoke $r10.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    private void migratePreferences()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        android.content.SharedPreferences $r1;
        java.util.Map $r2;
        int $i0;
        android.content.SharedPreferences$Editor $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6, $r10;
        java.util.Map$Entry $r7;
        java.lang.String $r8, $r9, varReplacer1033;
        java.lang.Integer $r11;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue $r12;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences sharedPreferences>;

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.util.Map getAll()>();

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        if $i0 <= 0 goto label4;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences migratedSharedPreferences>;

        $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = $r6 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r6;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r6;

        $r9 = specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String internalFindKey(java.lang.String)>($r9);

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r8, $r9);

        goto label1;

     label2:
        $z0 = $r6 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r10 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r10;

        $r11 = (java.lang.Integer) $r6;

        $i0 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r8, $i0);

        goto label1;

     label3:
        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: void apply()>();

     label4:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences sharedPreferences>;

        $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r12 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue Migrated>;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue migrationStatusValue> = $r12;

        $r12 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue migrationStatusValue>;

        $i0 = virtualinvoke $r12.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue: int ordinal()>();

        varReplacer1033 = "KeyChainMigrated";

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>(varReplacer1033, $i0);

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    public static void setSharedKeychain(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;

        nop;

        $r0 := @parameter0: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain sharedKeychain> = $r0;

        return;
    }

    public void deleteKey(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue $r2, $r3;
        android.content.SharedPreferences $r4;
        android.content.SharedPreferences$Editor $r5;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        $r1 := @parameter0: java.lang.String;

        $r3 = specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue getMigrationStatusValue()>();

        $r2 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain$AdobeAuthKeychainMigrationStatusValue NotMigrated>;

        if $r3 != $r2 goto label1;

        $r4 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences sharedPreferences>;

        $r5 = interfaceinvoke $r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>($r1);

        interfaceinvoke $r5.<android.content.SharedPreferences$Editor: void apply()>();

        return;

     label1:
        $r4 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences migratedSharedPreferences>;

        $r5 = interfaceinvoke $r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>($r1);

        interfaceinvoke $r5.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    public java.lang.String findKey(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1;
        boolean $z0;
        null_type varReplacer1124;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        $r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: boolean hasEnvironmentChanged()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void resetTokens()>();

        varReplacer1124 = null;

        return varReplacer1124;

     label1:
        $r1 = specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String internalFindKey(java.lang.String)>($r1);

        return $r1;
    }

    public java.lang.String getAccessToken()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, varReplacer1229;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        varReplacer1229 = "AccessToken";

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer1229);

        return $r1;
    }

    public java.util.Date getAccessTokenExpiration()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, varReplacer1228;
        java.util.Date $r2;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        varReplacer1228 = "AccessTokenExpiration";

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer1228);

        $r2 = specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.util.Date convertStringtoDate(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String getAdobeID()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, varReplacer1123;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        varReplacer1123 = "AdobeID";

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer1123);

        return $r1;
    }

    public java.lang.String getContinuationToken()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>("ContinuationToken");

        return $r1;
    }

    public java.lang.String getContiuableEventErrorCode()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, varReplacer3740;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        varReplacer3740 = "ContinuableEventErrorCode";

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer3740);

        return $r1;
    }

    public java.lang.String getContiuableEventJumpURL()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, varReplacer3739;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        varReplacer3739 = "ContinuableEventJumpURL";

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer3739);

        return $r1;
    }

    public java.lang.String getCountrycode()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, varReplacer3768;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        varReplacer3768 = "CountryCode";

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer3768);

        return $r1;
    }

    public java.lang.String getDeviceToken()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, varReplacer3663;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        varReplacer3663 = "DeviceToken";

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer3663);

        return $r1;
    }

    public java.util.Date getDeviceTokenExpiration()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, varReplacer3662;
        java.util.Date $r2;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        varReplacer3662 = "DeviceTokenExpiration";

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer3662);

        $r2 = specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.util.Date convertStringtoDate(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String getDisplayName()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, varReplacer3769;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        varReplacer3769 = "DisplayName";

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer3769);

        return $r1;
    }

    public java.lang.String getEmailAddress()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, varReplacer3765;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        varReplacer3765 = "Email";

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer3765);

        return $r1;
    }

    public java.lang.String getEmailVerified()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, varReplacer3764;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        varReplacer3764 = "EmailVerified";

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer3764);

        return $r1;
    }

    public java.lang.String getEnterpriseInfo()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, varReplacer3763;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        varReplacer3763 = "EnterpriseInfo";

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer3763);

        return $r1;
    }

    public java.util.Set getEntitlements()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.util.ArrayList $r1;
        java.util.StringTokenizer $r2;
        java.lang.String $r3;
        boolean $z0;
        java.util.HashSet $r4;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        $r3 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>("Entitlements");

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        if $r3 != null goto label1;

        return null;

     label1:
        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r3, ",");

     label2:
        $z0 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label2;

     label3:
        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>(java.util.Collection)>($r1);

        return $r4;
    }

    public java.lang.String getFirstName()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, varReplacer3767;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        varReplacer3767 = "FirstName";

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer3767);

        return $r1;
    }

    public java.lang.String getGroupID()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String r1;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String groupID>;

        return r1;
    }

    public com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment getLastEnvironment()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        android.content.SharedPreferences $r1;
        int $i0, varReplacer1001;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment[] $r2;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment $r3;
        java.lang.String varReplacer1000;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: android.content.SharedPreferences sharedPreferences>;

        varReplacer1000 = "EnvironmentIndicator";

        varReplacer1001 = -1;

        $i0 = interfaceinvoke $r1.<android.content.SharedPreferences: int getInt(java.lang.String,int)>(varReplacer1000, varReplacer1001);

        if $i0 != -1 goto label1;

        $r3 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment AdobeAuthIMSEnvironmentProductionUS>;

        return $r3;

     label1:
        $r2 = staticinvoke <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment[] values()>();

        $r3 = $r2[$i0];

        return $r3;
    }

    public java.lang.String getLastName()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, varReplacer3766;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        varReplacer3766 = "LastName";

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer3766);

        return $r1;
    }

    public java.lang.String getRefreshToken()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, varReplacer3661;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        varReplacer3661 = "RefreshToken";

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer3661);

        return $r1;
    }

    public java.util.Date getRefreshTokenExpiration()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, varReplacer3660;
        java.util.Date $r2;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        varReplacer3660 = "RefreshTokenExpiration";

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer3660);

        $r2 = specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.util.Date convertStringtoDate(java.lang.String)>($r1);

        return $r2;
    }

    public void resetTokens()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String varReplacer1014, varReplacer1015, varReplacer1016, varReplacer1017, varReplacer1018, varReplacer1019, varReplacer1020, varReplacer1021, varReplacer1022, varReplacer1023, varReplacer1024, varReplacer1025, varReplacer1026, varReplacer1027, varReplacer1028, varReplacer1029, varReplacer1030, varReplacer1031;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        varReplacer1031 = "AdobeID";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>(varReplacer1031);

        varReplacer1019 = "AccessToken";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>(varReplacer1019);

        varReplacer1023 = "AccessTokenExpiration";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>(varReplacer1023);

        varReplacer1024 = "ContinuationToken";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>(varReplacer1024);

        varReplacer1022 = "DeviceToken";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>(varReplacer1022);

        varReplacer1029 = "DeviceTokenExpiration";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>(varReplacer1029);

        varReplacer1014 = "DisplayName";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>(varReplacer1014);

        varReplacer1026 = "Email";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>(varReplacer1026);

        varReplacer1018 = "EmailVerified";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>(varReplacer1018);

        varReplacer1015 = "Entitlements";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>(varReplacer1015);

        varReplacer1027 = "FirstName";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>(varReplacer1027);

        varReplacer1030 = "LastName";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>(varReplacer1030);

        varReplacer1020 = "RefreshToken";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>(varReplacer1020);

        varReplacer1021 = "RefreshTokenExpiration";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>(varReplacer1021);

        varReplacer1025 = "EnterpriseInfo";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>(varReplacer1025);

        varReplacer1028 = "ContinuableEventJumpURL";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>(varReplacer1028);

        varReplacer1016 = "ContinuableEventErrorCode";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>(varReplacer1016);

        varReplacer1017 = "idpFlow";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>(varReplacer1017);

        return;
    }

    public void setGroupID(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1, varReplacer1013;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        $r1 := @parameter0: java.lang.String;

        varReplacer1013 = "";

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String groupID> = varReplacer1013;

        return;
    }

    public void updateOrAddKey(java.lang.String, java.lang.Object)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r0;
        java.lang.String $r1;
        java.lang.Object $r2;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: boolean hasEnvironmentChanged()>();

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void internalUpdateOrAdd(java.lang.String,java.lang.Object)>($r1, $r2);

        return;
    }
}
