Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.mozilla.gecko.updater.UpdateService: boolean verifyDownloadedPackage(java.io.File)>
		SHA-256: 4ac6f5b22eca17889109082c03467dfaeae8a7313547682c44458185824f732e
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.KeyStore
		Statement: $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r8)
		Method: <jp.co.cec.module.serverAction.ServerHttps: void <init>(android.content.Context,java.lang.String,java.lang.String[])>
		SHA-256: 5c20288382bcf0a1627715b310cf727c36369d6746bce4d31f3047df6489b5fb
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9416)
		Method: <org.mozilla.gecko.sync.net.BaseResource: ch.boye.httpclientandroidlib.conn.ClientConnectionManager getConnectionManager()>
		SHA-256: 43ae81ddf22386c23d846520128e3f91fd4ae53fbe242486fa8a2978632b813d
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.mozilla.gecko.kaito.KAITOLoader: java.lang.String getSha1Digest(byte[])>
		SHA-256: 52672da9d432b3c5d5edd961e30f2dca2331e40469fa9b97c7383befbde61f28
		Secure: true
	Object:
		Variable: varReplacer7892
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer7892)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] encrypt(byte[])>
		SHA-256: 4b1d4196f1e13c7ed7637e1261790fc2d281ea58a35cc937b51988edf425fd17
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10153)
		Method: <jp.co.jmas.full.KAITO.kaito.KAITODocProvider: byte[] getHash(byte[])>
		SHA-256: 2cc7855b4b5c55b7a9a0833a66ec39a0f35c931da350d0abfb12de72c5efa628
		Secure: true
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3370)
		Method: <ch.boye.httpclientandroidlib.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: a42d562969d289f2db8cfec8df2407e332ed632aa7e598a48bdd139f1a8e5e0a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7887)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] encrypt(byte[])>
		SHA-256: 1c99071dce85a6b78a565b42947243fbed2fe6ad20c5149c435a8a8961887387
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <jp.co.jmas.full.KAITO.kaito.KAITODocProvider: byte[] getHash(byte[])>
		SHA-256: 13da1abb1645ee29635bf8ebe0438b07a7a0767c2b98b526267fb85d76610d4
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <org.mozilla.gecko.sync.Utils: byte[] sha256(byte[])>
		SHA-256: 9ced9c51c14331591363970df2ef4929fe6f001ffc3faa22cbe577fc8899fde4
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyPairGenerator
		Statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer13580)
		Method: <org.mozilla.gecko.browserid.DSACryptoImplementation: org.mozilla.gecko.browserid.BrowserIDKeyPair generateKeyPair(int)>
		SHA-256: 20858784f970837d9c367ca59ab3bd6be202b5957aa59aa3279f079bf5057f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8768)
		Method: <org.mozilla.gecko.updater.UpdateService: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: b8bfc7da292a6045e56f6f474a9337a706314696b5422ba3f3fadabff22c529
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7979)
		Method: <jp.co.cec.module.serverAction.MySSLSocketFactory: void <init>(android.content.Context,java.security.KeyStore,java.lang.String,java.lang.String[])>
		SHA-256: ba79b0d733d8c5f04c4088dae498cf0498f495ddf369dc456d80d98a1c49f69
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13692)
		Method: <org.mozilla.gecko.sync.Utils: byte[] sha256(byte[])>
		SHA-256: 306e8521bd3c0073ee4caeb77b1dfbd2e080f9b9f283aac84ba64909aaad0fff
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7469)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] decrypt(byte[])>
		SHA-256: 1bada19d22874c298616e1bb07c30fa8bfa2ac8195bdd0971f8ced0a7d297a41
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] decrypt(byte[])>
		SHA-256: 16fbdee3ccf53566f47857ba4ca4b44fb5e9d395e6f918a68cd3d7ad2b4abc32
		Secure: false
	Object:
		Variable: varReplacer7477
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer7477)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] decrypt(byte[])>
		SHA-256: 25b06f66677ef4ab4f314541d34f1ed42beda363a55c36ff3db67166f5e3c730
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer7477)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] decrypt(byte[])>
		SHA-256: 471f9077b7004a9ee9ee3504291fc8aa274b19297ff72da58ed233e4f2ddce3b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7586)
		Method: <org.mozilla.gecko.kaito.activate.KAITOSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 374f3002ae810d8faec708bff1d8c644eed337dd07d2cf4364fa56de7e3045ae
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPair
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.mozilla.gecko.browserid.DSACryptoImplementation: org.mozilla.gecko.browserid.BrowserIDKeyPair generateKeyPair(int)>
		SHA-256: 8d880835e7f352b72277cb342ada320ac4ef0e1cf4825b19c38a652440e84c82
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <jp.co.cec_ltd.cloudappbase.util.libs.SubString: java.lang.String digestMd5(java.lang.String)>
		SHA-256: 9426bc241b4896a2481b14d138bdab52844378f8d5066e922f9765986e30abe0
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] encrypt(byte[])>
		SHA-256: 2f3806df3da28fe0dd00b1490efaf1a439d9488f1b4544c31f1cc2a9107706a2
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <org.mozilla.gecko.sync.Utils: byte[] sha1(java.lang.String)>
		SHA-256: 55c463b3fcc9431d3a265126e007f00c9d82d9b1025b7da12398b8d8dbf7556d
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7452)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: java.lang.String getSha1Digest(byte[])>
		SHA-256: a94a0fa7e531bbcd2e0e3fa02072ded185e0c05e7fa84069eaec8918856f97e8
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r7)
		Method: <org.mozilla.gecko.kaito.activate.MultiProxyHttpRequest: org.apache.http.client.HttpClient getHttpClient(org.mozilla.gecko.kaito.activate.KAITOProxy)>
		SHA-256: 1550e599c346e1b335a45b5cfa0f723491256651b00c75d73c02a1cde82c0974
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.mozilla.gecko.sync.Utils: void <clinit>()>
		SHA-256: 21751f7aecf1d291eda3d279cbf29dd85f2a1ab722649b63742a78fd41b9d237
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.mozilla.gecko.sync.net.BaseResource: ch.boye.httpclientandroidlib.conn.ClientConnectionManager getConnectionManager()>
		SHA-256: 921527a4d56c9731eabbd204e7f3975b795533b68dde403bf13034be3bf0ecb6
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7717)
		Method: <jp.co.cec_ltd.cloudappbase.util.libs.SubString: java.lang.String digestMd5(java.lang.String)>
		SHA-256: 74bf00fbb6f780cad3f914356cfe195150899c98743408bd95de5852902edf6d
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8387)
		Method: <org.mozilla.gecko.sync.Utils: byte[] sha1(java.lang.String)>
		SHA-256: 19dd9569f194b1e8c81fec5980244741e9c53f2fb89fb7b712fa64487eda9511
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer7892)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] encrypt(byte[])>
		SHA-256: 375ed6959018f22e2221f167f46419f850e37e59a60694a4d0d4899ad610de5c
		Secure: false

Findings in Java Class: org.mozilla.gecko.updater.UpdateService

	 in Method: boolean verifyDownloadedPackage(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #b8bfc7da292a6045e56f6f474a9337a706314696b5422ba3f3fadabff22c529)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r7 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b8bfc7da292a6045e56f6f474a9337a706314696b5422ba3f3fadabff22c529)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = staticinvoke <org.mozilla.gecko.updater.UpdateService: java.security.MessageDigest createMessageDigest(java.lang.String)>($r3)


Findings in Java Class: org.mozilla.gecko.browserid.DSACryptoImplementation

	 in Method: org.mozilla.gecko.browserid.BrowserIDKeyPair generateKeyPair(int)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #20858784f970837d9c367ca59ab3bd6be202b5957aa59aa3279f079bf5057f)
			First parameter (with value 1024) should be any of {2048}
			at statement: virtualinvoke $r2.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer13579)


Findings in Java Class: org.mozilla.gecko.kaito.activate.KAITOSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7584, r5, varReplacer7584)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7584, r5, varReplacer7584)


Findings in Java Class: org.mozilla.gecko.sync.net.BaseResource

	 in Method: ch.boye.httpclientandroidlib.conn.ClientConnectionManager getConnectionManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9411, varReplacer9411, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9411, varReplacer9411, $r3)


Findings in Java Class: ch.boye.httpclientandroidlib.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3367, varReplacer3367, varReplacer3367)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3367, varReplacer3367, varReplacer3367)


Findings in Java Class: org.mozilla.gecko.kaito.KAITOLoader

	 in Method: byte[] encrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer7892)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7890, $r2)


	 in Method: byte[] decrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer7477)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7468, $r3)


Findings in Java Class: jp.co.cec.module.serverAction.MySSLSocketFactory

	 in Method: void <init>(android.content.Context,java.security.KeyStore,java.lang.String,java.lang.String[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7977, r8, varReplacer7977)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7977, r8, varReplacer7977)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 30

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 12
	ConstraintError: 1
	TypestateError: 1
	IncompleteOperationError: 1
=====================================================================