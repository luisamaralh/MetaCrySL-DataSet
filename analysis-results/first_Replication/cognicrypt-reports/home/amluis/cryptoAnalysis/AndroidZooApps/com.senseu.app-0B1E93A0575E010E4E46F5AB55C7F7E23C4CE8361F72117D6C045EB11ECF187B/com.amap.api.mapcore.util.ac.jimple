public class com.amap.api.mapcore.util.ac extends java.lang.Object
{

    public void <init>()
    {
        com.amap.api.mapcore.util.ac $r0;

        $r0 := @this: com.amap.api.mapcore.util.ac;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String a()
    {
        int $i0, $i2, varReplacer5212;
        long $l1;
        java.lang.String $r0, $r2, varReplacer5209, varReplacer5210, varReplacer5211;
        java.lang.StringBuilder $r1;
        java.lang.Throwable $r3, $r4;

     label01:
        nop;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l1);

     label02:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

     label03:
        $i0 = $i2 + -2;

     label04:
        varReplacer5212 = 0;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(varReplacer5212, $i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer5211 = "1";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5211);

     label05:
        $i0 = $i2 + -1;

     label06:
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        return $r2;

     label08:
        $r3 := @caughtexception;

        $r0 = null;

     label09:
        varReplacer5209 = "CInfo";

        varReplacer5210 = "getTS";

        staticinvoke <com.amap.api.mapcore.util.ao: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r3, varReplacer5209, varReplacer5210);

        virtualinvoke $r3.<java.lang.Throwable: void printStackTrace()>();

        return $r0;

     label10:
        $r4 := @caughtexception;

        $r3 = $r4;

        goto label09;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public static java.lang.String a(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.StringBuilder $r1, $r2;
        java.lang.String $r3;
        java.lang.Throwable $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

     label1:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"key\":\"");

        $r3 = staticinvoke <com.amap.api.mapcore.util.aa: java.lang.String f(android.content.Context)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"platform\":\"android\",\"diu\":\"");

        $r3 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String n(android.content.Context)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"pkg\":\"");

        $r3 = staticinvoke <com.amap.api.mapcore.util.aa: java.lang.String b(android.content.Context)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"model\":\"");

        $r3 = <android.os.Build: java.lang.String MODEL>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"appname\":\"");

        $r3 = staticinvoke <com.amap.api.mapcore.util.aa: java.lang.String a(android.content.Context)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"appversion\":\"");

        $r3 = staticinvoke <com.amap.api.mapcore.util.aa: java.lang.String c(android.content.Context)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"sysversion\":\"");

        $r3 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",");

     label2:
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label3:
        $r4 := @caughtexception;

        staticinvoke <com.amap.api.mapcore.util.ao: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r4, "CInfo", "getPublicJSONInfo");

        virtualinvoke $r4.<java.lang.Throwable: void printStackTrace()>();

        goto label2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static java.lang.String a(android.content.Context, com.amap.api.mapcore.util.ah)
    {
        android.content.Context $r0;
        com.amap.api.mapcore.util.ah $r1;
        java.lang.StringBuilder $r2, $r4;
        java.lang.String $r3;
        int $i0;
        java.lang.Throwable $r5;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.amap.api.mapcore.util.ah;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

     label1:
        $r3 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String r(android.content.Context)>($r0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"sim\":\"");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"sdkversion\":\"");

        $r3 = $r1.<com.amap.api.mapcore.util.ah: java.lang.String a>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"product\":\"");

        $r3 = $r1.<com.amap.api.mapcore.util.ah: java.lang.String c>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"ed\":\"");

        $r3 = virtualinvoke $r1.<com.amap.api.mapcore.util.ah: java.lang.String d()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"nt\":\"");

        $i0 = staticinvoke <com.amap.api.mapcore.util.ad: int i(android.content.Context)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"np\":\"");

        $r3 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String q(android.content.Context)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"mnc\":\"");

        $r3 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String g(android.content.Context)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"ant\":\"");

        $i0 = staticinvoke <com.amap.api.mapcore.util.ad: int k(android.content.Context)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

     label2:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Throwable: void printStackTrace()>();

        goto label2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static java.lang.String a(android.content.Context, com.amap.api.mapcore.util.ah, java.util.Map)
    {
        android.content.Context $r0;
        com.amap.api.mapcore.util.ah $r1;
        java.util.Map $r2;
        java.lang.String $r3, $r4, varReplacer4991, varReplacer4995, varReplacer4996;
        boolean $z0;
        byte[] $r5;
        java.lang.Throwable $r6;
        java.io.UnsupportedEncodingException r7;
        null_type varReplacer4992, varReplacer4993, varReplacer4994;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.amap.api.mapcore.util.ah;

        $r2 := @parameter2: java.util.Map;

     label1:
        varReplacer4993 = null;

        $r3 = staticinvoke <com.amap.api.mapcore.util.ac: java.lang.String c(android.content.Context,com.amap.api.mapcore.util.ah,java.util.Map)>($r0, $r1, varReplacer4993);

     label2:
        $r4 = "";

     label3:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

     label4:
        if $z0 == 0 goto label5;

        varReplacer4994 = null;

        return varReplacer4994;

     label5:
        varReplacer4991 = "utf-8";

        $r5 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer4991);

        $r3 = staticinvoke <com.amap.api.mapcore.util.ac: java.lang.String b(android.content.Context,byte[])>($r0, $r5);

     label6:
        return $r3;

     label7:
        $r6 := @caughtexception;

        varReplacer4995 = "CInfo";

        varReplacer4996 = "rsaInfo";

        staticinvoke <com.amap.api.mapcore.util.ao: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r6, varReplacer4995, varReplacer4996);

        r7 = (java.io.UnsupportedEncodingException) $r6;

        virtualinvoke r7.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        varReplacer4992 = null;

        return varReplacer4992;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label7;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label7;
        catch java.io.UnsupportedEncodingException from label5 to label6 with label7;
    }

    public static java.lang.String a(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2, $r3, varReplacer5195, varReplacer5196, varReplacer5197, varReplacer5198;
        java.lang.StringBuilder $r4;
        int $i0, varReplacer5194;
        java.lang.Throwable $r5;
        null_type varReplacer5193;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

     label1:
        $r3 = staticinvoke <com.amap.api.mapcore.util.aa: java.lang.String d(android.content.Context)>($r0);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer5198 = ":";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5198);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

     label2:
        $i0 = $i0 + -3;

     label3:
        varReplacer5194 = 0;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(varReplacer5194, $i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer5195 = ":";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5195);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = staticinvoke <com.amap.api.mapcore.util.af: java.lang.String a(java.lang.String)>($r1);

     label4:
        return $r1;

     label5:
        $r5 := @caughtexception;

        varReplacer5196 = "CInfo";

        varReplacer5197 = "Scode";

        staticinvoke <com.amap.api.mapcore.util.ao: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r5, varReplacer5196, varReplacer5197);

        virtualinvoke $r5.<java.lang.Throwable: void printStackTrace()>();

        varReplacer5193 = null;

        return varReplacer5193;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static java.lang.String a(android.content.Context, byte[])
    {
        android.content.Context $r0;
        byte[] $r1;
        java.lang.String $r2;
        java.lang.Throwable $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.security.InvalidKeyException r12;
        java.security.NoSuchAlgorithmException r13;
        javax.crypto.NoSuchPaddingException r14;
        javax.crypto.IllegalBlockSizeException r15;
        javax.crypto.BadPaddingException r16;
        java.security.spec.InvalidKeySpecException r17;
        java.security.cert.CertificateException r18;
        java.io.IOException r19;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: byte[];

     label01:
        $r2 = staticinvoke <com.amap.api.mapcore.util.ac: java.lang.String c(android.content.Context,byte[])>($r0, $r1);

     label02:
        return $r2;

     label03:
        $r3 := @caughtexception;

        r12 = (java.security.InvalidKeyException) $r3;

        virtualinvoke r12.<java.security.InvalidKeyException: void printStackTrace()>();

     label04:
        return "";

     label05:
        $r4 := @caughtexception;

        r13 = (java.security.NoSuchAlgorithmException) $r4;

        virtualinvoke r13.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label04;

     label06:
        $r5 := @caughtexception;

        r14 = (javax.crypto.NoSuchPaddingException) $r5;

        virtualinvoke r14.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        goto label04;

     label07:
        $r6 := @caughtexception;

        r15 = (javax.crypto.IllegalBlockSizeException) $r6;

        virtualinvoke r15.<javax.crypto.IllegalBlockSizeException: void printStackTrace()>();

        goto label04;

     label08:
        $r7 := @caughtexception;

        r16 = (javax.crypto.BadPaddingException) $r7;

        virtualinvoke r16.<javax.crypto.BadPaddingException: void printStackTrace()>();

        goto label04;

     label09:
        $r8 := @caughtexception;

        r17 = (java.security.spec.InvalidKeySpecException) $r8;

        virtualinvoke r17.<java.security.spec.InvalidKeySpecException: void printStackTrace()>();

        goto label04;

     label10:
        $r9 := @caughtexception;

        r18 = (java.security.cert.CertificateException) $r9;

        virtualinvoke r18.<java.security.cert.CertificateException: void printStackTrace()>();

        goto label04;

     label11:
        $r10 := @caughtexception;

        r19 = (java.io.IOException) $r10;

        virtualinvoke r19.<java.io.IOException: void printStackTrace()>();

        goto label04;

     label12:
        $r11 := @caughtexception;

        virtualinvoke $r11.<java.lang.Throwable: void printStackTrace()>();

        goto label04;

        catch java.security.InvalidKeyException from label01 to label02 with label03;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label05;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label06;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label07;
        catch javax.crypto.BadPaddingException from label01 to label02 with label08;
        catch java.security.spec.InvalidKeySpecException from label01 to label02 with label09;
        catch java.security.cert.CertificateException from label01 to label02 with label10;
        catch java.io.IOException from label01 to label02 with label11;
        catch java.lang.Throwable from label01 to label02 with label12;
    }

    private static void a(java.io.ByteArrayOutputStream, byte, byte[])
    {
        java.io.ByteArrayOutputStream $r0;
        byte $b0;
        byte[] $r1, $r2;
        boolean $z0, $z1;
        short $s1;
        java.lang.Throwable $r3;
        java.io.IOException r4;
        int varReplacer5410, varReplacer5411;
        java.lang.String varReplacer5412, varReplacer5413;

        nop;

        $r0 := @parameter0: java.io.ByteArrayOutputStream;

        $b0 := @parameter1: byte;

        $r1 := @parameter2: byte[];

        $z0 = 1;

        $r2 = newarray (byte)[1];

        $r2[0] = $b0;

     label01:
        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r2);

     label02:
        if $b0 <= 0 goto label07;

        $z1 = 1;

     label03:
        $s1 = $b0 & 255;

        if $s1 >= 255 goto label08;

     label04:
        $z0 = $z0 & $z1;

        if $z0 == 0 goto label09;

     label05:
        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r1);

     label06:
        return;

     label07:
        $z1 = 0;

        goto label03;

     label08:
        $z0 = 0;

        goto label04;

     label09:
        $s1 = $b0 & 255;

        if $s1 != 255 goto label13;

     label10:
        varReplacer5410 = 0;

        varReplacer5411 = 255;

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, varReplacer5410, varReplacer5411);

     label11:
        return;

     label12:
        $r3 := @caughtexception;

        varReplacer5412 = "CInfo";

        varReplacer5413 = "writeField";

        staticinvoke <com.amap.api.mapcore.util.ao: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r3, varReplacer5412, varReplacer5413);

        r4 = (java.io.IOException) $r3;

        virtualinvoke r4.<java.io.IOException: void printStackTrace()>();

     label13:
        return;

        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label05 to label06 with label12;
        catch java.io.IOException from label10 to label11 with label12;
    }

    private static void a(java.io.ByteArrayOutputStream, java.lang.String)
    {
        java.io.ByteArrayOutputStream $r0;
        java.lang.String $r1, varReplacer5260;
        boolean $z0;
        byte[] $r2;
        int $i0, varReplacer5261;
        byte $b1;
        java.lang.Throwable $r3;

        nop;

        $r0 := @parameter0: java.io.ByteArrayOutputStream;

        $r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label5;

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $i0 = lengthof $r2;

        if $i0 <= 255 goto label3;

        $b1 = -1;

     label1:
        varReplacer5260 = "UTF-8";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5260);

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,byte,byte[])>($r0, $b1, $r2);

     label2:
        return;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $i0 = lengthof $r2;

        $b1 = (byte) $i0;

        goto label1;

     label4:
        $r3 := @caughtexception;

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,byte,byte[])>($r0, $b1, $r2);

        return;

     label5:
        $r2 = newarray (byte)[0];

        varReplacer5261 = 0;

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,byte,byte[])>($r0, varReplacer5261, $r2);

        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }

    public static java.lang.String b(android.content.Context, com.amap.api.mapcore.util.ah, java.util.Map)
    {
        android.content.Context $r0;
        com.amap.api.mapcore.util.ah $r1;
        java.util.Map $r2;
        java.io.ByteArrayOutputStream $r3;
        java.lang.String $r4, $r5, varReplacer5029, varReplacer5030, varReplacer5031, varReplacer5032, varReplacer5038, varReplacer5039, varReplacer5043, varReplacer5044, varReplacer5046;
        int $i0, varReplacer5033, varReplacer5034, varReplacer5035, varReplacer5036, varReplacer5037, varReplacer5040, varReplacer5041, varReplacer5042;
        java.lang.StringBuilder $r6;
        byte[] $r7, $r9, $r10;
        java.security.PublicKey $r8;
        java.lang.Throwable $r11;
        null_type varReplacer5045;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.amap.api.mapcore.util.ah;

        $r2 := @parameter2: java.util.Map;

     label01:
        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        $r4 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String n(android.content.Context)>($r0);

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, $r4);

        varReplacer5030 = "";

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, varReplacer5030);

        $r4 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String a(android.content.Context)>($r0);

     label02:
        $r5 = $r4;

        if $r4 != null goto label03;

        $r5 = "";

     label03:
        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, $r5);

        $r4 = staticinvoke <com.amap.api.mapcore.util.aa: java.lang.String b(android.content.Context)>($r0);

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, $r4);

        $r4 = <android.os.Build: java.lang.String MODEL>;

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, $r4);

        $r4 = <android.os.Build: java.lang.String MANUFACTURER>;

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, $r4);

        $r4 = <android.os.Build: java.lang.String DEVICE>;

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, $r4);

        $r4 = staticinvoke <com.amap.api.mapcore.util.aa: java.lang.String a(android.content.Context)>($r0);

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, $r4);

        $r4 = staticinvoke <com.amap.api.mapcore.util.aa: java.lang.String c(android.content.Context)>($r0);

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, $r4);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, $r4);

        $r4 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String o(android.content.Context)>($r0);

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, $r4);

        $r4 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String m(android.content.Context)>($r0);

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, $r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $i0 = staticinvoke <com.amap.api.mapcore.util.ad: int j(android.content.Context)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer5046 = "";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5046);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, $r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $i0 = staticinvoke <com.amap.api.mapcore.util.ad: int h(android.content.Context)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer5031 = "";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5031);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, $r4);

        $r4 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String p(android.content.Context)>($r0);

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, $r4);

        $r4 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String f(android.content.Context)>($r0);

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, $r4);

        varReplacer5029 = "";

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, varReplacer5029);

        varReplacer5032 = "";

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, varReplacer5032);

        varReplacer5038 = "";

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, varReplacer5038);

        varReplacer5039 = "";

        staticinvoke <com.amap.api.mapcore.util.ac: void a(java.io.ByteArrayOutputStream,java.lang.String)>($r3, varReplacer5039);

        $r7 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r7 = staticinvoke <com.amap.api.mapcore.util.ai: byte[] a(byte[])>($r7);

        $r8 = staticinvoke <com.amap.api.mapcore.util.ai: java.security.PublicKey a(android.content.Context)>($r0);

        $i0 = lengthof $r7;

     label04:
        if $i0 <= 117 goto label12;

     label05:
        $r9 = newarray (byte)[117];

        varReplacer5040 = 0;

        varReplacer5041 = 0;

        varReplacer5042 = 117;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, varReplacer5040, $r9, varReplacer5040, varReplacer5042);

        $r9 = staticinvoke <com.amap.api.mapcore.util.ae: byte[] a(byte[],java.security.Key)>($r9, $r8);

        $i0 = lengthof $r7;

     label06:
        $i0 = $i0 + 128;

        $i0 = $i0 + -117;

     label07:
        $r10 = newarray (byte)[$i0];

        varReplacer5035 = 0;

        varReplacer5036 = 0;

        varReplacer5037 = 128;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, varReplacer5035, $r10, varReplacer5035, varReplacer5037);

        $i0 = lengthof $r7;

     label08:
        $i0 = $i0 + -117;

     label09:
        varReplacer5033 = 117;

        varReplacer5034 = 128;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, varReplacer5033, $r10, varReplacer5034, $i0);

     label10:
        $r4 = staticinvoke <com.amap.api.mapcore.util.ae: java.lang.String a(byte[])>($r10);

     label11:
        return $r4;

     label12:
        $r7 = staticinvoke <com.amap.api.mapcore.util.ae: byte[] a(byte[],java.security.Key)>($r7, $r8);

     label13:
        $r10 = $r7;

        goto label10;

     label14:
        $r11 := @caughtexception;

        varReplacer5043 = "CInfo";

        varReplacer5044 = "InitXInfo";

        staticinvoke <com.amap.api.mapcore.util.ao: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r11, varReplacer5043, varReplacer5044);

        virtualinvoke $r11.<java.lang.Throwable: void printStackTrace()>();

        varReplacer5045 = null;

        return varReplacer5045;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public static java.lang.String b(android.content.Context, byte[])
    {
        android.content.Context $r0;
        byte[] $r1;
        java.lang.String $r2, varReplacer5169, varReplacer5170, varReplacer5171, varReplacer5172, varReplacer5173, varReplacer5174, varReplacer5175, varReplacer5176, varReplacer5177, varReplacer5178, varReplacer5179, varReplacer5180, varReplacer5181, varReplacer5182, varReplacer5183, varReplacer5184, varReplacer5185, varReplacer5186, varReplacer5187;
        java.lang.Throwable $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.security.InvalidKeyException r12;
        java.security.NoSuchAlgorithmException r13;
        javax.crypto.NoSuchPaddingException r14;
        javax.crypto.IllegalBlockSizeException r15;
        javax.crypto.BadPaddingException r16;
        java.security.spec.InvalidKeySpecException r17;
        java.security.cert.CertificateException r18;
        java.io.IOException r19;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: byte[];

     label01:
        $r2 = staticinvoke <com.amap.api.mapcore.util.ac: java.lang.String c(android.content.Context,byte[])>($r0, $r1);

     label02:
        return $r2;

     label03:
        $r3 := @caughtexception;

        varReplacer5173 = "CInfo";

        varReplacer5174 = "AESData";

        staticinvoke <com.amap.api.mapcore.util.ao: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r3, varReplacer5173, varReplacer5174);

        r12 = (java.security.InvalidKeyException) $r3;

        virtualinvoke r12.<java.security.InvalidKeyException: void printStackTrace()>();

     label04:
        varReplacer5177 = "";

        return varReplacer5177;

     label05:
        $r4 := @caughtexception;

        varReplacer5169 = "CInfo";

        varReplacer5170 = "AESData";

        staticinvoke <com.amap.api.mapcore.util.ao: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r4, varReplacer5169, varReplacer5170);

        r13 = (java.security.NoSuchAlgorithmException) $r4;

        virtualinvoke r13.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label04;

     label06:
        $r5 := @caughtexception;

        varReplacer5178 = "CInfo";

        varReplacer5179 = "AESData";

        staticinvoke <com.amap.api.mapcore.util.ao: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r5, varReplacer5178, varReplacer5179);

        r14 = (javax.crypto.NoSuchPaddingException) $r5;

        virtualinvoke r14.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        goto label04;

     label07:
        $r6 := @caughtexception;

        varReplacer5186 = "CInfo";

        varReplacer5187 = "AESData";

        staticinvoke <com.amap.api.mapcore.util.ao: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r6, varReplacer5186, varReplacer5187);

        r15 = (javax.crypto.IllegalBlockSizeException) $r6;

        virtualinvoke r15.<javax.crypto.IllegalBlockSizeException: void printStackTrace()>();

        goto label04;

     label08:
        $r7 := @caughtexception;

        varReplacer5175 = "CInfo";

        varReplacer5176 = "AESData";

        staticinvoke <com.amap.api.mapcore.util.ao: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r7, varReplacer5175, varReplacer5176);

        r16 = (javax.crypto.BadPaddingException) $r7;

        virtualinvoke r16.<javax.crypto.BadPaddingException: void printStackTrace()>();

        goto label04;

     label09:
        $r8 := @caughtexception;

        varReplacer5180 = "CInfo";

        varReplacer5181 = "AESData";

        staticinvoke <com.amap.api.mapcore.util.ao: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r8, varReplacer5180, varReplacer5181);

        r17 = (java.security.spec.InvalidKeySpecException) $r8;

        virtualinvoke r17.<java.security.spec.InvalidKeySpecException: void printStackTrace()>();

        goto label04;

     label10:
        $r9 := @caughtexception;

        varReplacer5182 = "CInfo";

        varReplacer5183 = "AESData";

        staticinvoke <com.amap.api.mapcore.util.ao: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r9, varReplacer5182, varReplacer5183);

        r18 = (java.security.cert.CertificateException) $r9;

        virtualinvoke r18.<java.security.cert.CertificateException: void printStackTrace()>();

        goto label04;

     label11:
        $r10 := @caughtexception;

        varReplacer5171 = "CInfo";

        varReplacer5172 = "AESData";

        staticinvoke <com.amap.api.mapcore.util.ao: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r10, varReplacer5171, varReplacer5172);

        r19 = (java.io.IOException) $r10;

        virtualinvoke r19.<java.io.IOException: void printStackTrace()>();

        goto label04;

     label12:
        $r11 := @caughtexception;

        varReplacer5184 = "CInfo";

        varReplacer5185 = "AESData";

        staticinvoke <com.amap.api.mapcore.util.ao: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r11, varReplacer5184, varReplacer5185);

        virtualinvoke $r11.<java.lang.Throwable: void printStackTrace()>();

        goto label04;

        catch java.security.InvalidKeyException from label01 to label02 with label03;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label05;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label06;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label07;
        catch javax.crypto.BadPaddingException from label01 to label02 with label08;
        catch java.security.spec.InvalidKeySpecException from label01 to label02 with label09;
        catch java.security.cert.CertificateException from label01 to label02 with label10;
        catch java.io.IOException from label01 to label02 with label11;
        catch java.lang.Throwable from label01 to label02 with label12;
    }

    private static java.lang.String c(android.content.Context, com.amap.api.mapcore.util.ah, java.util.Map)
    {
        android.content.Context $r0;
        com.amap.api.mapcore.util.ah $r1;
        java.util.Map $r2;
        java.lang.StringBuilder $r3, $r5;
        java.lang.String $r4, $r6, varReplacer5148, varReplacer5149, varReplacer5150, varReplacer5151, varReplacer5152, varReplacer5153, varReplacer5154, varReplacer5155, varReplacer5156, varReplacer5157, varReplacer5158, varReplacer5159, varReplacer5160, varReplacer5161, varReplacer5162, varReplacer5163, varReplacer5164, varReplacer5165, varReplacer5166, varReplacer5167, varReplacer5168;
        int $i0;
        boolean $z0;
        java.util.Set $r7;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        java.util.Map$Entry $r10;
        java.lang.Throwable $r11;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.amap.api.mapcore.util.ah;

        $r2 := @parameter2: java.util.Map;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

     label1:
        $r4 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String n(android.content.Context)>($r0);

        varReplacer5166 = "diu=";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5166);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer5161 = "&pkg=";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5161);

        $r4 = staticinvoke <com.amap.api.mapcore.util.aa: java.lang.String b(android.content.Context)>($r0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer5154 = "&model=";

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5154);

        $r4 = <android.os.Build: java.lang.String MODEL>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer5156 = "&manufacture=";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5156);

        $r4 = <android.os.Build: java.lang.String MANUFACTURER>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer5148 = "&device=";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5148);

        $r4 = <android.os.Build: java.lang.String DEVICE>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer5158 = "&appname=";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5158);

        $r4 = staticinvoke <com.amap.api.mapcore.util.aa: java.lang.String a(android.content.Context)>($r0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer5159 = "&appversion=";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5159);

        $r4 = staticinvoke <com.amap.api.mapcore.util.aa: java.lang.String c(android.content.Context)>($r0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer5167 = "&sysversion=";

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5167);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String o(android.content.Context)>($r0);

        varReplacer5165 = "&sim=";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5165);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer5157 = "&resolution=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5157);

        $r4 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String m(android.content.Context)>($r0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer5155 = "&mac=";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5155);

        $r4 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String d(android.content.Context)>($r0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer5162 = "&wifis=";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5162);

        $r4 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String c(android.content.Context)>($r0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer5150 = "&ant=";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5150);

        $i0 = staticinvoke <com.amap.api.mapcore.util.ad: int j(android.content.Context)>($r0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer5168 = "&nt=";

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5168);

        $i0 = staticinvoke <com.amap.api.mapcore.util.ad: int h(android.content.Context)>($r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String p(android.content.Context)>($r0);

        varReplacer5151 = "&np=";

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5151);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer5152 = "&mnc=";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5152);

        $r4 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String f(android.content.Context)>($r0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String b(android.content.Context)>($r0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

     label2:
        if $z0 != 0 goto label4;

     label3:
        varReplacer5153 = "&wifi=";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5153);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label4:
        $r6 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String a(android.content.Context)>($r0);

     label5:
        $r4 = $r6;

        if $r6 != null goto label6;

        $r4 = "";

     label6:
        varReplacer5149 = "&bts=";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5149);

        $r6 = staticinvoke <com.amap.api.mapcore.util.ad: java.lang.String e(android.content.Context)>($r0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer5160 = "&tid=";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5160);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label7:
        goto label9;

     label8:
        $r11 := @caughtexception;

        varReplacer5163 = "CInfo";

        varReplacer5164 = "InitXInfo";

        staticinvoke <com.amap.api.mapcore.util.ao: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r11, varReplacer5163, varReplacer5164);

        virtualinvoke $r11.<java.lang.Throwable: void printStackTrace()>();

     label9:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label8 with label8;
        catch java.lang.Throwable from label8 to label8 with label8;
    }

    private static java.lang.String c(android.content.Context, byte[]) throws java.security.InvalidKeyException, java.io.IOException, java.security.spec.InvalidKeySpecException, javax.crypto.NoSuchPaddingException, java.security.NoSuchAlgorithmException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException, java.security.cert.CertificateException
    {
        android.content.Context $r0;
        byte[] $r1, $r4, $r6;
        javax.crypto.KeyGenerator $r2;
        javax.crypto.SecretKey $r3;
        java.security.PublicKey $r5;
        int $i0, $i1, varReplacer5372, varReplacer5373, varReplacer5374, varReplacer5375;
        java.lang.String $r7, varReplacer5376, varReplacer5377;
        null_type varReplacer5371, varReplacer5378;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: byte[];

        varReplacer5376 = "AES";

        $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer5376);

        if $r2 != null goto label1;

        varReplacer5378 = null;

        return varReplacer5378;

     label1:
        varReplacer5373 = 256;

        virtualinvoke $r2.<javax.crypto.KeyGenerator: void init(int)>(varReplacer5373);

        $r3 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        $r4 = interfaceinvoke $r3.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $r5 = staticinvoke <com.amap.api.mapcore.util.ai: java.security.PublicKey a(android.content.Context)>($r0);

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.amap.api.mapcore.util.ae: byte[] a(byte[],java.security.Key)>($r4, $r5);

        $r1 = staticinvoke <com.amap.api.mapcore.util.ae: byte[] a(byte[],byte[])>($r4, $r1);

        $i0 = lengthof $r6;

        $i1 = lengthof $r1;

        $i0 = $i0 + $i1;

        $r4 = newarray (byte)[$i0];

        $i0 = lengthof $r6;

        varReplacer5374 = 0;

        varReplacer5375 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, varReplacer5374, $r4, varReplacer5374, $i0);

        $i0 = lengthof $r6;

        $i1 = lengthof $r1;

        varReplacer5372 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, varReplacer5372, $r4, $i0, $i1);

        $r1 = staticinvoke <com.amap.api.mapcore.util.ai: byte[] a(byte[])>($r4);

        if $r1 == null goto label2;

        $r7 = staticinvoke <com.amap.api.mapcore.util.ae: java.lang.String a(byte[])>($r1);

        return $r7;

     label2:
        varReplacer5377 = "";

        return varReplacer5377;

     label3:
        varReplacer5371 = null;

        return varReplacer5371;
    }
}
