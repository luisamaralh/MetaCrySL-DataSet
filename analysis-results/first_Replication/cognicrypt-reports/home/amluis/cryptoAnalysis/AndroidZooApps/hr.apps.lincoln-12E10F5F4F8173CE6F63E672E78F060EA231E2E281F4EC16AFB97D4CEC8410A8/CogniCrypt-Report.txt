Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.gimbal.internal.m.d: byte[] a(byte[])>
		SHA-256: 51e67e9ec953495842398a2a15d4d7b2c61b229f1223fcffef5346b9b6f1fd97
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKeyFactory
		Statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer1743)
		Method: <com.gimbal.internal.m.d: void <init>(java.lang.String,byte[])>
		SHA-256: fff0f0e08b01d5f90db777ddc35a5e9ed08a76ea1f04d6dd0d2e2ac56a65d1d2
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r2, varReplacer1744, varReplacer1745)
		Method: <com.gimbal.internal.m.d: void <init>(java.lang.String,byte[])>
		SHA-256: 624e1e4a2bc193e95df7f24123e468911a77637883c12a93ed952df588b1f65f
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.gimbal.internal.m.d: byte[] a(byte[])>
		SHA-256: f7db195736f7962fce72834f1155d207c348a01380c46947ec7a88293ba48df6
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: b1475ecb277cf44c18e504f1be84657ccb3a6b602605d56eb56e04862a5c2552
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4158)
		Method: <com.gimbal.internal.m.d: byte[] a(byte[])>
		SHA-256: 324262f344f14b8624ad76751652238286737e421055a32a1ca7e230789e5c49
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.gimbal.internal.m.d: byte[] b(byte[])>
		SHA-256: 3a85066c21ee2a87ec38f9dae3051537df3e9a41e72139f935c339c850d3d478
		Secure: false
	Object:
		Variable: varReplacer1745
		Type: int
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r2, varReplacer1744, varReplacer1745)
		Method: <com.gimbal.internal.m.d: void <init>(java.lang.String,byte[])>
		SHA-256: bb7671a50dff5018f22875111c6e0e8bd326a67643537180a2a7de8edacb0be6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer577)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: bad042bfc1a674454d3bd8d267878328b887261e80bc0b8bbed3e181d82f0ffd
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4172)
		Method: <com.gimbal.internal.m.d: byte[] b(byte[])>
		SHA-256: 37335ca085adb8784b580ef4155e9db9e65632a68f9cc2fda3c3e249e0b97e11
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.gimbal.internal.m.d: void <clinit>()>
		SHA-256: a4604c7cb17cbc1084e47188cd5ece0f413c76fee85600c8a352c904adf6769e
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.gimbal.internal.m.d: byte[] b(byte[])>
		SHA-256: 3ba6fdd149791e9f0fb3bc6c62813e1f63055790992633d3d5e6ca7b58d706a7
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.gimbal.internal.m.d: void <init>(java.lang.String,byte[])>
		SHA-256: 93fda837bed96ab6308e508f01f9aebbfaf2d8dda32b555c09374fcf7b97a366
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1742)
		Method: <com.gimbal.internal.m.d: void <init>(java.lang.String,byte[])>
		SHA-256: 36fba7f75d0e71f72e55e0ac25f240b7303a60e7c7240156f8eaa04f8541e85
		Secure: false
	Object:
		Variable: varReplacer1742
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1742)
		Method: <com.gimbal.internal.m.d: void <init>(java.lang.String,byte[])>
		SHA-256: 1ccd88473a3611b28c89b27bb71e60039df3df0adfc49da9a8bc7a913c111cc4
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.gimbal.internal.m.d: byte[] b(byte[])>
		SHA-256: 97626b534d4e2e5937631c4e2e0acd1720e70de0c12593ea7982fc325c0f07c7
		Secure: false

Findings in Java Class: com.gimbal.internal.m.d

	 in Method: void <init>(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1742)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #624e1e4a2bc193e95df7f24123e468911a77637883c12a93ed952df588b1f65f)
			Third parameter (with value 3)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r2, varReplacer1744, varReplacer1745)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r2, varReplacer1744, varReplacer1745)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #fff0f0e08b01d5f90db777ddc35a5e9ed08a76ea1f04d6dd0d2e2ac56a65d1d2)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer1743)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #624e1e4a2bc193e95df7f24123e468911a77637883c12a93ed952df588b1f65f)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r6 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4157, $r2, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4157, $r2, $r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #324262f344f14b8624ad76751652238286737e421055a32a1ca7e230789e5c49)
			First parameter (with value "AES/CFB/PKCS5Padding") should be any of AES/CFB/{NoPadding}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4158)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: byte[] b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4170, $r6, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #37335ca085adb8784b580ef4155e9db9e65632a68f9cc2fda3c3e249e0b97e11)
			First parameter (with value "AES/CFB/PKCS5Padding") should be any of AES/CFB/{NoPadding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4172)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 16

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 8
	IncompleteOperationError: 1
	ConstraintError: 4
=====================================================================