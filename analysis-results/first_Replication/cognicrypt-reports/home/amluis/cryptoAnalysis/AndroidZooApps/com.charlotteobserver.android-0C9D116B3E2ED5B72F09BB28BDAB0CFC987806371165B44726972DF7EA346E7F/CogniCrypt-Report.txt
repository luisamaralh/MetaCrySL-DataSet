Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5695)
		Method: <com.google.android.a.k: byte[] a(byte[],java.lang.String)>
		SHA-256: 4add490d4210a619936e50a49406db3c17d0e066e2f37db661ac1c1f95a7a9e4
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.logentries.misc.Utils: java.lang.String computeTraceID()>
		SHA-256: 5b4665c6672a152abf8c56945a55ecfb285964a6ebffe287c0c9371002ff24fb
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10223)
		Method: <com.google.android.gms.internal.zzpx: java.lang.String zzbb(java.lang.String)>
		SHA-256: 86e9182fbb4b087c794d81275200ad4b05545771ab808e3003a72703ff5c82cb
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.google.android.a.k: byte[] a(byte[],java.lang.String)>
		SHA-256: 381b6c0b08f9bb41c80aaf8352e36b19a0cccefef9ea8096ab27a9d8b595777b
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.a.k: byte[] a(byte[],java.lang.String)>
		SHA-256: 5a548ff0d8e7fcb654b0cdf7a677215974f829e5892f6b91aef0db23262ae0f5
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <com.google.android.a.d: java.lang.String a(byte[],java.lang.String)>
		SHA-256: c609b86a9d74f06408b9389aff10a462344d70fba277be7ce0854c1c7c76184
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzGs()>
		SHA-256: 92352f365af81b6cd93aec5685485ef79e11ee652b7e2f3af45cc5e33bb8d7b9
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2407)
		Method: <com.adobe.mobile.RemoteDownload: java.lang.String md5hash(java.lang.String)>
		SHA-256: 3e0ea022734145c4968f9e5de06f58c7162ad690603dfa727dbf7cfce9ea44df
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.a.k: byte[] a(byte[],java.lang.String)>
		SHA-256: 6e9cd9cf43705a69b8e41411c1e53bb9c2cf16ce8ca5091edda0bb3c71a11f68
		Secure: false
	Object:
		Variable: varReplacer5695
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5695)
		Method: <com.google.android.a.k: byte[] a(byte[],java.lang.String)>
		SHA-256: f91284507861579748c7e950229317be53df747540352e28bfd84b9444c7f5e1
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer4592)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzGs()>
		SHA-256: 3eedcdb475a8d7880cce24a314fa48ef12c5cc4c4167d302872776a8a0ec9860
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 4c7add4d41f06fa92bd57618e77b2df1a78eb8d44e5f363952002486d67608cc
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r12.<java.security.Signature: byte[] sign()>()
		Method: <com.pressplus.android.util.SignatureHelper: java.lang.String createSignature(java.util.ArrayList,java.lang.String,java.lang.String)>
		SHA-256: cdeea7601e3f48d2bcdd20c9541df0407a34e63c6148526ea0fadf7061e75243
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzpx: java.lang.String zzbb(java.lang.String)>
		SHA-256: 45c767ea96312812f59bb8e2ef20e2f02c69406384f892ab3dc1ac39d34a38b5
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5698)
		Method: <com.google.android.a.k: byte[] a(byte[],java.lang.String)>
		SHA-256: d9c4ec74f006a4f0d41bdc0deec260d8a3677be81cc58026c3df6576a6ec6cbf
		Secure: false
	Object:
		Variable: $r22
		Type: javax.net.ssl.SSLContext
		Statement: $r22 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6874)
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: 58e02a8e0f1a42a6f22829efc47b10f7ef66dede7ae45789101f88aba1651690
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.mcclatchyinteractive.miapp.utils.Helpers: java.lang.String generateMD5(java.lang.String)>
		SHA-256: 110ed53defffb11f19c40528bcd5d9eb3ca4998f4ec69026fe0baf2325334827
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.adobe.mobile.AnalyticsWorker: void <clinit>()>
		SHA-256: 2de2cf26ad51d5ef519d606a7af872a50cb4cb40c6bfbe18ad44b5d767efc275
		Secure: true
	Object:
		Variable: $r7
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r7 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer3626)
		Method: <com.mcclatchyinteractive.miapp.network.Volley: javax.net.ssl.SSLSocketFactory getSslSocketFactory()>
		SHA-256: 7acac01bae72f03d35844364161a6428d69921a52bbf9ad8879a35092f184840
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.adobe.mobile.RemoteDownload: java.lang.String md5hash(java.lang.String)>
		SHA-256: b400871c51be3079f17109b43e3f8ff50d0b7741ad987cb73c0d4089463be8a9
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1592)
		Method: <com.logentries.net.LogentriesClient: javax.net.ssl.SSLContext CreateAndInitSSLContext(java.lang.String)>
		SHA-256: bafa93187bd608b6a6cf7b85cdf74fcf0565a691abf356bbcb41eec1f81fbd2b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3623)
		Method: <com.mcclatchyinteractive.miapp.network.Volley: javax.net.ssl.SSLSocketFactory getSslSocketFactory()>
		SHA-256: c9c5cac25985b8bf8aa90faf747dae3400994432a9813ecba657918a6dc9886c
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8646)
		Method: <com.mcclatchyinteractive.miapp.utils.Helpers: java.lang.String generateMD5(java.lang.String)>
		SHA-256: fef4b79d50496b30ff88746654d92362befdd7c13f977ce75c247312ff550a1e
		Secure: true
	Object:
		Variable: $r9
		Type: javax.net.ssl.SSLContext
		Statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3620)
		Method: <com.mcclatchyinteractive.miapp.network.Volley: javax.net.ssl.SSLSocketFactory getSslSocketFactory()>
		SHA-256: 9b9260b543a0c4c753cc64a90df3366e313ae2a334790689d1a76314cf23eb40
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.KeyManager[]
		Statement: $r8 = virtualinvoke $r7.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.mcclatchyinteractive.miapp.network.Volley: javax.net.ssl.SSLSocketFactory getSslSocketFactory()>
		SHA-256: 6ecc1e4f7897a108f1991d3c718e9e790ac1e8fb297a18cdca988867747a071d
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10313)
		Method: <com.google.android.a.d: java.lang.String a(byte[],java.lang.String)>
		SHA-256: f8ae0ad7cf94d9f498875645abf1ca7eb5449ce6b06f3a5439298e6819f13816
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.adobe.mobile.StaticMethods: java.lang.String generateAID()>
		SHA-256: ea360b1b9ce6107091c0e5bf602385ba3876d2f680d102c3b122f256893d67f6
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.a.d: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 5b660fa7b6fa4d8a3cf07b4461206e23759ea3b41758246f43a440ec094b9619
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzeP(java.lang.String)>
		SHA-256: a53a10fcbcfb3290d3008d5842f3a3c3487fccb65b6ab868a632b08b7a6f832f
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1501)
		Method: <com.logentries.misc.Utils: java.lang.String computeTraceID()>
		SHA-256: 4d5ae678419a6107f4c7a281f871782e3bd97f5848ab627e23375d375d4647da
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.Signature
		Statement: $r12 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3729)
		Method: <com.pressplus.android.util.SignatureHelper: java.lang.String createSignature(java.util.ArrayList,java.lang.String,java.lang.String)>
		SHA-256: 2841021b0842f41db06f044e152bb430742962a22427646b9017525f9bbda0ef
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: f944777d9d8e89e0f8adf0af9c3ccd064733a31fa3f1e06304f27dc756cb592b
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4524)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: fc53112f7360a39107df755e76714a2c96be4c9fba3ceb5352ae9e34ad77d825
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.a.d: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 36130282a9769b3e8d8e5aeb1f6791c633024fbb45a099798936b62d4e58155a
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false

Findings in Java Class: com.mcclatchyinteractive.miapp.network.Volley

	 in Method: javax.net.ssl.SSLSocketFactory getSslSocketFactory()
		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #7acac01bae72f03d35844364161a6428d69921a52bbf9ad8879a35092f184840)
			First parameter (with value "X509") should be any of {PKIX}
			at statement: $r7 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer3626)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r8, varReplacer3621, varReplacer3621)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r8, varReplacer3621, varReplacer3621)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fc53112f7360a39107df755e76714a2c96be4c9fba3ceb5352ae9e34ad77d825)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4524)


Findings in Java Class: com.google.android.a.k

	 in Method: byte[] a(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5696, $r10, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5695)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)


Findings in Java Class: com.logentries.net.LogentriesClient

	 in Method: javax.net.ssl.SSLContext CreateAndInitSSLContext(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1593, r5, varReplacer1593)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1593, r5, varReplacer1593)


Findings in Java Class: com.pressplus.android.util.SignatureHelper

	 in Method: java.lang.String createSignature(java.util.ArrayList,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r12.<java.security.Signature: void initSign(java.security.PrivateKey)>($r13)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: void <init>(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6875, varReplacer6875, varReplacer6875)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6875, varReplacer6875, varReplacer6875)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 37

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 11
	ConstraintError: 3
=====================================================================