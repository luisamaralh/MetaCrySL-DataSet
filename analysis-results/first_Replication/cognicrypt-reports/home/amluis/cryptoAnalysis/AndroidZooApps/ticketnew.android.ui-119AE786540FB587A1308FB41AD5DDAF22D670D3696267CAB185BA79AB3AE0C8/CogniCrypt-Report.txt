Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer560)
		Method: <com.enstage.wibmo.a.b: void b(android.content.Context)>
		SHA-256: 51d255db1c0a4c5d1f265bc2c9f48695fd32bbfc1d582a78914c082a2a382f76
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8614)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] encrypt(byte[],byte[])>
		SHA-256: 1e7f82249ccb0ed2a47c02a8552589f6c2863e681dd1692345bb7bfc95ea5f78
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <ticketnew.android.user.c.a: byte[] a(byte[],byte[])>
		SHA-256: dfdfbc12720b58582472a369ee7126d2c89ffccd15b06b641717c7d7a71ba579
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer1713)
		Method: <com.ta.utdid2.device.UTUtdid: java.lang.String _calcHmac(byte[])>
		SHA-256: 4bbe10e62b566157122c19c80e9ede9bce3427c423f1af4240f0f6f1d5bcfd5f
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8612)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] encrypt(byte[],byte[])>
		SHA-256: ddf938917a135177de4a5023844c19f5d5837112f92487d5e923488ab2418186
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.ta.utdid2.device.UTUtdid: java.lang.String _calcHmac(byte[])>
		SHA-256: 946fbde51d1d82cb8c9c8781f208942a5bcd4b5dfbdfc60fd6e1c1748c1c327d
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1639)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] decrypt(byte[],byte[])>
		SHA-256: 2499debc69c79fc0100bc740b7318c47522870a9df56fcfa42b15522919e897b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer566)
		Method: <com.enstage.wibmo.a.f: javax.net.ssl.TrustManager[] a(android.content.Context,int,char[])>
		SHA-256: 76f7915c9c09c7ca2739bbaa535652b6152c176b2f51bfef40d144045a888a55
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] getRawKey(byte[])>
		SHA-256: 1db58a57f7a01ae5ed6db8971432ce4d5e0513bec07b11602533597e19488ccc
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2986)
		Method: <ticketnew.android.utils.m: java.lang.String a(java.lang.String)>
		SHA-256: fdda167890d84dae94b18d1e3037f445e0c83ad176f2b022358931623144de1e
		Secure: true
	Object:
		Variable: varReplacer1639
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1639)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] decrypt(byte[],byte[])>
		SHA-256: d60bc33a4902fa7c3a6006432fb9e51eceb0d6ad16bd4510e7556d47de35016
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <ticketnew.android.user.c.a: byte[] a(byte[],byte[])>
		SHA-256: 34aa3b6ee6c7ba7ca161fa3e216f9558d03e22fe0bd8369b62d3fa741d32e768
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.enstage.wibmo.a.b: void b(android.content.Context)>
		SHA-256: c6501d07500f0fdf920c34ff00601a378eca5229b37f22825e2d0ed88541ec8c
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] encrypt(byte[],byte[])>
		SHA-256: a61f0932c04ce188e6bb166225db66224e54563f8f737d09a20ff440584eb0f2
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <com.ta.utdid2.device.UTUtdid: java.lang.String _calcHmac(byte[])>
		SHA-256: c56b4a53962695dba6cf0be5933bafaaae5ee8490208939544c98c05b06de931
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6780)
		Method: <com.enstage.wibmo.a.e: void <clinit>()>
		SHA-256: 75981d0067d2aeefcec21bb4077f3a1f5dc122d35eff57507da0c6c64910fac3
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1644)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] getRawKey(byte[])>
		SHA-256: cae1330121f517982f64a3bd20b18ea54336a866497513122e65067e44ebc49e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1188)
		Method: <okhttp3.ah: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: ce28b2b62eec3791cae96a88617394502894bf5e07b9218a7d3d9ca3dd225f8c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] decrypt(byte[],byte[])>
		SHA-256: d4f75e7af8cb2b9beb9636be7f6c704b5761c6ad731b7764de675727d6a3d6ec
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] decrypt(byte[],byte[])>
		SHA-256: 6c7a05063baf69722bdf3472ac79dad7cd8cafa170f66aabf811c81773019fca
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1641)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] decrypt(byte[],byte[])>
		SHA-256: 32276042f7b7f1f3915c50b521fecbe32f9514795c467a7f7d556cd152874d79
		Secure: false
	Object:
		Variable: varReplacer8612
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8612)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] encrypt(byte[],byte[])>
		SHA-256: ee4ddc9b2b9f1550e74fc711a1900c68f4ef3d9e9a306f0b49869d77c79ba9d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1487)
		Method: <com.ut.mini.d.g: byte[] c(byte[])>
		SHA-256: 146ded7811b7c468cf59f2d2913e37c27aa58bc577a199b0d42ff4783c115d40
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2990)
		Method: <ticketnew.android.user.c.a: byte[] a(byte[],byte[])>
		SHA-256: c3dcebd28a12b4d0bdd1d702c7f18dc060b8617372d712ee28f11e799f8f0c64
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2989)
		Method: <ticketnew.android.user.c.a: byte[] a(byte[],byte[])>
		SHA-256: 94d31ac7decefb7b19b82f017ca4e06bb6f0df5cdba4291034ebdf3769b69450
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6782)
		Method: <com.enstage.wibmo.a.e: void <clinit>()>
		SHA-256: 3e637bee87f5261edbdc832d9157df1fe47fe4df78476b7771246171d9cafd83
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <ticketnew.android.utils.m: java.lang.String a(java.lang.String)>
		SHA-256: cf8ef25d33ed5c061510309f582ea33d9d6609c1a9bff42513f560ba929c1012
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.ut.mini.d.g: byte[] c(byte[])>
		SHA-256: 3739b25702c94a437ce251ba23d4b13d5e628a4a1a86afdc9be9f2f771c33cc3
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] encrypt(byte[],byte[])>
		SHA-256: 59be999f21a029ef6241871ee4fdbde55aeef24a975cd5a53fdf342a502d8a66
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer1645, varReplacer1646)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] getRawKey(byte[])>
		SHA-256: 22873e6b1c1eb37832e0bb135ead4c3bc5bd40f5633007ec0c7a9b7beb1ed441
		Secure: true
	Object:
		Variable: varReplacer2990
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2990)
		Method: <ticketnew.android.user.c.a: byte[] a(byte[],byte[])>
		SHA-256: 4a940786e8a6093d4d37180e07faa1021859dc9ccbeaed07041c07b56f153dc7
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] encrypt(byte[],byte[])>
		SHA-256: c50c863f2ff909afe1b58e13fcfc3a87e89f420204d1c66094d663a6b251de35
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <com.ta.utdid2.device.UTUtdid: java.lang.String _calcHmac(byte[])>
		SHA-256: 1d15918481c23eaf8ad67f8473cd6270be855d0ac1ee537eaa95c40028eb8f0e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] decrypt(byte[],byte[])>
		SHA-256: 7fdf9633958e5a79b855419b02fe2d5e9240f88364219bd86d94ab52959500f1
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.appevents.AppEvent: java.lang.String b(java.lang.String)>
		SHA-256: ea03a75498369af5fe39c3d1902858e1eebcf903810e12b2ec0be1685c24270c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6481)
		Method: <com.facebook.appevents.AppEvent: java.lang.String b(java.lang.String)>
		SHA-256: 740ae67d957e10cd9e7757cb4f691b5324c00f79c513ae20de7abf6cebfefe86
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <ticketnew.android.user.c.a: byte[] a(byte[],byte[])>
		SHA-256: 4ff8afa2916954f9a0d986129d899a15493555d793f466f2b9548afac2d34340
		Secure: false

Findings in Java Class: com.enstage.wibmo.a.b

	 in Method: void b(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r1, $r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r1, $r2)


Findings in Java Class: com.ta.utdid2.android.utils.AESUtils

	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1640, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1639)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)


	 in Method: byte[] encrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8613, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8613, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8612)


	 in Method: byte[] getRawKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer1643, $r2)


Findings in Java Class: ticketnew.android.user.c.a

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2990)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2988, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)


Findings in Java Class: com.ta.utdid2.device.UTUtdid

	 in Method: java.lang.String _calcHmac(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)


Findings in Java Class: okhttp3.ah

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1186, r7, varReplacer1186)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1186, r7, varReplacer1186)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 37

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 16
=====================================================================