public class com.wisesharksoftware.billing.Security extends java.lang.Object
{
    private static final java.lang.String KEY_FACTORY_ALGORITHM;
    private static final java.security.SecureRandom RANDOM;
    private static final java.lang.String SIGNATURE_ALGORITHM;
    private static final java.lang.String TAG;
    private static java.util.HashSet sKnownNonces;

    static void <clinit>()
    {
        java.security.SecureRandom $r0;
        java.util.HashSet $r1;

        nop;

        $r0 = new java.security.SecureRandom;

        specialinvoke $r0.<java.security.SecureRandom: void <init>()>();

        <com.wisesharksoftware.billing.Security: java.security.SecureRandom RANDOM> = $r0;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        <com.wisesharksoftware.billing.Security: java.util.HashSet sKnownNonces> = $r1;

        return;
    }

    public void <init>()
    {
        com.wisesharksoftware.billing.Security $r0;

        $r0 := @this: com.wisesharksoftware.billing.Security;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static long generateNonce()
    {
        java.security.SecureRandom $r0;
        long $l0;
        java.util.HashSet $r1;
        java.lang.Long $r2;

        nop;

        $r0 = <com.wisesharksoftware.billing.Security: java.security.SecureRandom RANDOM>;

        $l0 = virtualinvoke $r0.<java.security.SecureRandom: long nextLong()>();

        $r1 = <com.wisesharksoftware.billing.Security: java.util.HashSet sKnownNonces>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r1.<java.util.HashSet: boolean add(java.lang.Object)>($r2);

        return $l0;
    }

    public static java.security.PublicKey generatePublicKey(java.lang.String)
    {
        java.lang.String $r0, varReplacer2985, varReplacer2986, varReplacer2987, varReplacer2988, varReplacer2989;
        byte[] $r1;
        java.security.KeyFactory $r2;
        java.security.spec.X509EncodedKeySpec $r3;
        java.security.PublicKey $r4;
        java.lang.Throwable $r5, $r7;
        java.lang.RuntimeException $r6;
        java.lang.IllegalArgumentException $r8;
        com.wisesharksoftware.billing.util.Base64DecoderException $r9;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <com.wisesharksoftware.billing.util.Base64: byte[] decode(java.lang.String)>($r0);

        varReplacer2989 = "RSA";

        $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer2989);

     label2:
        $r3 = new java.security.spec.X509EncodedKeySpec;

     label3:
        specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1);

        $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3);

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label6:
        $r7 := @caughtexception;

        varReplacer2987 = "Security";

        varReplacer2988 = "Invalid key specification.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2987, varReplacer2988);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label7:
        $r9 := @caughtexception;

        varReplacer2985 = "Security";

        varReplacer2986 = "Base64 decoding failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2985, varReplacer2986);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r9);

        throw $r8;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label6;
        catch java.security.spec.InvalidKeySpecException from label3 to label4 with label6;
        catch com.wisesharksoftware.billing.util.Base64DecoderException from label1 to label2 with label7;
        catch com.wisesharksoftware.billing.util.Base64DecoderException from label3 to label4 with label7;
    }

    public static boolean isNonceKnown(long)
    {
        long $l0;
        java.util.HashSet $r0;
        java.lang.Long $r1;
        boolean $z0;

        nop;

        $l0 := @parameter0: long;

        $r0 = <com.wisesharksoftware.billing.Security: java.util.HashSet sKnownNonces>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $z0 = virtualinvoke $r0.<java.util.HashSet: boolean contains(java.lang.Object)>($r1);

        return $z0;
    }

    public static void removeNonce(long)
    {
        long $l0;
        java.util.HashSet $r0;
        java.lang.Long $r1;

        nop;

        $l0 := @parameter0: long;

        $r0 = <com.wisesharksoftware.billing.Security: java.util.HashSet sKnownNonces>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r0.<java.util.HashSet: boolean remove(java.lang.Object)>($r1);

        return;
    }

    public static boolean verify(java.security.PublicKey, java.lang.String, java.lang.String)
    {
        java.security.PublicKey $r0;
        java.lang.String $r1, $r2, varReplacer2968, varReplacer2969, varReplacer2972, varReplacer2973, varReplacer2976, varReplacer2977, varReplacer2979, varReplacer2980, varReplacer2981, varReplacer2982, varReplacer2984;
        java.security.Signature $r3;
        byte[] $r4;
        boolean $z0;
        java.lang.Throwable $r5, $r6, $r7;
        com.wisesharksoftware.billing.util.Base64DecoderException $r8;
        int varReplacer2970, varReplacer2971, varReplacer2974, varReplacer2975, varReplacer2978, varReplacer2983;

        nop;

        $r0 := @parameter0: java.security.PublicKey;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

     label1:
        varReplacer2984 = "SHA1withRSA";

        $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer2984);

        virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0);

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.Signature: void update(byte[])>($r4);

        $r4 = staticinvoke <com.wisesharksoftware.billing.util.Base64: byte[] decode(java.lang.String)>($r2);

        $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4);

     label2:
        if $z0 != 0 goto label5;

     label3:
        varReplacer2981 = "Security";

        varReplacer2982 = "Signature verification failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2981, varReplacer2982);

     label4:
        varReplacer2983 = 0;

        return varReplacer2983;

     label5:
        varReplacer2974 = 1;

        return varReplacer2974;

     label6:
        $r5 := @caughtexception;

        varReplacer2968 = "Security";

        varReplacer2969 = "NoSuchAlgorithmException.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2968, varReplacer2969);

        varReplacer2971 = 0;

        return varReplacer2971;

     label7:
        $r6 := @caughtexception;

        varReplacer2972 = "Security";

        varReplacer2973 = "Invalid key specification.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2972, varReplacer2973);

        varReplacer2975 = 0;

        return varReplacer2975;

     label8:
        $r7 := @caughtexception;

        varReplacer2979 = "Security";

        varReplacer2980 = "Signature exception.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2979, varReplacer2980);

        varReplacer2970 = 0;

        return varReplacer2970;

     label9:
        $r8 := @caughtexception;

        varReplacer2976 = "Security";

        varReplacer2977 = "Base64 decoding failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2976, varReplacer2977);

        varReplacer2978 = 0;

        return varReplacer2978;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label6;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label6;
        catch java.security.InvalidKeyException from label1 to label2 with label7;
        catch java.security.InvalidKeyException from label3 to label4 with label7;
        catch java.security.SignatureException from label1 to label2 with label8;
        catch java.security.SignatureException from label3 to label4 with label8;
        catch com.wisesharksoftware.billing.util.Base64DecoderException from label1 to label2 with label9;
        catch com.wisesharksoftware.billing.util.Base64DecoderException from label3 to label4 with label9;
    }

    public static java.util.ArrayList verifyPurchase(android.content.Context, java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2, $r3, $r6, varReplacer2934, varReplacer2935, varReplacer2936, varReplacer2937, varReplacer2938, varReplacer2939, varReplacer2940, varReplacer2941, varReplacer2942, varReplacer2943, varReplacer2944, varReplacer2945, varReplacer2947, varReplacer2948, varReplacer2949, varReplacer2950, varReplacer2952, varReplacer2955, varReplacer2957, varReplacer2959;
        org.json.JSONObject $r4;
        boolean $z0;
        android.content.res.Resources $r5;
        int $i0, $i2, $i3;
        java.security.PublicKey $r7;
        long $l1, $l4;
        org.json.JSONArray $r8;
        java.lang.StringBuilder $r9;
        org.json.JSONException $r10, $r14;
        java.util.ArrayList $r11;
        com.wisesharksoftware.billing.Consts$PurchaseState $r12;
        com.wisesharksoftware.billing.Security$VerifiedPurchase $r13;
        null_type varReplacer2946, varReplacer2951, varReplacer2953, varReplacer2954, varReplacer2956, varReplacer2958;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        if $r1 != null goto label01;

        varReplacer2938 = "Security";

        varReplacer2939 = "data is null";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2938, varReplacer2939);

        varReplacer2954 = null;

        return varReplacer2954;

     label01:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label03;

        $r5 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer2942 = "security_key";

        varReplacer2943 = "string";

        $i0 = virtualinvoke $r5.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>(varReplacer2942, varReplacer2943, $r6);

        $r5 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        if $r3 == null goto label02;

        $r6 = $r3;

     label02:
        $r7 = staticinvoke <com.wisesharksoftware.billing.Security: java.security.PublicKey generatePublicKey(java.lang.String)>($r6);

        $z0 = staticinvoke <com.wisesharksoftware.billing.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>($r7, $r1, $r2);

        if $z0 != 0 goto label03;

        varReplacer2936 = "Security";

        varReplacer2937 = "signature does not match data.";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer2936, varReplacer2937);

        varReplacer2951 = null;

        return varReplacer2951;

     label03:
        $i0 = 0;

        $r4 = new org.json.JSONObject;

     label04:
        specialinvoke $r4.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

        varReplacer2941 = "nonce";

        $l1 = virtualinvoke $r4.<org.json.JSONObject: long optLong(java.lang.String)>(varReplacer2941);

        varReplacer2959 = "orders";

        $r8 = virtualinvoke $r4.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>(varReplacer2959);

     label05:
        if $r8 == null goto label07;

     label06:
        $i0 = virtualinvoke $r8.<org.json.JSONArray: int length()>();

     label07:
        $z0 = staticinvoke <com.wisesharksoftware.billing.Security: boolean isNonceKnown(long)>($l1);

        if $z0 != 0 goto label09;

        $r9 = new java.lang.StringBuilder;

        varReplacer2934 = "Nonce not found: ";

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2934);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2957 = "Security";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer2957, $r1);

        varReplacer2953 = null;

        return varReplacer2953;

     label08:
        $r10 := @caughtexception;

        varReplacer2958 = null;

        return varReplacer2958;

     label09:
        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        $i2 = 0;

     label10:
        if $i2 < $i0 goto label11;

        staticinvoke <com.wisesharksoftware.billing.Security: void removeNonce(long)>($l1);

        return $r11;

     label11:
        $r4 = virtualinvoke $r8.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i2);

        varReplacer2944 = "purchaseState";

        $i3 = virtualinvoke $r4.<org.json.JSONObject: int getInt(java.lang.String)>(varReplacer2944);

        $r12 = staticinvoke <com.wisesharksoftware.billing.Consts$PurchaseState: com.wisesharksoftware.billing.Consts$PurchaseState valueOf(int)>($i3);

        varReplacer2945 = "productId";

        $r1 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer2945);

        varReplacer2940 = "purchaseTime";

        $l4 = virtualinvoke $r4.<org.json.JSONObject: long getLong(java.lang.String)>(varReplacer2940);

        varReplacer2947 = "orderId";

        varReplacer2948 = "";

        $r2 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>(varReplacer2947, varReplacer2948);

     label12:
        $r3 = null;

     label13:
        varReplacer2935 = "notificationId";

        $z0 = virtualinvoke $r4.<org.json.JSONObject: boolean has(java.lang.String)>(varReplacer2935);

     label14:
        if $z0 == 0 goto label16;

     label15:
        varReplacer2952 = "notificationId";

        $r3 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer2952);

     label16:
        varReplacer2955 = "developerPayload";

        varReplacer2956 = null;

        $r6 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>(varReplacer2955, varReplacer2956);

     label17:
        $r13 = new com.wisesharksoftware.billing.Security$VerifiedPurchase;

     label18:
        specialinvoke $r13.<com.wisesharksoftware.billing.Security$VerifiedPurchase: void <init>(com.wisesharksoftware.billing.Consts$PurchaseState,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String)>($r12, $r3, $r1, $r2, $l4, $r6);

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label19:
        $i2 = $i2 + 1;

        goto label10;

     label20:
        $r14 := @caughtexception;

        varReplacer2949 = "Security";

        varReplacer2950 = "JSON exception: ";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2949, varReplacer2950, $r14);

        varReplacer2946 = null;

        return varReplacer2946;

        catch org.json.JSONException from label04 to label05 with label08;
        catch org.json.JSONException from label06 to label07 with label08;
        catch org.json.JSONException from label11 to label12 with label20;
        catch org.json.JSONException from label13 to label14 with label20;
        catch org.json.JSONException from label15 to label16 with label20;
        catch org.json.JSONException from label16 to label17 with label20;
        catch org.json.JSONException from label18 to label19 with label20;
    }
}
