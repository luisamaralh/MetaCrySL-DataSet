public class com.men.Shell.ShellUtil.c extends java.lang.Object
{

    public static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0, varReplacer115;
        byte[] $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        varReplacer115 = "asdfwef5";

        $r0 = staticinvoke <com.men.Shell.ShellUtil.c: java.lang.String a(java.lang.String,byte[])>(varReplacer115, $r1);

        return $r0;
    }

    public static java.lang.String a(java.lang.String, byte[])
    {
        java.lang.String $r0, varReplacer121, varReplacer122;
        byte[] $r1, $r3;
        javax.crypto.spec.DESKeySpec $r2;
        javax.crypto.SecretKeyFactory $r4;
        javax.crypto.SecretKey $r5;
        javax.crypto.Cipher $r6;
        javax.crypto.spec.IvParameterSpec $r7;
        java.lang.Exception $r8, $r9;
        int varReplacer119, varReplacer120;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 = new javax.crypto.spec.DESKeySpec;

     label1:
        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r2.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r3);

        varReplacer122 = "DES";

        $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer122);

        $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2);

        varReplacer121 = "DES/CBC/PKCS5Padding";

        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer121);

     label2:
        $r7 = new javax.crypto.spec.IvParameterSpec;

     label3:
        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3);

        varReplacer119 = 1;

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer119, $r5, $r7);

        $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label4:
        $r0 = new java.lang.String;

     label5:
        varReplacer120 = 0;

        $r1 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>($r1, varReplacer120);

        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r1);

     label6:
        return $r0;

     label7:
        $r8 := @caughtexception;

        $r9 = new java.lang.Exception;

        specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static java.lang.String b(java.lang.String)
    {
        java.lang.String $r0, varReplacer3756, varReplacer3757;
        byte[] $r1;
        java.lang.Exception $r2;
        int varReplacer3758;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        varReplacer3758 = 0;

        $r1 = staticinvoke <android.util.Base64: byte[] decode(byte[],int)>($r1, varReplacer3758);

        varReplacer3757 = "asdfwef5";

        $r1 = staticinvoke <com.men.Shell.ShellUtil.c: byte[] b(java.lang.String,byte[])>(varReplacer3757, $r1);

     label2:
        $r0 = new java.lang.String;

     label3:
        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r1);

     label4:
        return $r0;

     label5:
        $r2 := @caughtexception;

        varReplacer3756 = "";

        return varReplacer3756;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static byte[] b(java.lang.String, byte[])
    {
        java.lang.String $r0, varReplacer3804, varReplacer3805;
        byte[] $r1, $r5;
        javax.crypto.spec.IvParameterSpec $r2;
        java.security.SecureRandom $r3;
        javax.crypto.spec.DESKeySpec $r4;
        javax.crypto.SecretKeyFactory $r6;
        javax.crypto.SecretKey $r7;
        javax.crypto.Cipher $r8;
        java.lang.Exception $r9, $r10;
        int varReplacer3806;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r3 = new java.security.SecureRandom;

     label1:
        specialinvoke $r3.<java.security.SecureRandom: void <init>()>();

     label2:
        $r4 = new javax.crypto.spec.DESKeySpec;

     label3:
        $r5 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r4.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r5);

        varReplacer3805 = "DES";

        $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3805);

        $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4);

        varReplacer3804 = "DES/CBC/PKCS5Padding";

        $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3804);

     label4:
        $r2 = new javax.crypto.spec.IvParameterSpec;

     label5:
        $r5 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5);

        varReplacer3806 = 2;

        virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3806, $r7, $r2);

        $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label6:
        return $r1;

     label7:
        $r9 := @caughtexception;

        $r10 = new java.lang.Exception;

        specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }
}
