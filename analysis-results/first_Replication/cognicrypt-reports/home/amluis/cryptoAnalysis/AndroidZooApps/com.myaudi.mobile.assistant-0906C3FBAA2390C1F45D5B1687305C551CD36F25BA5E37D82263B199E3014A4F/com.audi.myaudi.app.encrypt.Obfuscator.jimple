public class com.audi.myaudi.app.encrypt.Obfuscator extends java.lang.Object
{
    private static final java.lang.String CIPHER_ALGORITHM;
    private static final java.lang.String KEY_GENERATOR_ALGORITHM;
    private static final int KEY_LENGTH;
    private static final java.lang.String PREFERENCE_FILE_NAME;
    private static final java.lang.String PREFERENCE_KEY;
    private static javax.crypto.spec.SecretKeySpec secretKeySpec;

    public void <init>()
    {
        com.audi.myaudi.app.encrypt.Obfuscator $r0;

        $r0 := @this: com.audi.myaudi.app.encrypt.Obfuscator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static byte[] deobfuscate(android.content.Context, byte[]) throws com.audi.myaudi.app.encrypt.Obfuscator$DeobfuscationFailedException
    {
        android.content.Context $r0;
        byte[] $r1;
        javax.crypto.Cipher $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        java.lang.Throwable $r4;
        com.audi.myaudi.app.encrypt.Obfuscator$DeobfuscationFailedException $r5;
        int varReplacer20686;
        java.lang.String varReplacer20687;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: byte[];

     label1:
        varReplacer20687 = "AES";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer20687);

        $r3 = staticinvoke <com.audi.myaudi.app.encrypt.Obfuscator: javax.crypto.spec.SecretKeySpec getSecretKey(android.content.Context)>($r0);

        varReplacer20686 = 2;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer20686, $r3);

        $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

     label4:
        $r5 = new com.audi.myaudi.app.encrypt.Obfuscator$DeobfuscationFailedException;

        specialinvoke $r5.<com.audi.myaudi.app.encrypt.Obfuscator$DeobfuscationFailedException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label5:
        $r4 := @caughtexception;

        goto label4;

     label6:
        $r4 := @caughtexception;

        goto label4;

     label7:
        $r4 := @caughtexception;

        goto label4;

     label8:
        $r4 := @caughtexception;

        goto label4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.InvalidKeyException from label1 to label2 with label7;
        catch javax.crypto.BadPaddingException from label1 to label2 with label3;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label6;
        catch javax.crypto.IllegalBlockSizeException from label1 to label2 with label8;
    }

    public static java.lang.String deobfuscateString(android.content.Context, java.lang.String) throws com.audi.myaudi.app.encrypt.Obfuscator$DeobfuscationFailedException
    {
        android.content.Context $r0;
        java.lang.String $r1, varReplacer20684;
        java.lang.Throwable $r2;
        byte[] $r3;
        com.audi.myaudi.app.encrypt.Obfuscator$DeobfuscationFailedException $r4;
        int varReplacer20685;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

     label1:
        varReplacer20685 = 2;

        $r3 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r1, varReplacer20685);

     label2:
        $r1 = new java.lang.String;

     label3:
        $r3 = staticinvoke <com.audi.myaudi.app.encrypt.Obfuscator: byte[] deobfuscate(android.content.Context,byte[])>($r0, $r3);

        varReplacer20684 = "UTF-8";

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, varReplacer20684);

     label4:
        return $r1;

     label5:
        $r2 := @caughtexception;

        $r4 = new com.audi.myaudi.app.encrypt.Obfuscator$DeobfuscationFailedException;

        specialinvoke $r4.<com.audi.myaudi.app.encrypt.Obfuscator$DeobfuscationFailedException: void <init>(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label5;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }

    private static javax.crypto.SecretKey generateKey() throws java.security.NoSuchAlgorithmException
    {
        java.security.SecureRandom $r0;
        javax.crypto.KeyGenerator $r1;
        javax.crypto.SecretKey $r2;
        java.lang.String varReplacer7065;
        int varReplacer7066;

        nop;

        $r0 = new java.security.SecureRandom;

        specialinvoke $r0.<java.security.SecureRandom: void <init>()>();

        varReplacer7065 = "AES";

        $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer7065);

        varReplacer7066 = 256;

        virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer7066, $r0);

        $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        return $r2;
    }

    private static javax.crypto.spec.SecretKeySpec getSecretKey(android.content.Context) throws java.security.NoSuchAlgorithmException
    {
        android.content.Context $r0;
        javax.crypto.spec.SecretKeySpec $r1;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.audi.myaudi.app.encrypt.Obfuscator: javax.crypto.spec.SecretKeySpec secretKeySpec>;

        if $r1 != null goto label1;

        $r1 = staticinvoke <com.audi.myaudi.app.encrypt.Obfuscator: javax.crypto.spec.SecretKeySpec loadSecretKey(android.content.Context)>($r0);

        <com.audi.myaudi.app.encrypt.Obfuscator: javax.crypto.spec.SecretKeySpec secretKeySpec> = $r1;

     label1:
        $r1 = <com.audi.myaudi.app.encrypt.Obfuscator: javax.crypto.spec.SecretKeySpec secretKeySpec>;

        return $r1;
    }

    private static javax.crypto.spec.SecretKeySpec loadSecretKey(android.content.Context) throws java.security.NoSuchAlgorithmException
    {
        android.content.Context $r0;
        android.content.SharedPreferences $r1;
        java.lang.String $r2, varReplacer7057, varReplacer7058, varReplacer7059, varReplacer7061;
        byte[] $r3, $r6;
        javax.crypto.spec.SecretKeySpec $r4;
        javax.crypto.SecretKey $r5;
        android.content.SharedPreferences$Editor $r7;
        java.lang.Throwable $r8;
        null_type varReplacer7060;
        int varReplacer7062, varReplacer7063, varReplacer7064;

        nop;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/audi/myaudi/app/encrypt/Obfuscator;";

     label1:
        varReplacer7061 = "key";

        varReplacer7062 = 0;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>(varReplacer7061, varReplacer7062);

        varReplacer7059 = "rawkey";

        varReplacer7060 = null;

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(varReplacer7059, varReplacer7060);

        if $r2 == null goto label4;

        varReplacer7063 = 2;

        $r3 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r2, varReplacer7063);

     label2:
        $r4 = new javax.crypto.spec.SecretKeySpec;

        varReplacer7057 = "AES";

        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer7057);

     label3:
        exitmonitor class "Lcom/audi/myaudi/app/encrypt/Obfuscator;";

        return $r4;

     label4:
        $r5 = staticinvoke <com.audi.myaudi.app.encrypt.Obfuscator: javax.crypto.SecretKey generateKey()>();

        $r6 = interfaceinvoke $r5.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $r3 = $r6;

        $r7 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        varReplacer7064 = 2;

        $r2 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r6, varReplacer7064);

        varReplacer7058 = "rawkey";

        interfaceinvoke $r7.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>(varReplacer7058, $r2);

        interfaceinvoke $r7.<android.content.SharedPreferences$Editor: void apply()>();

     label5:
        goto label2;

     label6:
        $r8 := @caughtexception;

        exitmonitor class "Lcom/audi/myaudi/app/encrypt/Obfuscator;";

        throw $r8;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private static byte[] obfuscate(android.content.Context, byte[]) throws com.audi.myaudi.app.encrypt.Obfuscator$ObfuscationFailedException
    {
        android.content.Context $r0;
        byte[] $r1;
        javax.crypto.Cipher $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        java.lang.Throwable $r4;
        com.audi.myaudi.app.encrypt.Obfuscator$ObfuscationFailedException $r5;
        int varReplacer7055;
        java.lang.String varReplacer7056;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: byte[];

     label1:
        varReplacer7056 = "AES";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7056);

        $r3 = staticinvoke <com.audi.myaudi.app.encrypt.Obfuscator: javax.crypto.spec.SecretKeySpec getSecretKey(android.content.Context)>($r0);

        varReplacer7055 = 1;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7055, $r3);

        $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

     label4:
        $r5 = new com.audi.myaudi.app.encrypt.Obfuscator$ObfuscationFailedException;

        specialinvoke $r5.<com.audi.myaudi.app.encrypt.Obfuscator$ObfuscationFailedException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label5:
        $r4 := @caughtexception;

        goto label4;

     label6:
        $r4 := @caughtexception;

        goto label4;

     label7:
        $r4 := @caughtexception;

        goto label4;

     label8:
        $r4 := @caughtexception;

        goto label4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label6;
        catch javax.crypto.BadPaddingException from label1 to label2 with label3;
        catch java.security.InvalidKeyException from label1 to label2 with label7;
        catch javax.crypto.IllegalBlockSizeException from label1 to label2 with label8;
    }

    public static java.lang.String obfuscateString(android.content.Context, java.lang.String) throws com.audi.myaudi.app.encrypt.Obfuscator$ObfuscationFailedException
    {
        android.content.Context $r0;
        java.lang.String $r1, varReplacer7053;
        java.lang.Throwable $r2;
        byte[] $r3;
        com.audi.myaudi.app.encrypt.Obfuscator$ObfuscationFailedException $r4;
        int varReplacer7054;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

     label1:
        varReplacer7053 = "UTF-8";

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer7053);

        $r3 = staticinvoke <com.audi.myaudi.app.encrypt.Obfuscator: byte[] obfuscate(android.content.Context,byte[])>($r0, $r3);

        varReplacer7054 = 2;

        $r1 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r3, varReplacer7054);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r4 = new com.audi.myaudi.app.encrypt.Obfuscator$ObfuscationFailedException;

        specialinvoke $r4.<com.audi.myaudi.app.encrypt.Obfuscator$ObfuscationFailedException: void <init>(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
}
