Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5708)
		Method: <mh: java.lang.String 襮(byte[])>
		SHA-256: bb924cc76497742fbb8097617c49e90df8a6713f784270e165874b9a47343acc
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5731)
		Method: <bib: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: da15bbba897059abee9021b8a17630184d5841edd19f06ee27b5d335c552365c
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <mh: java.lang.String 襮(byte[])>
		SHA-256: 4324fffbfb6fcb2241d6bfa6c368f9329dfaf9d8f9159735f834cca8a72ad835
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <grk: java.lang.String 鷿(java.lang.String)>
		SHA-256: d662ffe7e6482c0b3c9ac3739c1bf135c70a6ab89c39d68f275911877795a211
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <mh: java.lang.String 襮(byte[])>
		SHA-256: aae8e68109e5384ddb1733ea817804fcb29daab53757a5aa8e684a90edbc1c24
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <bib: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: bb62b4cf31f3ec7b351868bbcc8a218ce73ba1bc09b7425a8ed8931b4d8271f
		Secure: true
	Object:
		Variable: varReplacer5731
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5731)
		Method: <bib: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 60496e0baf1119263baf1642ea44aac1116961b7ee7b1dff13fc64beadc6fe10
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.MessageDigest
		Statement: $r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5730)
		Method: <bib: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: b9834e8717f6856be17c028aca148f7f09ffee849673d8275fd18aba847508c1
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <qa: boolean 鷿(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: c307ae2087b92fb2bd6da213168e519551052863d1566603c4c5f0add62e255f
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r4)
		Method: <bib: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: aef22fa104faf4f1ba80b8af7a762cfae93686e3bcbe7492fe3c2752889cdca2
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <bib: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 8313ecb4f1c99152f5bc9ba870f52499d77f0dd0840d96b2e02d2f5143c98ff3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4351)
		Method: <grk: java.lang.String 鷿(java.lang.String)>
		SHA-256: 1e428e04fd8b16a0b36a12908c0e65ec1604e1cdace7a1ce5e795a8040fe50e2
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <dhg: void 鷿()>
		SHA-256: 283265ab2db4901190108dc5386271d24283afd65d9d7d293b7aca44de27e277
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.SecretKey
		Statement: $r9 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)
		Method: <bib: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: e05a11548f1db574868329f0234e5a223d7c0b0dc62fa7d12061816d463d9aed
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <bib: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: bb62b4cf31f3ec7b351868bbcc8a218ce73ba1bc09b7425a8ed8931b4d8271f
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r8, $r1, varReplacer5734, varReplacer5735)
		Method: <bib: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 2b39eac6c3e1a416186015019ef7f9f30329ee6ae5813cef218c0a49465e0adb
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <bib: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: f2a69d41bb283ae5bbd12efedf08e28c79da2f0f7da79e4b11eea242a6d6c777
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer9202)
		Method: <qa: boolean 鷿(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 95e9c7f2ccd9e6acffc336a2c4ec8b1f2ff0793a08c232fb52870d689944d338
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <bib: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 8313ecb4f1c99152f5bc9ba870f52499d77f0dd0840d96b2e02d2f5143c98ff3
		Secure: false
	Object:
		Variable: varReplacer5735
		Type: int
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r8, $r1, varReplacer5734, varReplacer5735)
		Method: <bib: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 42b347cd4bc28a608268ef5059ec36ccf3785eed891a081f0edc4d6a65741036
		Secure: false

Findings in Java Class: bib

	 in Method: void <init>(byte[],java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #bb62b4cf31f3ec7b351868bbcc8a218ce73ba1bc09b7425a8ed8931b4d8271f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters), javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec), update, javax.crypto.Cipher: void init(int,java.security.cert.Certificate), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom), wrap, doFinal
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5728, $r10, $r12)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5731)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #2b39eac6c3e1a416186015019ef7f9f30329ee6ae5813cef218c0a49465e0adb)
			Third parameter (with value 1024)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r8, $r1, varReplacer5734, varReplacer5735)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #2b39eac6c3e1a416186015019ef7f9f30329ee6ae5813cef218c0a49465e0adb)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r8, $r1, varReplacer5734, varReplacer5735)


Findings in Java Class: qa

	 in Method: boolean 鷿(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 20

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 2
	RequiredPredicateError: 6
	ConstraintError: 1
=====================================================================