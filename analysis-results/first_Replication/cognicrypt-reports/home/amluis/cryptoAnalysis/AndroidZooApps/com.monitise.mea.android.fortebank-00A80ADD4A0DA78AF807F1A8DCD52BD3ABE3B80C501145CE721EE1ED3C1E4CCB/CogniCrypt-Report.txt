Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4262)
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: 9d6229013e232b866b9435eaac5e6e7c5180ff05e6bb6c623be710fd7f6b9202
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: b72db40b68a9b6afef97b3af64d64c426e3ea36307107ee4a3ddab23b771981e
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: 5ec7a47afe1ae562d4d7cdd8eeb5c1da1ec966e36f2da6ce6d5e32fc9471f9ac
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1627)
		Method: <dou: javax.crypto.SecretKey b(android.content.Context,java.lang.String)>
		SHA-256: dd8f9e8dc0ef07558bfec0704cd6ed7f9fc4d686762978be768732274431753
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: 1f31580920da22d100f3b9cef3e133c521a496cf62e80f4549eef22de5b1121e
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyPair
		Statement: $r2 = virtualinvoke $r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <djx: java.lang.String d(android.content.Context)>
		SHA-256: 9e47b02dfb9c74f4866b9ad191499bf3082889c11a77e7a84cbb518717bbb724
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.Signature: byte[] sign()>()
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 4eca516dc04a7ed2480676f09198d61a3fe719ea8d12579aeb90711e46c517bf
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPairGenerator
		Statement: $r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer4218)
		Method: <djx: java.lang.String d(android.content.Context)>
		SHA-256: f5865695975f0bd7aa55a8594aa4f4ab096be964c5af07cef531dc3c035abddf
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5628)
		Method: <cjr: void <init>(javax.net.ssl.X509TrustManager)>
		SHA-256: 6f30a04ce7dbcb6bd3bdd00b0e79a1b17095aa68402f2d95d9967327c07dd530
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.Signature
		Statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4247)
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: a07365058c8b2b9bde6abc7550ce2e8b05518000f4a7bb01d6ab51302adb5fca
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1600)
		Method: <dou: void a(android.content.Context,java.lang.String)>
		SHA-256: 685cf7ff4cf84fa8170aff69ca4ba8296afe7f4bead307d5ce9dc330032702a2
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7186)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: 6e56e3875183094791beb54d39a8303072876e641079b42eb1a26568527be2bc
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <dqc: eba a(eba)>
		SHA-256: 800b138653cd56c4db3b847d79fdc9123f9c0fdcff762aac97bf66d5b115044a
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.KeyStore
		Statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer4242)
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: bf4e521ba3e34ca0fcc180af76ebd369b17eb81f12d0a493d377da3088fdf07f
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.SSLContext
		Statement: $r11 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4714)
		Method: <cjp: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 7b92914661967fe7c11e9a08fc820d232686c70b913344909e9cf6033a1d3bb6
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1598)
		Method: <dou: void a(android.content.Context,java.lang.String)>
		SHA-256: bb265dfd9ef22b001c67bd44e6b46e32d1d93f44cbd40202eeb79c07e06d2f8c
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyPair
		Statement: $r2 = virtualinvoke $r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <djx: java.lang.String d(android.content.Context)>
		SHA-256: 9e47b02dfb9c74f4866b9ad191499bf3082889c11a77e7a84cbb518717bbb724
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.Signature: byte[] sign()>()
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 4eca516dc04a7ed2480676f09198d61a3fe719ea8d12579aeb90711e46c517bf
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <dou: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: 4c016cfc9356af9e0e52bb7c385984e2d0d9792c594b9ed26282b859a7f1d31c
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <dou: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: 3d3773e338a654191a74de599eb2819d59784a2d15c025cf6fe97e29ab369e8a
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5632)
		Method: <dma: void <init>(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 25189e50394241810f482c969368246e53b36800ac36d82ecdf93bdde9f82bbc
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1624)
		Method: <dou: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: c32fcc7fb4f99c7c9db546f1e58349682367dc545a8fd5908fbf74dc287a7d58
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <dou: void a(android.content.Context,java.lang.String)>
		SHA-256: ce63b0eb57c5924f1ea668bf881e59bc358571b8e793c42cbaec361fced1670e
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPairGenerator
		Statement: $r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer4224, varReplacer4225)
		Method: <djx: java.lang.String d(android.content.Context)>
		SHA-256: 6615abd2861d5e65c7e34aedc41e587db18a4505a89c87a37eb7a527e9fcdc8b
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.Signature
		Statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4240)
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: e8f4ad85b0d686617e00844e0155eec8f5843f785163a6eedef1cac743b291e9
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7776)
		Method: <dqc: eba a(eba)>
		SHA-256: f7e83b664f7a8ab29306ce794dba2e47ceb56edcddc2827aeee8e16c09177750
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <dou: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: 47049074634b680d5aecb4d23434c3ac695c34d9853a0c465f98359cd6ec2c2d
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: 782f4e675b92efede98451fc8ebd6de41ac730c9a36441054aa76b8a166d5b9e
		Secure: false

Findings in Java Class: dou

	 in Method: javax.crypto.SecretKey b(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #dd8f9e8dc0ef07558bfec0704cd6ed7f9fc4d686762978be768732274431753)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r10 = virtualinvoke $r5.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>(varReplacer1626, $r9)


	 in Method: byte[] b(javax.crypto.SecretKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4263, $r0, $r5)


	 in Method: byte[] a(javax.crypto.SecretKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1625, $r0, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


Findings in Java Class: djx

	 in Method: java.lang.String d(android.content.Context)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared R S A
			at statement: virtualinvoke $r1.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r14)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #f5865695975f0bd7aa55a8594aa4f4ab096be964c5af07cef531dc3c035abddf)
			First parameter (with value 1024) should be any of {2048, 4096}
			at statement: virtualinvoke $r1.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer4222)


	 in Method: java.lang.String b(android.content.Context,java.lang.String)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #e8f4ad85b0d686617e00844e0155eec8f5843f785163a6eedef1cac743b291e9)
			First parameter (with value "SHA512WithRSAEncryption") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4240)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #a07365058c8b2b9bde6abc7550ce2e8b05518000f4a7bb01d6ab51302adb5fca)
			First parameter (with value "SHA512WithRSAEncryption") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4247)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #bf4e521ba3e34ca0fcc180af76ebd369b17eb81f12d0a493d377da3088fdf07f)
			First parameter (with value "AndroidKeyStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer4242)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r11.<java.security.Signature: void initSign(java.security.PrivateKey)>($r10)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r11.<java.security.Signature: void initSign(java.security.PrivateKey)>($r10)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #bf4e521ba3e34ca0fcc180af76ebd369b17eb81f12d0a493d377da3088fdf07f)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r13 = virtualinvoke $r12.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>(varReplacer4234, varReplacer4235)


Findings in Java Class: cjp

	 in Method: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r11.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4715, r23, varReplacer4715)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7b92914661967fe7c11e9a08fc820d232686c70b913344909e9cf6033a1d3bb6)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r11 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4714)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r11.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4715, r23, varReplacer4715)


Findings in Java Class: cjr

	 in Method: void <init>(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5626, $r2, varReplacer5626)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5626, $r2, varReplacer5626)


Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7183, varReplacer7183, varReplacer7183)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7183, varReplacer7183, varReplacer7183)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 28

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 2
	ConstraintError: 5
	RequiredPredicateError: 12
=====================================================================