Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 712110b6d50d4a42f86c9165e8b14514ae6cccf973f8d32cdf255cac7d8b2aad
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3603)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: 26f23fd45f4084a2d8d940d1cf0dbefa1ee12414e5d2176b087d75b93340c870
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5809)
		Method: <com.braintreegateway.encryption.Rsa: java.lang.String encrypt(byte[])>
		SHA-256: 63aedcb72469d83067437b1f15b2957dd3cdeda5734eb805255a98b6a6334e73
		Secure: false
	Object:
		Variable: r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer5945)
		Method: <com.braintreegateway.encryption.Aes: java.lang.String encrypt(java.lang.String,byte[],byte[])>
		SHA-256: f0ab7ec4f136a0b0e5c203e0f639d67a216f99ad0803c6d4def19f4c7c0a8dcd
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.braintreegateway.encryption.Aes: byte[] secureRandomBytes(int)>
		SHA-256: 73d923fde01034ccecd1fe2167cbcbfac0058d899aab2ea9ed285a5aa33f014f
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.braintreegateway.encryption.Rsa: java.lang.String encrypt(byte[])>
		SHA-256: 7b37e1e229a3204b153b6058c321bb264e60d9a646a734653ba7cc471bfff12b
		Secure: false
	Object:
		Variable: varReplacer5945
		Type: java.lang.String
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer5945)
		Method: <com.braintreegateway.encryption.Aes: java.lang.String encrypt(java.lang.String,byte[],byte[])>
		SHA-256: fafcc1dfd3ca7d2d92e17cd2e6d1d6c29f41b8becb6a57e6e5479424b9ca1600
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.braintreegateway.encryption.Aes: java.lang.String encrypt(java.lang.String,byte[],byte[])>
		SHA-256: fd6f6010ce4e325dbebccc126025a17782aef26232f00cd3a54929e73268a236
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <mp.lib.bg: java.math.BigInteger b(java.lang.String)>
		SHA-256: 3e024304906a5f27c44d05cbd3eb8e20d8401681f322ae13589e7d5916f97965
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.OpenUDID.OpenUDID_manager: void generateOpenUDID()>
		SHA-256: 383e92c6a9159fc4f0849cfb26da514bdc062562f7df112fbf4a2f6833661549
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5947)
		Method: <com.braintreegateway.encryption.Aes: javax.crypto.Cipher aesCipher()>
		SHA-256: 33c3b5b0f6a761f56f45352e7e698bb779254c9aadf3f0ae6c6ea6d03526f997
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3889)
		Method: <com.us.ragnarok.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: ca90d20a7da664c044344fd03c005dccc926f6216e0b90f1479b008e95e86c64
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1332)
		Method: <mp.lib.bg: java.math.BigInteger b(java.lang.String)>
		SHA-256: 5db8b55bef9c2b031763fe9eafbe33ab1ed1505350307dfe5ae422e46fdb3b9c
		Secure: true
	Object:
		Variable: r13
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.braintreegateway.encryption.Aes: java.lang.String encrypt(java.lang.String,byte[],byte[])>
		SHA-256: 75e0227448e1292fb6fd3c58746bde133c0c1fbf9aa7f5e25e8da7a99b19a5d4
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer942)
		Method: <mp.lib.c: java.lang.String i(java.lang.String)>
		SHA-256: 385d1f94175a946ba4d6c6a7f8f9c930ad74411c13d7f9a4231b9971953c9f71
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.us.ragnarok.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.braintreegateway.encryption.Aes: byte[] secureRandomBytes(int)>
		SHA-256: 18739422868e4dfabf0bbbb6d3f25f1e087d7b127f41e5e498e5a540af6d107b
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4046)
		Method: <com.google.example.games.basegameutils.GameHelper: java.lang.String getSHA1CertFingerprint()>
		SHA-256: 8efb1800ae5e7bda70da67fb3c7fab09b0d06a72fdf02c2a8ed0b7615eab15f9
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r9)
		Method: <com.google.example.games.basegameutils.GameHelper: java.lang.String getSHA1CertFingerprint()>
		SHA-256: b48ebc2517caf5e76a29367d47a1532224bece324cef1b8dfe8210853a6daccd
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <it.partytrack.sdk.compress.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 778469203bdc9e2f84de62c7efc6451e07c41f73b8b26fef9fecaf3c6c1bd359
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <mp.lib.c: java.lang.String i(java.lang.String)>
		SHA-256: 4d0101cbb26fe264a5262d45359d1757807338788407926e2aace295e2650922
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <it.partytrack.sdk.compress.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: c63b74922f95b9ac587f8620c5cf68e2a27ba8d30d66393e4de224b5d0afb39
		Secure: true

Findings in Java Class: com.google.example.games.basegameutils.GameHelper

	 in Method: java.lang.String getSHA1CertFingerprint()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8efb1800ae5e7bda70da67fb3c7fab09b0d06a72fdf02c2a8ed0b7615eab15f9)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4046)


Findings in Java Class: com.us.ragnarok.util.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: com.braintreegateway.encryption.Rsa

	 in Method: java.lang.String encrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5808, $r3)


Findings in Java Class: com.braintreegateway.encryption.Aes

	 in Method: java.lang.String encrypt(java.lang.String,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer5945)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5943, $r6, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5943, $r6, $r5)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 22

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 5
	ConstraintError: 1
=====================================================================