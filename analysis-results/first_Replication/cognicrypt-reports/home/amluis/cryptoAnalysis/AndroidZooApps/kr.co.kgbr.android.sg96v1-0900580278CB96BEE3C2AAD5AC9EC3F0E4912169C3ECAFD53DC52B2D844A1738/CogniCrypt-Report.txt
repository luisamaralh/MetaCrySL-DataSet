Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2313)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String)>
		SHA-256: cb1c9e40c66293ebd4f59991684be7395d9bdcf89825911d6ea29e495a640dee
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String)>
		SHA-256: a1672d523bdb1d62e6aa591eebae474c0d56146b23328619d7d686f732572bd0
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2201)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String,java.lang.String,int)>
		SHA-256: c955cda5d0a45f730c31b7d005df86afe28608ea12260f960a323c698d1afaf3
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String)>
		SHA-256: 312bf13afc9aec2dfa0131117dc3e200a55ecd534a7fd640682c03f14a024398
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String,java.lang.String,int)>
		SHA-256: 312bf13afc9aec2dfa0131117dc3e200a55ecd534a7fd640682c03f14a024398
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1937)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 794db7423c8fea75dbcd2a0358730ede76c51f6e4ba98ffcb6469f9a9e2bdbb3
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String,java.lang.String,int)>
		SHA-256: e931bd46e7d9ddc749e37536babd18ef495da0cad79eb88630553a684700e180
		Secure: false
	Object:
		Variable: varReplacer2319
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer2319)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String)>
		SHA-256: 1ddf74c35bafb836de0df8e069fd70799be74f191cd917aeca0292d94e6ec205
		Secure: false
	Object:
		Variable: varReplacer2199
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer2199)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String,java.lang.String,int)>
		SHA-256: f49ea3f87f1b149ceb28348eb799752b7396eb91af9d249f18caad6965032230
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1025)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: c29b9a40fceb844dda07f6a4f34e5b471795f29d886b1c069ed88fa51adc843f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer2319)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String)>
		SHA-256: eb4648b3abf6da2852639bb54d07eadf5de63b590b2eab9ccd4b60e1bfd3dcef
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 35b0119aad99960d8bec3a1c0a0d18ad4ede33706412ee7d9291554433d85f77
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer2199)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String,java.lang.String,int)>
		SHA-256: a52e8a1912723fbb30b9ed15093535cbbe869fbd36975a415b2552c38f544b0c
		Secure: false

Findings in Java Class: com.clbee.authorviewer.aes256decoder.AES256Cipher

	 in Method: byte[] AES_Decode(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer2319)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2321, $r4, $r2)


	 in Method: byte[] AES_Decode(java.lang.String,java.lang.String,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2200, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer2199)


Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1022, varReplacer1022, varReplacer1022)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1022, varReplacer1022, varReplacer1022)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 8
=====================================================================