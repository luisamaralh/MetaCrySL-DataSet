Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer1325
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1325)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String encrypt(java.lang.String)>
		SHA-256: f54ba92d5325099abb9434ca06dd0cdc27b7f9dd5984e067a4ef85de1a87a934
		Secure: false
	Object:
		Variable: varReplacer1332
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1332)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String decrypt(java.lang.String)>
		SHA-256: cc2df0168405544ea8c07d50663801ed02b418c55c0d9287d0c326ded20820f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1332)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String decrypt(java.lang.String)>
		SHA-256: 42f924b9865fb9fab455a5a48bae3ddc509740e6a7e099a8e74aaf0443a9d621
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String decrypt(java.lang.String)>
		SHA-256: 70689dc977ebdfdd7bb3c2121cd13676312d3624e6f46f2100504b953dd6f8bb
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1333)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String decrypt(java.lang.String)>
		SHA-256: dd776b87d4b3cedd578b515425f95b41a74c4c3e9aa4bb7efc4863443b7e1e80
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1380)
		Method: <rm.com.android.sdk.data.utils.AES: java.lang.String SHA1(java.lang.String)>
		SHA-256: ddbc0a14821b16b8826c7cc160ce04dee46199ccd75ce1cc6d5ff7febd904c79
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String encrypt(java.lang.String)>
		SHA-256: ab5e3da847a7acd234a3d361a1e2267d884b2a37b48442be8572884b3d3ca3f6
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1319)
		Method: <rm.com.android.sdk.data.utils.HttpManager: void trustAllHosts(java.lang.String)>
		SHA-256: a86146647adcc697bfcfa070c9b34390cb8d9b3577e0e093d6156ab4e20e8c60
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1329)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String encrypt(java.lang.String)>
		SHA-256: d01c0184c7c485fe7d95524786872dfb60c7618047c0cc1838d862a23b6570d5
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String encrypt(java.lang.String)>
		SHA-256: a57b552f1f5a5ae3dec2c94fbcb56bd6fba7a2b1730b6b1e05a1d9a706bd6397
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1325)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String encrypt(java.lang.String)>
		SHA-256: be6baf6989ed808432a809179acb237fae0fb084d1baeb6aad91a58d794be060
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String decrypt(java.lang.String)>
		SHA-256: 1c41bbf10d21b0d2111f0b97739d22914eb3ea748007ec051021d0839d5a7e99
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <rm.com.android.sdk.data.utils.AES: java.lang.String SHA1(java.lang.String)>
		SHA-256: f282afa7aff2d5197c2fd7b8a807bf114026c20f7858a0691e71192b7f1ec2f2
		Secure: true
	Object:
		Variable: r7
		Type: java.security.SecureRandom
		Statement: specialinvoke r7.<java.security.SecureRandom: void <init>()>()
		Method: <rm.com.android.sdk.data.utils.HttpManager: void trustAllHosts(java.lang.String)>
		SHA-256: 980cc57db710a1a44b6d6158f2a78e7a94bdea944549a0cc791066b487668975
		Secure: true

Findings in Java Class: rm.com.android.sdk.data.utils.HttpManager

	 in Method: void trustAllHosts(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1320, r8, $r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1320, r8, $r4)


Findings in Java Class: rm.com.android.sdk.utils.RmEncryption

	 in Method: java.lang.String encrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1330, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1330, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1325)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


	 in Method: java.lang.String decrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1334, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1332)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 14

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 9
=====================================================================