Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer1839
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1839)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec a(java.lang.String)>
		SHA-256: 6e248882b9f575a8b44e938ef62cf10a3aa327fec4c407cf9adfecb3e1fbfa47
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer417)
		Method: <cor.ar.d: byte[] a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: fe7298d4ac2c6a91cc2ec2e61e50e058c404e72731c9f2eea7e150770dc0c7c6
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1662)
		Method: <de.coronic.cor03.client.android.util.o: java.lang.String a(android.content.Context)>
		SHA-256: 2beed12e334af38c3358fee267338081595adf90243fd6b4eaaa0c0e017a1377
		Secure: false
	Object:
		Variable: varReplacer1857
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1857)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec b(byte[])>
		SHA-256: 4396118179582f0e5249edef58624fa98c4f0fbbc376c8eb2cc636f3bae4874f
		Secure: false
	Object:
		Variable: varReplacer417
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer417)
		Method: <cor.ar.d: byte[] a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: f6de7c433419b13d578b6eaf9e0a380e18921bd94f9e80031dd35c165b0be3aa
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec a(java.lang.String)>
		SHA-256: c3aab333969edcfc27b514338051b106cd1b59d5032e6c600725624162efaf49
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1730)
		Method: <cor.ar.d: java.lang.String a(byte[],java.security.Key)>
		SHA-256: 128f7cd7577aa28703908cd870a7bbb490cf933eebf65ab572363730249457e2
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <cor.ah.l: void <init>()>
		SHA-256: e258c3da732379a6323f070341fcf9dcdb363564cf919d30abdb7e5f0990b252
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1738)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: 527b118bc80c4fbb9136118bbc5f77ecf8e571fe7d84640e131e9418b1f5ac1d
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: 87be9a926e906383effaff4c375e29bb7485faa2d766ec82d92df120a87da9a6
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <cor.ar.d: byte[] a(java.lang.String,java.security.Key)>
		SHA-256: 6c7ecfb3dcd0d53951b50f09f8703077f5cc0e115c52fea2f02c7094bb1466f1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1838)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec a(java.lang.String)>
		SHA-256: 8a0620aaa5198b50e293754741fbdbda44aeeb125c4a88f802ac3754f673cd80
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1742)
		Method: <cor.ar.d: byte[] a(byte[],javax.crypto.spec.SecretKeySpec)>
		SHA-256: 90bd4ff94ca39a67eb1570bd3680ead68ba9c2bc18648be6c5c66e962ad612f1
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r3.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: e43ead56044a9371116fcb52a8537d070b3b1edd6a6755086f47d7cfa40599fc
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <cor.ar.d: byte[] c(byte[],javax.crypto.spec.SecretKeySpec)>
		SHA-256: 14c82bce462938a66e642e2f8f9201603e3463add336be297c1996351d3542fe
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <cor.ar.d: byte[] a(byte[],javax.crypto.spec.SecretKeySpec)>
		SHA-256: 1e3e9e5d04e8e8b1737f6338aa348b04a08ffcd06d5f3393fb16bd9e978806af
		Secure: false
	Object:
		Variable: varReplacer1738
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1738)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: d6b522fe3933fdc9517e4c9c7fb5e3442783ae6939175fd023452f3856b5373
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <cor.ar.d: java.lang.String a(byte[],java.security.Key)>
		SHA-256: 17bbbabf343ebbf03f4b1dff9cda50d46ffb2a12bee2b28683b2da48d8e8bd42
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1736)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: e6135a6a26152b7bba2ca04d5af95e1c1ac3f6a4125c176868ca516b79b7c60b
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer438)
		Method: <cor.ar.d: byte[] a(java.lang.String,java.security.Key)>
		SHA-256: 8cc21fc1a72165362d28fa5adce60e5535603ff7dfa07a6c566de2642768ed83
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1857)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec b(byte[])>
		SHA-256: c409c0ff9d14d220bc0ed45c0d2f2711cd0c5e3929ddb852a0cc42130230d2
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <cor.ae.h: java.security.KeyStore a()>
		SHA-256: 220b9378390358ade1d6a9a43b629270bf5f71c354d985d427798d799a117c0a
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer763)
		Method: <cor.ar.d: byte[] c(byte[],javax.crypto.spec.SecretKeySpec)>
		SHA-256: 1830e434425a43e51f638e9fb17d3b956abb183f21b06f4affa7bf9265c34341
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer1739)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: fcb8ecb32c5868ec7f5b627e81eaeb26ebeb9b3009fe072778723cd9702b2a3f
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1839)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec a(java.lang.String)>
		SHA-256: 80355b3e1dfde02f44d1ebbbc7d7993a54a6ba97a1619d647700a1f7b3966bb0
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <de.coronic.cor03.client.android.util.o: java.lang.String a(android.content.Context)>
		SHA-256: 6f4c4d394a8476ccb834d64d658bd8b4c9bfa261a055d496ed22cceec443416a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1073)
		Method: <cor.ae.h: void <init>(java.security.KeyStore)>
		SHA-256: 21034cde41edd03b126798ec570a6304943523c7a196cc1d5211efc4d0e8e0bc
		Secure: false

Findings in Java Class: cor.ar.d

	 in Method: byte[] a(java.lang.String,java.security.Key)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8cc21fc1a72165362d28fa5adce60e5535603ff7dfa07a6c566de2642768ed83)
			First parameter (with value "RSA") should be any of {OAEPPadding, NoPadding, PKCS1Padding}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer438)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer439, $r1)


	 in Method: byte[] c(byte[],javax.crypto.spec.SecretKeySpec)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer761, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1830e434425a43e51f638e9fb17d3b956abb183f21b06f4affa7bf9265c34341)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer763)


	 in Method: java.lang.String a(byte[],java.security.Key)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #128f7cd7577aa28703908cd870a7bbb490cf933eebf65ab572363730249457e2)
			First parameter (with value "RSA/None/PKCS1Padding") should be any of RSA/{ECB, Empty String}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1730)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1729, $r1)


	 in Method: byte[] a(byte[],javax.crypto.spec.SecretKeySpec)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #90bd4ff94ca39a67eb1570bd3680ead68ba9c2bc18648be6c5c66e962ad612f1)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1742)


	 in Method: byte[] a(java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer417)


	 in Method: javax.crypto.spec.SecretKeySpec b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1857)


	 in Method: javax.crypto.spec.SecretKeySpec a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1839)


Findings in Java Class: de.coronic.cor03.client.android.util.o

	 in Method: java.lang.String a(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2beed12e334af38c3358fee267338081595adf90243fd6b4eaaa0c0e017a1377)
			First parameter (with value "SHA256") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1662)


Findings in Java Class: cor.ae.h

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1071, r5, varReplacer1071)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1071, r5, varReplacer1071)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 27

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 5
	RequiredPredicateError: 8
=====================================================================