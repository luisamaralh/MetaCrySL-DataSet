public class com.raimbekov.android.sajde.util.q extends java.lang.Object
{

    public void <init>()
    {
        com.raimbekov.android.sajde.util.q $r0;

        $r0 := @this: com.raimbekov.android.sajde.util.q;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.security.PublicKey a(java.lang.String)
    {
        java.lang.String $r0, varReplacer8066, varReplacer8067, varReplacer8068, varReplacer8069, varReplacer8070;
        byte[] $r1;
        java.security.KeyFactory $r2;
        java.security.spec.X509EncodedKeySpec $r3;
        java.security.PublicKey $r4;
        java.lang.Throwable $r5, $r7;
        java.lang.RuntimeException $r6;
        java.lang.IllegalArgumentException $r8;
        com.raimbekov.android.sajde.util.Base64DecoderException $r9;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <com.raimbekov.android.sajde.util.a: byte[] a(java.lang.String)>($r0);

        varReplacer8068 = "RSA";

        $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer8068);

     label2:
        $r3 = new java.security.spec.X509EncodedKeySpec;

     label3:
        specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1);

        $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3);

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label6:
        $r7 := @caughtexception;

        varReplacer8066 = "IABUtil/Security";

        varReplacer8067 = "Invalid key specification.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer8066, varReplacer8067);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label7:
        $r9 := @caughtexception;

        varReplacer8069 = "IABUtil/Security";

        varReplacer8070 = "Base64 decoding failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer8069, varReplacer8070);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r9);

        throw $r8;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label6;
        catch java.security.spec.InvalidKeySpecException from label3 to label4 with label6;
        catch com.raimbekov.android.sajde.util.Base64DecoderException from label1 to label2 with label7;
        catch com.raimbekov.android.sajde.util.Base64DecoderException from label3 to label4 with label7;
    }

    public static boolean a(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, varReplacer8046, varReplacer8047;
        boolean $z0;
        java.security.PublicKey $r3;
        int varReplacer8048;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label2;

     label1:
        varReplacer8046 = "IABUtil/Security";

        varReplacer8047 = "Purchase verification failed: missing data.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer8046, varReplacer8047);

        varReplacer8048 = 0;

        return varReplacer8048;

     label2:
        $r3 = staticinvoke <com.raimbekov.android.sajde.util.q: java.security.PublicKey a(java.lang.String)>($r0);

        $z0 = staticinvoke <com.raimbekov.android.sajde.util.q: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>($r3, $r1, $r2);

        return $z0;
    }

    public static boolean a(java.security.PublicKey, java.lang.String, java.lang.String)
    {
        java.security.PublicKey $r0;
        java.lang.String $r1, $r2, varReplacer8050, varReplacer8051, varReplacer8053, varReplacer8054, varReplacer8055, varReplacer8056, varReplacer8058, varReplacer8060, varReplacer8061, varReplacer8064, varReplacer8065;
        java.security.Signature $r3;
        byte[] $r4;
        boolean $z0;
        java.lang.Throwable $r5, $r6, $r7;
        com.raimbekov.android.sajde.util.Base64DecoderException $r8;
        int varReplacer8049, varReplacer8052, varReplacer8057, varReplacer8059, varReplacer8062, varReplacer8063;

        nop;

        $r0 := @parameter0: java.security.PublicKey;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

     label1:
        varReplacer8058 = "SHA1withRSA";

        $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer8058);

        virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0);

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.Signature: void update(byte[])>($r4);

        $r4 = staticinvoke <com.raimbekov.android.sajde.util.a: byte[] a(java.lang.String)>($r2);

        $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4);

     label2:
        if $z0 != 0 goto label5;

     label3:
        varReplacer8060 = "IABUtil/Security";

        varReplacer8061 = "Signature verification failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer8060, varReplacer8061);

     label4:
        varReplacer8052 = 0;

        return varReplacer8052;

     label5:
        varReplacer8063 = 1;

        return varReplacer8063;

     label6:
        $r5 := @caughtexception;

        varReplacer8055 = "IABUtil/Security";

        varReplacer8056 = "NoSuchAlgorithmException.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer8055, varReplacer8056);

        varReplacer8059 = 0;

        return varReplacer8059;

     label7:
        $r6 := @caughtexception;

        varReplacer8064 = "IABUtil/Security";

        varReplacer8065 = "Invalid key specification.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer8064, varReplacer8065);

        varReplacer8062 = 0;

        return varReplacer8062;

     label8:
        $r7 := @caughtexception;

        varReplacer8050 = "IABUtil/Security";

        varReplacer8051 = "Signature exception.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer8050, varReplacer8051);

        varReplacer8057 = 0;

        return varReplacer8057;

     label9:
        $r8 := @caughtexception;

        varReplacer8053 = "IABUtil/Security";

        varReplacer8054 = "Base64 decoding failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer8053, varReplacer8054);

        varReplacer8049 = 0;

        return varReplacer8049;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label6;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label6;
        catch java.security.InvalidKeyException from label1 to label2 with label7;
        catch java.security.InvalidKeyException from label3 to label4 with label7;
        catch java.security.SignatureException from label1 to label2 with label8;
        catch java.security.SignatureException from label3 to label4 with label8;
        catch com.raimbekov.android.sajde.util.Base64DecoderException from label1 to label2 with label9;
        catch com.raimbekov.android.sajde.util.Base64DecoderException from label3 to label4 with label9;
    }
}
