Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer911
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer911)
		Method: <hr.asseco.android.b.a: byte[] a(byte[],byte[],boolean)>
		SHA-256: 2453e38d0601f4083867363c94839fea97b0314385f76db7b5d25920d6b51f49
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <hr.asseco.android.b.a: byte[] a(byte[],byte[],boolean)>
		SHA-256: 1fdf7781dc03f3f5a575c7b28ca01f300b447dd9d76d61579b5d755379552e8b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer838)
		Method: <hr.asseco.android.b.a: byte[] a(java.lang.String)>
		SHA-256: 4adb91b74f5bf72f8e1ff6959fc1b93f5f378739e6d9b9cf9babed64b14f7014
		Secure: true
	Object:
		Variable: r2
		Type: java.security.SecureRandom
		Statement: specialinvoke r2.<java.security.SecureRandom: void <init>()>()
		Method: <hr.asseco.android.b.a: void <clinit>()>
		SHA-256: a37e557d26f41a4216c88dc939bc6e152fefd3fd18e7f8e44deec71319de936c
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <hr.asseco.android.b.a: byte[] b(byte[],byte[],boolean)>
		SHA-256: 5bdbdb75baa4a128c22a5bacd7160c61bbe95aa2bd156eea54c222926388fba8
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer910)
		Method: <hr.asseco.android.b.a: byte[] a(byte[],byte[],boolean)>
		SHA-256: 43031e8589829d911d11d7efb99d047ab97b1fa8bee8803d83379ae49bdf4671
		Secure: false
	Object:
		Variable: varReplacer900
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer900)
		Method: <hr.asseco.android.b.a: byte[] b(byte[],byte[],boolean)>
		SHA-256: d39cb6fdb00a4e27bea02db0340f16054d8d57b5af0fac14d831329ec3fe77a4
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.Mac
		Statement: $r15 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer859)
		Method: <hr.asseco.android.b.e: byte[] a(hr.asseco.android.utils.d,java.lang.String,int)>
		SHA-256: 2520e70c8744a591083667e68bce90a49e18ef64af0734b5a95ef56162ae27cc
		Secure: false
	Object:
		Variable: varReplacer788
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer788)
		Method: <hr.asseco.android.f.a.a: byte[] a(java.lang.String,byte[],byte[])>
		SHA-256: 7ed104d57e0e955df3fbcfa8f5f57fbdde6d38ea38a4e46b2c20452331a98b4b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer789)
		Method: <hr.asseco.android.f.a.a: byte[] a(java.lang.String,byte[],byte[])>
		SHA-256: 425de936ce149e0608ec760ad39be423cb2a150fd4417471603be9c36d575697
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer902)
		Method: <hr.asseco.android.b.a: byte[] b(byte[],byte[],boolean)>
		SHA-256: d8dd3842df173ea98c67a2aecb010f586f8c99cfde88631e134948d03cb7ccb5
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer900)
		Method: <hr.asseco.android.b.a: byte[] b(byte[],byte[],boolean)>
		SHA-256: 99d9b66a95402c4c9235a423e46125d5edbe1a468da61aa3bf081865d8838ed3
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer911)
		Method: <hr.asseco.android.b.a: byte[] a(byte[],byte[],boolean)>
		SHA-256: 80089fdd400b4c34a3bf64b2cabdddfcff742d22c28182ca1ccc253b47b55d06
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <hr.asseco.android.f.a.a: byte[] a(java.lang.String,byte[],byte[])>
		SHA-256: a0918651345c7d9dbf15c518fc4924bb7186af610327daff3ad01e18bb9f1db5
		Secure: true
	Object:
		Variable: varReplacer858
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r14, varReplacer858)
		Method: <hr.asseco.android.b.e: byte[] a(hr.asseco.android.utils.d,java.lang.String,int)>
		SHA-256: 43a8bc7fe07d5e48ccc193559f0a5cdf0d4721001d6e7028c179545b644dd89c
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer843)
		Method: <hr.asseco.android.b.a: void <clinit>()>
		SHA-256: 7ac2649a72629beef449e63fc3ffc1ced0b9c8783ceeee3bf4e600bd79654fd3
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r0.<javax.crypto.Mac: void doFinal(byte[],int)>($r3, varReplacer872)
		Method: <hr.asseco.android.b.d: void a(javax.crypto.Mac,byte[],int,byte[],int)>
		SHA-256: 19b63dfc59a61395e2e821a8b0f7b1ae0d04a7c328ce0d941eef9e39617bbd88
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <hr.asseco.android.b.a: byte[] b(byte[],byte[],boolean)>
		SHA-256: 5dc4340a2d1f046ff68210161494585e9dc00657d085bf63f64e27638a8df59a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r14, varReplacer858)
		Method: <hr.asseco.android.b.e: byte[] a(hr.asseco.android.utils.d,java.lang.String,int)>
		SHA-256: c6e9da31fc3d04370eb0cb6ecf96f39ef570e56889a2b58f8155c3b85b6dea92
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <hr.asseco.android.f.a.a: byte[] a(java.lang.String,byte[],byte[])>
		SHA-256: 8495826414f22a1542ef7715924f9205effd2953ef2da58beab0c21efe9c6fe3
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <hr.asseco.android.b.a: byte[] a(byte[],byte[],boolean)>
		SHA-256: 12698abc5636dc09553223a5d415a46844cc1e3c646dde0e598d0706b893c241
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer788)
		Method: <hr.asseco.android.f.a.a: byte[] a(java.lang.String,byte[],byte[])>
		SHA-256: d87577e3d8678f91e520a442e9c0dad29999506020b54f40b55683ab5a99b33b
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <hr.asseco.android.b.a: byte[] a(java.lang.String)>
		SHA-256: 429798205c2c83583d727c70683157d1a7176cd097489fb4eae5c3e713da1e13
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.SecureRandom
		Statement: specialinvoke $r12.<java.security.SecureRandom: void <init>()>()
		Method: <hr.asseco.android.widget.VirtualKeypad: void a(android.content.Context,android.util.AttributeSet)>
		SHA-256: c9dbcb02a9ec05e322e3bb614bf2579eb318ab0c5dc545b6b89d942164fd66d6
		Secure: true

Findings in Java Class: hr.asseco.android.b.d

	 in Method: void a(javax.crypto.Mac,byte[],int,byte[],int)
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #2520e70c8744a591083667e68bce90a49e18ef64af0734b5a95ef56162ae27cc)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void update(byte[])>($r4)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #2520e70c8744a591083667e68bce90a49e18ef64af0734b5a95ef56162ae27cc)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void update(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2520e70c8744a591083667e68bce90a49e18ef64af0734b5a95ef56162ae27cc)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $i3 = virtualinvoke $r0.<javax.crypto.Mac: int getMacLength()>()


Findings in Java Class: hr.asseco.android.b.e

	 in Method: byte[] a(hr.asseco.android.utils.d,java.lang.String,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r14, varReplacer858)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2520e70c8744a591083667e68bce90a49e18ef64af0734b5a95ef56162ae27cc)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: staticinvoke <hr.asseco.android.b.d: void a(javax.crypto.Mac,byte[],int,byte[],int)>($r15, $r13, $i1, $r16, $i0)


Findings in Java Class: hr.asseco.android.b.a

	 in Method: byte[] b(byte[],byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer901, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer900)


	 in Method: byte[] a(byte[],byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer911)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer912, $r3)


Findings in Java Class: hr.asseco.android.f.a.a

	 in Method: byte[] a(java.lang.String,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer788)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 24

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 2
	IncompleteOperationError: 2
	RequiredPredicateError: 6
=====================================================================