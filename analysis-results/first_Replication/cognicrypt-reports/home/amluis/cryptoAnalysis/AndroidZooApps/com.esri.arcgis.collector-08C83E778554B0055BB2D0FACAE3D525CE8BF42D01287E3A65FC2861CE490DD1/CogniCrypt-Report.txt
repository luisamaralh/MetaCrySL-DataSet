Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3226)
		Method: <com.esri.core.internal.io.handler.m: javax.net.ssl.SSLContext a()>
		SHA-256: 23a17e6499ded487b8132032536e7474b6be484864e9157c466241dd9276b9bb
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <kw: void a(char[],byte[],int)>
		SHA-256: b994bb6bdf191dc97e1140a507efd8d7379a90191de60b22230315488b73ef1f
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer260)
		Method: <kw: void a(char[],byte[],int)>
		SHA-256: 7ac3c0ce5800428bd1492bf64415fb608429a042926f56aef892337afac26083
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer262)
		Method: <kw: void a(char[],byte[],int)>
		SHA-256: 99aa8874bd6d3f839401dbd2798427b87a85e003f0afc08b255d6bb157a8a511
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <do: java.lang.String b(java.lang.String)>
		SHA-256: 38b4c65cda23b5629b2e096bbe35a619ccc6f45979d24964db1f2ed165eed5c3
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer263)
		Method: <kw: void a(char[],byte[],int)>
		SHA-256: 1ecce73a560c67b911f0f5039d7c4626be0204bdc498adc1071c1c0e953a9c4c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer265)
		Method: <kw: void a(char[],byte[],int)>
		SHA-256: 34deab2e0caa8a21f4baaa07d99db19101935ace7cccd8709d145db48aa9e4b9
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer792)
		Method: <do: java.lang.String b(java.lang.String)>
		SHA-256: 7c3b22e10009b1cdad3411056456d5fd69f6ecb849796459159c5299fac155a8
		Secure: true

Findings in Java Class: kw

	 in Method: void a(char[],byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7ac3c0ce5800428bd1492bf64415fb608429a042926f56aef892337afac26083)
			First parameter (with value "PBEWithMD5AndDES/CBC/PKCS5Padding") should be any of {AES, DESede, RSA}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer260)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #99aa8874bd6d3f839401dbd2798427b87a85e003f0afc08b255d6bb157a8a511)
			First parameter (with value "PBEWithMD5AndDES/CBC/PKCS5Padding") should be any of {AES, DESede, RSA}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer262)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #7ac3c0ce5800428bd1492bf64415fb608429a042926f56aef892337afac26083)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters), javax.crypto.Cipher: void init(int,java.security.Key), javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec), update, javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.cert.Certificate), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom), wrap, doFinal
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer266, $r6, $r3)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #1ecce73a560c67b911f0f5039d7c4626be0204bdc498adc1071c1c0e953a9c4c)
			Second parameter (with value 1023)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer263)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer263)


Findings in Java Class: com.esri.core.internal.io.handler.m

	 in Method: javax.net.ssl.SSLContext a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3227, r7, varReplacer3227)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3227, r7, varReplacer3227)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 8

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 4
	ForbiddenMethodError: 1
	IncompleteOperationError: 1
	ConstraintError: 3
=====================================================================