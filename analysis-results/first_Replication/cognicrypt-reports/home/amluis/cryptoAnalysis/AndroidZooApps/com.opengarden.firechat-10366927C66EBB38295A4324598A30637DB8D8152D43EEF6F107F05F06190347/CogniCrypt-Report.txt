Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4881)
		Method: <org.jsoup.helper.HttpConnection$Response: void b()>
		SHA-256: 8333ba44f5cd7f9df84973eb2e679b8e87eafe886790b22238a814b83fdcea55
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPairGenerator
		Statement: $r10 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3955, varReplacer3956)
		Method: <org.b.a.a.a.e: void d(android.content.Context)>
		SHA-256: 123c93e72d540519bb3522f4b27a8a9d614ffe7bf6832c59942ba8e75030ccff
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.h: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 7f2287f59d6a255406bc4b98d50510cf18c3958510c6a05df9078c5f076acd3d
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <b.a.j: c.i a(c.i)>
		SHA-256: be0077c565c0c7c7b0f50ef8191a342865e0c839ce66528ff1258e3a3986f2eb
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10195)
		Method: <b.a.j: c.i b(c.i)>
		SHA-256: 1e19c532d2a580aa371834a9d4b7fd4198d47ba160545212fc289bff8e0a90f4
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.d: java.security.KeyPair a()>
		SHA-256: ae7746e749ad19dd80543f36ba9cb19737eb4241dd2be71bfd11344b3c774935
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10706)
		Method: <b.a.j: c.i a(c.i)>
		SHA-256: 8c5977794e32006c40ed520da60725fb869d4b46b564b9ba1717b1fddeaf47cb
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer4196)
		Method: <com.google.android.gms.iid.d: java.security.KeyPair a()>
		SHA-256: f9b1e7491dc2a7618d99780338622afa6d4124314e176600597ca6e89f901553
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: 667d1c74233dc4695844b2a369b7ca168b7b3f396ce37cb94fd304b9f22f5e14
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4239)
		Method: <com.opengarden.firechat.jd: byte[] a(byte[])>
		SHA-256: 5a61f0e02db332f0522df4d276a6427d77eaf6cd1a5c2674fc9e8b0f77115e98
		Secure: true
	Object:
		Variable: $r21
		Type: javax.net.ssl.SSLContext
		Statement: $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6534)
		Method: <b.ag: void <init>(b.ag$a)>
		SHA-256: 4fba3aa4d5e5c0810b43046379cec0505a47f8890aef4c9101cdc3d1d3f1a413
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.opengarden.firechat.jd: java.lang.String a(java.lang.String)>
		SHA-256: 36bc465e8a85e17bbcedc9bd57fd0a97e8aaaf27faae7eabe3dcf3b8b1400cd4
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <b.a.j: c.i b(c.i)>
		SHA-256: 489933113c268a7e7f05aa40b5ef1fa1199672afd48e2e11dd964911c5915718
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.PublicKey
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: a4e4ecffbfa24945c7b9252e6e971a5919b9c0bad5744e4045419497644909c7
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3957)
		Method: <org.b.a.a.a.e: void d(android.content.Context)>
		SHA-256: cde9e49d37bcb946114da5b2d79c4d7a9558e9aa5ec5e92920c2e42d8334b209
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5233)
		Method: <com.opengarden.firechat.jd: java.lang.String a(java.lang.String)>
		SHA-256: b00f321a150b8e9a82d5feb9806b7be2853698b61d684e3f3cefe41883ead4b9
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.f: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 60071d2e275abb1b0fb62b829eb21083d67334fd3281007b168151a2d2806a9d
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.opengarden.firechat.jd: byte[] a(byte[])>
		SHA-256: 6c5c537d9c5743670c1b2eea56d62272f4a5d31208507bccf80ec7d07f4e77ae
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.amplitude.api.PinnedAmplitudeClient$SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: a15ee14efb694e46cc74b38929d712c409b73d1527bab6370b3050bb91f89b68
		Secure: true
	Object:
		Variable: r8
		Type: java.security.SecureRandom
		Statement: specialinvoke r8.<java.security.SecureRandom: void <init>()>()
		Method: <org.jsoup.helper.HttpConnection$Response: void b()>
		SHA-256: 7669b6e3e9060ae1a9cdf3d8340611a564cf1d08b11678f34087bb62800291e2
		Secure: true
	Object:
		Variable: $r13
		Type: javax.net.ssl.SSLContext
		Statement: $r13 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6707)
		Method: <com.amplitude.api.PinnedAmplitudeClient$SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: 8ff6173a21df22235447fade45eb201c75089c44cdde845c6142282049344a8d
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.f: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 8f6be8718b6ce42eda38f8bc1516d42c504890382c6206269b5dfd8f0721fe14
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4159)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: 9c05c8d7df914e5f3a730d701e6740edf1883a0e9b45f17124eaf73f75c3d770
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.h: java.security.KeyPair f(java.lang.String)>
		SHA-256: 24a919800770e2fd34d549c3c5f6ab39e4f2b3dafeca4e9fd6f238d268f96440
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.h: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 17a4207782cd4016caf857666b408e8e923a66fe77c19724e9227de6fa2f1210
		Secure: true

Findings in Java Class: org.b.a.a.a.e

	 in Method: void d(android.content.Context)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared R S A
			at statement: virtualinvoke $r10.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r11)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #cde9e49d37bcb946114da5b2d79c4d7a9558e9aa5ec5e92920c2e42d8334b209)
			First parameter (with value "AndroidKeyStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3957)


Findings in Java Class: com.google.android.gms.iid.f

	 in Method: java.lang.String a(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #8f6be8718b6ce42eda38f8bc1516d42c504890382c6206269b5dfd8f0721fe14)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


Findings in Java Class: com.google.android.gms.iid.a

	 in Method: java.lang.String a(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9c05c8d7df914e5f3a730d701e6740edf1883a0e9b45f17124eaf73f75c3d770)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4159)


Findings in Java Class: org.jsoup.helper.HttpConnection$Response

	 in Method: void b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4880, r10, $r0)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4880, r10, $r0)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8333ba44f5cd7f9df84973eb2e679b8e87eafe886790b22238a814b83fdcea55)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4881)


Findings in Java Class: com.amplitude.api.PinnedAmplitudeClient$SSLContextBuilder

	 in Method: javax.net.ssl.SSLContext build()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r13.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6711, $r14, varReplacer6711)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r13.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6711, $r14, varReplacer6711)


Findings in Java Class: b.ag

	 in Method: void <init>(b.ag$a)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6535, varReplacer6535, varReplacer6535)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6535, varReplacer6535, varReplacer6535)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 25

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 8
	ConstraintError: 4
=====================================================================