public class com.amap.api.location.core.e extends java.lang.Object
{
    private static final char[] a;

    static void <clinit>()
    {
        char[] $r0;

        nop;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <com.amap.api.location.core.e: char[] a> = $r0;

        return;
    }

    public void <init>()
    {
        com.amap.api.location.core.e $r0;

        $r0 := @this: com.amap.api.location.core.e;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0, $r2, varReplacer5813, varReplacer5814;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.Throwable $r3;
        null_type varReplacer5812, varReplacer5815;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label6;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label2:
        if $i0 != 0 goto label3;

        varReplacer5815 = null;

        return varReplacer5815;

     label3:
        varReplacer5813 = "SHA1";

        $r2 = staticinvoke <com.amap.api.location.core.e: java.lang.String b(java.lang.String,java.lang.String)>(varReplacer5813, $r0);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5814 = "MD5";

        $r0 = staticinvoke <com.amap.api.location.core.e: java.lang.String b(java.lang.String,java.lang.String)>(varReplacer5814, $r0);

     label4:
        return $r0;

     label5:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Throwable: void printStackTrace()>();

     label6:
        varReplacer5812 = null;

        return varReplacer5812;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    static java.lang.String a(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer5855;
        byte[] $r2;
        java.lang.Exception $r3;
        java.lang.Throwable $r4;
        java.io.UnsupportedEncodingException r5;
        null_type varReplacer5856, varReplacer5857;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r2 = staticinvoke <com.amap.api.location.core.e: byte[] b(java.lang.String)>($r0);

     label2:
        $r2 = staticinvoke <com.amap.api.location.core.e: byte[] a(byte[],java.lang.String)>($r2, $r1);

        if $r2 != null goto label4;

        varReplacer5856 = null;

        return varReplacer5856;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

        $r2 = null;

        goto label2;

     label4:
        $r1 = new java.lang.String;

     label5:
        varReplacer5855 = "UTF-8";

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, varReplacer5855);

     label6:
        return $r1;

     label7:
        $r4 := @caughtexception;

        r5 = (java.io.UnsupportedEncodingException) $r4;

        virtualinvoke r5.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        varReplacer5857 = null;

        return varReplacer5857;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.io.UnsupportedEncodingException from label5 to label6 with label7;
    }

    private static java.lang.String a(byte[])
    {
        byte[] $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        char[] $r3;
        byte $b2;
        char $c3;

        nop;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $r1 = new java.lang.StringBuilder;

        $i1 = $i0 * 2;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i1);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = <com.amap.api.location.core.e: char[] a>;

        $b2 = $r0[$i1];

        $b2 = $b2 >> 4;

        $b2 = $b2 & 15;

        $c3 = $r3[$b2];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r3 = <com.amap.api.location.core.e: char[] a>;

        $b2 = $r0[$i1];

        $b2 = $b2 & 15;

        $c3 = $r3[$b2];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    static java.security.PublicKey a(android.content.Context) throws java.lang.Exception
    {
        android.content.Context $r0;
        android.content.res.AssetManager $r1;
        java.io.InputStream $r2;
        java.security.cert.CertificateFactory $r3;
        java.security.KeyFactory $r4;
        java.security.cert.Certificate $r5;
        java.security.spec.X509EncodedKeySpec $r6;
        java.security.PublicKey $r7;
        byte[] $r8;
        java.lang.Throwable $r9, $r11, $r13, $r14;
        java.lang.Exception $r10;
        java.lang.NullPointerException $r12;
        java.lang.String varReplacer5954, varReplacer5955, varReplacer5957, varReplacer5958, varReplacer5959, varReplacer5960;
        null_type varReplacer5956;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

     label01:
        varReplacer5959 = "location_public_key.der";

        $r2 = virtualinvoke $r1.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>(varReplacer5959);

        varReplacer5955 = "X.509";

        $r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer5955);

        varReplacer5958 = "RSA";

        $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer5958);

        $r5 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r2);

        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label02:
        $r6 = new java.security.spec.X509EncodedKeySpec;

     label03:
        $r7 = virtualinvoke $r5.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        $r8 = interfaceinvoke $r7.<java.security.PublicKey: byte[] getEncoded()>();

        specialinvoke $r6.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r8);

        $r7 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6);

     label04:
        return $r7;

     label05:
        $r9 := @caughtexception;

        $r10 = new java.lang.Exception;

        varReplacer5954 = "\u65e0\u6b64\u7b97\u6cd5";

        specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer5954);

        throw $r10;

     label06:
        $r11 := @caughtexception;

        $r10 = new java.lang.Exception;

        varReplacer5957 = "\u516c\u94a5\u975e\u6cd5";

        specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer5957);

        throw $r10;

     label07:
        $r12 := @caughtexception;

        $r10 = new java.lang.Exception;

        varReplacer5960 = "\u516c\u94a5\u6570\u636e\u4e3a\u7a7a";

        specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer5960);

        throw $r10;

     label08:
        $r13 := @caughtexception;

     label09:
        varReplacer5956 = null;

        return varReplacer5956;

     label10:
        $r14 := @caughtexception;

        goto label09;

        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label04 with label10;
        catch java.security.cert.CertificateException from label01 to label02 with label08;
        catch java.security.cert.CertificateException from label03 to label04 with label08;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label05;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label05;
        catch java.security.spec.InvalidKeySpecException from label01 to label02 with label06;
        catch java.security.spec.InvalidKeySpecException from label03 to label04 with label06;
        catch java.lang.NullPointerException from label01 to label02 with label07;
        catch java.lang.NullPointerException from label03 to label04 with label07;
    }

    public static byte[] a(byte[], java.lang.String)
    {
        byte[] $r0;
        java.lang.String $r1, varReplacer5860;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Cipher $r3;
        java.lang.Exception $r4;
        int varReplacer5861;
        null_type varReplacer5862;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

     label1:
        $r2 = staticinvoke <com.amap.api.location.core.e: javax.crypto.spec.SecretKeySpec c(java.lang.String)>($r1);

        varReplacer5860 = "AES/ECB/ZeroBytePadding";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5860);

        varReplacer5861 = 2;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5861, $r2);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        varReplacer5862 = null;

        return varReplacer5862;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static byte[] a(byte[], java.security.Key) throws java.lang.Exception
    {
        byte[] $r0;
        java.security.Key $r1;
        javax.crypto.Cipher $r2;
        int varReplacer5952;
        java.lang.String varReplacer5953;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.security.Key;

        varReplacer5953 = "RSA/ECB/PKCS1Padding";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5953);

        varReplacer5952 = 1;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5952, $r1);

        $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

        return $r0;
    }

    static byte[] a(byte[], byte[])
    {
        byte[] $r0, $r1;
        javax.crypto.spec.SecretKeySpec $r2, r7;
        javax.crypto.Cipher $r3;
        java.lang.Throwable $r4, $r5, $r6;
        java.security.NoSuchAlgorithmException r8;
        javax.crypto.NoSuchPaddingException r9;
        null_type varReplacer5946, varReplacer5950, varReplacer5951;
        java.lang.String varReplacer5947, varReplacer5948;
        int varReplacer5949;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

     label1:
        r7 = new javax.crypto.spec.SecretKeySpec;

     label2:
        $r2 = r7;

     label3:
        varReplacer5947 = "AES";

        specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5947);

        varReplacer5948 = "AES/ECB/PKCS5Padding";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5948);

        varReplacer5949 = 1;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5949, $r2);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label4:
        return $r0;

     label5:
        $r4 := @caughtexception;

        r8 = (java.security.NoSuchAlgorithmException) $r4;

        virtualinvoke r8.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer5946 = null;

        return varReplacer5946;

     label6:
        $r5 := @caughtexception;

        r9 = (javax.crypto.NoSuchPaddingException) $r5;

        virtualinvoke r9.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        varReplacer5951 = null;

        return varReplacer5951;

     label7:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Throwable: void printStackTrace()>();

        varReplacer5950 = null;

        return varReplacer5950;

        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch javax.crypto.NoSuchPaddingException from label3 to label4 with label6;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    private static java.lang.String b(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer5859;
        java.security.MessageDigest $r2;
        byte[] $r3;
        java.lang.Exception $r4;
        java.lang.RuntimeException $r5;
        null_type varReplacer5858;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        varReplacer5858 = null;

        return varReplacer5858;

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0);

        varReplacer5859 = "utf-8";

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5859);

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <com.amap.api.location.core.e: java.lang.String a(byte[])>($r3);

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static byte[] b(java.lang.String)
    {
        java.lang.String $r0, $r2;
        int $i0, $i1, $i2, $i3, varReplacer5863;
        byte[] $r1;
        byte $b4;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i1 = 0;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= 2 goto label2;

     label1:
        $r1 = newarray (byte)[0];

        return $r1;

     label2:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $r1 = newarray (byte)[$i0];

     label3:
        if $i1 >= $i0 goto label4;

        $i2 = $i1 * 2;

        $i3 = $i1 * 2;

        $i3 = $i3 + 2;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        varReplacer5863 = 16;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, varReplacer5863);

        $i2 = $i2 & 255;

        $b4 = (byte) $i2;

        $r1[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return $r1;
    }

    private static javax.crypto.spec.SecretKeySpec c(java.lang.String)
    {
        java.lang.String $r0, varReplacer5864, varReplacer5865, varReplacer5867;
        byte[] $r1, $r3;
        java.lang.StringBuffer $r2, r5;
        int $i0, varReplacer5866, varReplacer5868;
        java.lang.Throwable $r4;
        javax.crypto.spec.SecretKeySpec r6;
        java.io.UnsupportedEncodingException r7;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = null;

        if $r0 != null goto label1;

        $r0 = "";

     label1:
        r5 = new java.lang.StringBuffer;

        $r2 = r5;

        varReplacer5866 = 16;

        specialinvoke r5.<java.lang.StringBuffer: void <init>(int)>(varReplacer5866);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label2:
        $i0 = virtualinvoke $r2.<java.lang.StringBuffer: int length()>();

        if $i0 >= 16 goto label3;

        varReplacer5867 = "0";

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer5867);

        goto label2;

     label3:
        $i0 = virtualinvoke $r2.<java.lang.StringBuffer: int length()>();

        if $i0 <= 16 goto label4;

        varReplacer5868 = 16;

        virtualinvoke $r2.<java.lang.StringBuffer: void setLength(int)>(varReplacer5868);

     label4:
        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        varReplacer5865 = "UTF-8";

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5865);

     label5:
        $r1 = $r3;

     label6:
        r6 = new javax.crypto.spec.SecretKeySpec;

        varReplacer5864 = "AES";

        specialinvoke r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5864);

        return r6;

     label7:
        $r4 := @caughtexception;

        r7 = (java.io.UnsupportedEncodingException) $r4;

        virtualinvoke r7.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label6;

        catch java.io.UnsupportedEncodingException from label4 to label5 with label7;
    }
}
