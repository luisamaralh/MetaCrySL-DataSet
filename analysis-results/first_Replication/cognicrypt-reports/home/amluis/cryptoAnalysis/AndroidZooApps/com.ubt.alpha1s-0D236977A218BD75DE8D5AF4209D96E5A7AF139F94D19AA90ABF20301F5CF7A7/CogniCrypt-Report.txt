Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer19542)
		Method: <com.amap.api.location.core.f: byte[] b(byte[],byte[])>
		SHA-256: 7acb7825b1b504a4406f0b9b1a69914c573750a6893774b431bad559eaf68187
		Secure: false
	Object:
		Variable: varReplacer19546
		Type: java.lang.String
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer19546)
		Method: <com.amap.api.location.core.f: byte[] b(byte[],byte[])>
		SHA-256: 9db9c532bbfe0de28bec45b3ccf7b4c61836c3551abe338ca73019e6f897d218
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.map.b.j: java.lang.String a(java.lang.String)>
		SHA-256: db395b22ced56c5ca633af477c861f58a097b1af3e802f766964c415de885445
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amap.api.location.core.f: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 5431554bbf41c2d2b91377d6f52fd1bc3a7863213b141ee9c8c003707ee034f9
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer21325)
		Method: <com.amap.api.location.core.f: byte[] c(byte[],java.lang.String)>
		SHA-256: 361868ca8f37184ae6d43cb3ebd85025050dbe94da4ee101a2990c183557f5df
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <cn.jpush.android.util.a: java.lang.String b(java.lang.String)>
		SHA-256: 8e4d3ce3f6a3961627a164a718666216cbb71ad4d5d8d2a6bc5f52f33a56ba40
		Secure: true
	Object:
		Variable: varReplacer19465
		Type: java.lang.String
		Statement: specialinvoke r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer19465)
		Method: <com.amap.api.location.core.f: javax.crypto.spec.SecretKeySpec c(java.lang.String)>
		SHA-256: 13055a44bd010eb01579bcacfce69681577a59e34c5617821d3cb7d12d2bad10
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5138)
		Method: <b.a.at: java.lang.String a(java.lang.String)>
		SHA-256: 7bf6c037ad7ec7fba5888d693b1a2a2d468930e3d66bb5e165e89586412254b5
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5066)
		Method: <com.b.a.e: byte[] a(byte[],byte[])>
		SHA-256: 98d9ac09a522acf912d17292dec7bc6df40fd8868230de74af57eebec65e7f58
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer19248)
		Method: <com.tencent.open.utils.Util: java.lang.String encrypt(java.lang.String)>
		SHA-256: 76348bdc029cdef47ab5d6cc614104db6f0b49ac1b18bcca13a59762e9904e49
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r4, $i0, $i1)
		Method: <com.sina.weibo.sdk.utils.AidTask: java.lang.String encryptRsa(java.lang.String,java.lang.String)>
		SHA-256: 9d47e4bf28e35668593c469e4d8035362eff87bf8c78e61db5aa4e8f529d5512
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3286)
		Method: <com.tencent.open.utils.Util: boolean a(android.content.Context)>
		SHA-256: f4d9ad0b75e0f6c4c159d8f51a083787688c01c43bfbdb2716305297d3a590f
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <cn.jpush.android.util.g: byte[] a(java.io.File)>
		SHA-256: c674f616d8a4149c10b3f91dfa9584390dcb6804f11b69608665967bac43ce50
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer21320)
		Method: <com.amap.api.location.core.f: byte[] a(byte[],byte[])>
		SHA-256: 395cb172849707eb45197f99d6686596207728701f5ff372293462d30b1ecae1
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.open.utils.Util: boolean a(android.content.Context)>
		SHA-256: a270ad1e474c7014c22f8189d40a6ed8de9e6ca6418b6f9a16de8aea80cdb347
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)
		Method: <com.amap.api.location.core.f: byte[] c(byte[],java.lang.String)>
		SHA-256: 6efeeecf7f60adb5bea3616b026e80646b7cfb0516f09399eacfbf6eb85d03d8
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer20273)
		Method: <com.amap.api.location.core.f: byte[] b(byte[],java.lang.String)>
		SHA-256: 27168af4f3b7b9a95890bf465e11ff6eeb534283b9e39fbe65b56f11a0c8940c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21130)
		Method: <com.a.ay: java.lang.String c(java.lang.String)>
		SHA-256: 41ccd0267b9c79889731d48afdfd90fd15980dfd613b4a7b8a89cedb797a77a0
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.ai: java.lang.String b(java.lang.String)>
		SHA-256: e3190b6f4323befbf18670a0eb10cd2790133ea7e985cb6f92d999f647f560e9
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.a.ay: java.lang.String c(java.lang.String)>
		SHA-256: 58d4f778c75ae5c6457db4c036b4d0c83836263de6fa78ac4e6726c0465080bf
		Secure: true
	Object:
		Variable: r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer19465)
		Method: <com.amap.api.location.core.f: javax.crypto.spec.SecretKeySpec c(java.lang.String)>
		SHA-256: 2e1d6194a35bc40097abb80ef6af5f1a48c50c77f3cb2b3ef65c05e37e49961a
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r7 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r4, $i0, $i1)
		Method: <com.sina.weibo.sdk.utils.AidTask: java.lang.String encryptRsa(java.lang.String,java.lang.String)>
		SHA-256: c250ebff6fc3a6c49e26462006c2f80e2c751844d174401190c7a249ba016947
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer20276)
		Method: <com.amap.api.location.core.f: byte[] b(byte[],java.lang.String)>
		SHA-256: c35e5c1f1c640e66c9181e2c018e706a35c50b48fa294427d38bbd5502f32128
		Secure: false
	Object:
		Variable: varReplacer5066
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5066)
		Method: <com.b.a.e: byte[] a(byte[],byte[])>
		SHA-256: f93101adc6ea149b35cc5a6b22c86a43fbd1632b419a30f801c888bc727977e2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <com.sina.weibo.sdk.net.HttpManager: org.apache.http.conn.ssl.SSLSocketFactory getSSLSocketFactory()>
		SHA-256: c2a31ce5eadca9aa472eaca11f429bf1e5efd95d0e8ef75b07a4fffae55da19c
		Secure: true
	Object:
		Variable: $r10
		Type: javax.net.ssl.SSLContext
		Statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>(varReplacer17003, varReplacer17004)
		Method: <com.ubt.alpha1s.utils.b.a: void d()>
		SHA-256: 9b9457ba4993c5c50029fe329b1313eaff78fd2b4555ec91f7e027024ba10fb
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)
		Method: <com.amap.api.location.core.f: byte[] c(byte[],java.lang.String)>
		SHA-256: b40b88bd33daeb377b2a669ec0f74d9f765e37230d1ba891049cd92a9758827a
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <b.a.at: java.lang.String b(java.lang.String)>
		SHA-256: 4ba1a1aa25a09e0dbf1db3d3c2aae7633b122bab5951673f546a6b83d4058959
		Secure: true
	Object:
		Variable: varReplacer19312
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer19312)
		Method: <com.sina.weibo.sdk.utils.AesEncrypt: java.security.Key generateKey(java.lang.String)>
		SHA-256: 6f7d3c986a791a1883ff11f072089a95db165545f773000f93e7634d1034c20a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer19549)
		Method: <com.amap.api.location.core.f: byte[] a(byte[],java.security.Key)>
		SHA-256: 44ac14f358ec1efdb8ef52de47d5e7b4d91e8c33da7e92e8c4fa19119d669b96
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer19401)
		Method: <com.amap.api.location.core.g: java.lang.String a(java.lang.String)>
		SHA-256: 5dd76f0830f3a4853d2f16653e6e095ffde33e7602725c31b6a247a8408a8f4c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sina.weibo.sdk.utils.AesEncrypt: java.lang.String Decrypt(java.lang.String)>
		SHA-256: 4cca603f1eeb39e7e9da4e60ef07d06fcbcd5db30133b82fd98fc4c50543cbf
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.amap.api.location.core.d: java.lang.String a(java.lang.String)>
		SHA-256: 8160b04a4ac175d8ba9c6507c132987c8fb8f019886626c5cdcf0e419b3e6ce8
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer21319)
		Method: <com.amap.api.location.core.f: byte[] a(byte[],byte[])>
		SHA-256: ee3e4e517e46772052eadbac6f6556d17a35fdc74838322d492195963a4a8038
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18364)
		Method: <com.tencent.open.utils.SystemUtils: java.lang.String getAppSignatureMD5(android.content.Context,java.lang.String)>
		SHA-256: 5939fed9077c3e79a57c6958f02963e71f9b23c8ac71cdca5e3885ec2ff92c94
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String)>
		SHA-256: 67f8276464ff2b603934593edfd3991f3b602712d92e93712f83733b7783915
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer19458)
		Method: <com.amap.api.location.core.f: byte[] a(byte[],java.lang.String)>
		SHA-256: ec36793d78df737ecaebc54124f52c807a7eeee87969963a6dd2b5ec29b4e467
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer19264)
		Method: <com.sina.weibo.sdk.utils.AesEncrypt: java.lang.String Decrypt(java.lang.String)>
		SHA-256: c11cb7c117c3e8e3c1f229aa1bc31543033b9b96416a2f58a9526a65db66824f
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amap.api.location.core.f: java.lang.String d(byte[],java.lang.String)>
		SHA-256: fc1ab1b3bfc374d81204c019006e63b1a9b563adc4d5bd3716d21c78ea4ea422
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.location.core.f: byte[] a(byte[],byte[])>
		SHA-256: 6527a26bafb1edbd1ab4f355f580b9b674f0fff9867d591b0ec047eae0d927b6
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amap.api.location.core.f: byte[] a(byte[],java.security.Key)>
		SHA-256: 87b83984871035cf2b4ad69067d908e456278840e7f2473d4d2887bc87cdfe89
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = interfaceinvoke $r4.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.amap.api.location.core.d: java.lang.String a(java.lang.String)>
		SHA-256: af08579edcc49acdbfd6c65ab192caef7bd4bc7b7635ca2245cad74474f96d91
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer21324)
		Method: <com.amap.api.location.core.f: byte[] c(byte[],java.lang.String)>
		SHA-256: ef42178371b266ed097b227e0732b691945501622b69e9b9210723eaf4f1b968
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.sina.weibo.sdk.utils.MD5: java.lang.String hexdigest(byte[])>
		SHA-256: ce46ac4b675f038f403f2c6368f5fa678b9016d8739e8710c76185475061c190
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer20276)
		Method: <com.amap.api.location.core.f: byte[] b(byte[],java.lang.String)>
		SHA-256: 4fa6173be1ddb3cc0d37768cd6974eac930c3724aa80ec306abaf2987c2c2345
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.tencent.open.utils.HttpUtils: org.apache.http.client.HttpClient getHttpClient(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 20492e4fb32e47e28a7ead4d25141df0a45263484a75ab23a7f3a5178dcc300c
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.open.utils.Util: java.lang.String encrypt(java.lang.String)>
		SHA-256: cd155a5106cf879ca9c12a488750a7281339307cbdb710f5d0e8ff8d5e5960ca
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amap.api.location.core.f: byte[] a(byte[],java.lang.String)>
		SHA-256: bda5d53ac081b1a7e52a0607146086cc3d892419f1f790c073d0cab396d6d8c9
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer20298)
		Method: <com.amap.api.location.core.f: java.lang.String d(byte[],java.lang.String)>
		SHA-256: 6b394b0d7b1884a59d2c05cc88980ac35e2093baca998ce8e9af64fd109749ca
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <cn.jpush.android.util.ai: java.lang.String b(java.lang.String)>
		SHA-256: 589f10f65a2d04fe4b0bb06abf8101daf047c6762569191c753224ee717411cc
		Secure: true
	Object:
		Variable: r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer19546)
		Method: <com.amap.api.location.core.f: byte[] b(byte[],byte[])>
		SHA-256: 992646114811ddc62ad27e74e5eb9c42fad0068e2ea249186d83455fc1409105
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.g: byte[] a(java.io.File)>
		SHA-256: 9d5518b928395bd05bce5b6b363adfca98533751c6f8b6369158fc7086bf8946
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)
		Method: <com.amap.api.location.core.f: byte[] b(byte[],java.lang.String)>
		SHA-256: e45c36e339c28a9f868e30b9c1daeb017d23f67bfa6597bc503802e855c3911e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9734)
		Method: <com.sina.weibo.sdk.utils.MD5: java.lang.String hexdigest(byte[])>
		SHA-256: ff4f16bac47ceb7e9efdaa94613f22e4e2a547a398d6f6134a3a7341a9f8382b
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.open.utils.SystemUtils: java.lang.String getAppSignatureMD5(android.content.Context,java.lang.String)>
		SHA-256: b63dfbb12749c64168b3365533a1bc620fca0fe09535f0a443e0da07d60540c5
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.b.a.e: byte[] a(byte[],byte[])>
		SHA-256: c49ba6a6738730d7d1c34137324d75853b5fddd82db75a4c635a0406a85e49b9
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer19439)
		Method: <com.amap.api.location.core.d: java.lang.String j(android.content.Context)>
		SHA-256: 4fc213fd4e3102d59fa9ec08890f1d7caf751a3f3913014ba0a8a4e9167249c4
		Secure: false
	Object:
		Variable: varReplacer21319
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer21319)
		Method: <com.amap.api.location.core.f: byte[] a(byte[],byte[])>
		SHA-256: 8b5b54b1c092dd155facc32f9522f4234560081e10df9755d0c1d262d157f7b
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <b.a.at: java.lang.String a(java.lang.String)>
		SHA-256: 47178459afb1109f1ed6b76ab69e8405e53f917906447e54d6ccd8ceab09aa2b
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amap.api.location.core.g: java.lang.String a(java.lang.String)>
		SHA-256: 8f4b35d04dbcf5b1d5c11b169e15fe55a7ce24c9198acfcbf22b27572989e7da
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer19534)
		Method: <com.amap.api.location.core.d: java.lang.String a(java.lang.String)>
		SHA-256: 13dbe6c7dcbf727256d81bca7aece99023e4fc4f917ebb31f8d6efe2e7a4854a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5070)
		Method: <com.b.a.e: byte[] b(byte[])>
		SHA-256: fbdf412f65f525ee7b9b8bb66287b2ba4c0c9234ff6c93c4aad294ef05da2182
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer21325)
		Method: <com.amap.api.location.core.f: byte[] c(byte[],java.lang.String)>
		SHA-256: cffb37d36435d14f4f7791d56b0214518be126b47c139f9a1ff32aa68d7c40e2
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.a: java.lang.String b(java.lang.String)>
		SHA-256: f5d4bf9ca7f7fb9000cf6a89dae134f0d93e52312b490bf6d8a3635e0c274af1
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6660)
		Method: <com.sina.weibo.sdk.net.SSLSocketFactoryEx: void <init>(java.security.KeyStore)>
		SHA-256: e20761bcd117cde12ec03882224f27375d06cc8537eaf3af0a2e5b89ab390cd9
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer20511)
		Method: <com.sina.weibo.sdk.utils.AidTask: java.lang.String encryptRsa(java.lang.String,java.lang.String)>
		SHA-256: fc8b6a902b6ebc381aaee0b3209ad9c41244fbecbdd1eb0f4e7faff0d2f5f756
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.ubt.alpha1s.ui.LoginActivity: void onCreate(android.os.Bundle)>
		SHA-256: 8d5a152f88c922b710ae34fb504b31e059db367fb3e9c39b6154eae4e2bc6ff8
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5068)
		Method: <com.b.a.e: byte[] a(byte[],byte[])>
		SHA-256: 44983e1837f2059f09031838e00fdf0a78a48b85a46a6c9f6fe21d48964520ac
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <cn.jpush.android.util.a: java.lang.String a(byte[])>
		SHA-256: c4d4007881f660d31095047c858a7cddf0ade719a9b3b9bb76358ae5434d949b
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.location.core.f: byte[] b(byte[],byte[])>
		SHA-256: adeeb0d6982a2d54c58ce3366832f49a83cd1091c81c2f23248240042981b1d6
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3605)
		Method: <com.tencent.open.utils.HttpUtils$CustomSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 3705880fe14bc89e85b4af319bed2fb5f05938b488131a1f827892c8efba6792
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11609)
		Method: <com.ubt.alpha1s.ui.LoginActivity: void onCreate(android.os.Bundle)>
		SHA-256: 97b002c728fcc1bbebf962b787a6502988042992515b17e08aff757e23130381
		Secure: false
	Object:
		Variable: r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.amap.api.location.core.f: byte[] b(byte[],byte[])>
		SHA-256: f7b36804b78a076d108158c9d0bf005e425bdf924bae204f9251b168cfa374a8
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(byte[])>
		SHA-256: edf8d4512ea4d685450853f37af1c60bdb4661ea96e0a8476dfe9d41f4bd92a
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4825)
		Method: <b.a.at: java.lang.String b(java.lang.String)>
		SHA-256: 65a006e0a7bdf4f5792534443b267924bb7848f8e49da59d29a13c3b92edb8bc
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String)>
		SHA-256: bfdf7a7690f99313d7d90ffe799c08accc3face2ec5e8c2f9d6c2ccbb3a7f821
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer19312)
		Method: <com.sina.weibo.sdk.utils.AesEncrypt: java.security.Key generateKey(java.lang.String)>
		SHA-256: f390d878c65d57a2abb3093d526b16c49192f2a7d9985e1c119d04c7f430907e
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.location.core.f: byte[] a(byte[],byte[])>
		SHA-256: e8b6dbfca54201953e6a7c2e32bf1a8de86d00b7d2c034e65918d6c30724e142
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3610)
		Method: <com.tencent.open.utils.HttpUtils$MyX509TrustManager: void <init>()>
		SHA-256: 5458998a0072c17f9887f2c7274d1aad004a9314378445d715e418edb78717df
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8759)
		Method: <com.tencent.mm.a.b: java.lang.String a(byte[])>
		SHA-256: e1fe4699e34dbb5ba272f19397c5fcc1703af82f0c8200d0d4c39145f4d6ff4c
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.open.utils.SystemUtils: java.lang.String getAppSignatureMD5(android.content.Context,java.lang.String)>
		SHA-256: b63dfbb12749c64168b3365533a1bc620fca0fe09535f0a443e0da07d60540c5
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.location.core.f: byte[] b(byte[],byte[])>
		SHA-256: 77d6335d21d79376e95b906ed2d81c1d285249669712e797da523521889b2f45
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.amap.api.location.core.f: void <clinit>()>
		SHA-256: 24f77e1759142170ee8f86fa868773688b133742f4bab121e72467748acd76de
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.amap.api.location.core.d: java.lang.String j(android.content.Context)>
		SHA-256: 59f76ee65f68ed8361413551e83d4883e597f632579444905546dae1bb10e56b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6150)
		Method: <com.tencent.map.b.j: java.lang.String a(java.lang.String)>
		SHA-256: 1b01879729383cb4084dcbfbc49d1fc849a791eff9ae9270a9178850c804b605
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.b.a.e: byte[] a(byte[],byte[])>
		SHA-256: 45ee10dcb3d39568dd42f7be79a1658cf15a135c8e99756dc2521b68ba4e54ab
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.mm.a.b: java.lang.String a(byte[])>
		SHA-256: 49c5be17f6636d1cddfea76e5c36d1ba1f88788c784d140190c2a1684f41fbeb
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)
		Method: <com.amap.api.location.core.f: byte[] b(byte[],java.lang.String)>
		SHA-256: 84f8cdcfd969b0c66c1d63cdd0ef80c07b83177f82c44817063582b5e44cc82b
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.b.a.e: byte[] b(byte[])>
		SHA-256: 33790336861958b2052703a1872c00a6a94a7f0d1ef1b8d9a44ab9ae1209f777
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <com.ubt.alpha1s.utils.b.a: void d()>
		SHA-256: b3036d44199d3ef96796a1172073b5cddd2ffa00c15ddeb1c838e5c5f8c1a7ae
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.amap.api.location.core.f: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: f2ca9634da36ef5a5ff44c3761a4b693f674f79ec5170c5939812e819a9d7e20
		Secure: false

Findings in Java Class: com.tencent.open.utils.HttpUtils$MyX509TrustManager

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #5458998a0072c17f9887f2c7274d1aad004a9314378445d715e418edb78717df)
			First parameter (with value "JKS") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3610)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #5458998a0072c17f9887f2c7274d1aad004a9314378445d715e418edb78717df)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: virtualinvoke $r6.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #5458998a0072c17f9887f2c7274d1aad004a9314378445d715e418edb78717df)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3610)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #5458998a0072c17f9887f2c7274d1aad004a9314378445d715e418edb78717df)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r1 = null


Findings in Java Class: com.ubt.alpha1s.ui.LoginActivity

	 in Method: void onCreate(android.os.Bundle)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #97b002c728fcc1bbebf962b787a6502988042992515b17e08aff757e23130381)
			First parameter (with value "SHA") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11609)


Findings in Java Class: cn.jpush.android.util.g

	 in Method: byte[] a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #c674f616d8a4149c10b3f91dfa9584390dcb6804f11b69608665967bac43ce50)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.ubt.alpha1s.utils.b.a

	 in Method: void d()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer17005, $r11, varReplacer17005)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer17005, $r11, varReplacer17005)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #9b9457ba4993c5c50029fe329b1313eaff78fd2b4555ec91f7e027024ba10fb)
			First parameter (with value "TLSv1") should be any of {TLS}
			at statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>(varReplacer17003, varReplacer17004)


Findings in Java Class: com.amap.api.location.core.g

	 in Method: java.lang.String a(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #5dd76f0830f3a4853d2f16653e6e095ffde33e7602725c31b6a247a8408a8f4c)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #5dd76f0830f3a4853d2f16653e6e095ffde33e7602725c31b6a247a8408a8f4c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: void update(byte[],int,int), digest, java.security.MessageDigest: void update(java.nio.ByteBuffer), java.security.MessageDigest: void update(byte[]), java.security.MessageDigest: void update(byte)
			at statement: virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #5dd76f0830f3a4853d2f16653e6e095ffde33e7602725c31b6a247a8408a8f4c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), update, java.security.MessageDigest: byte[] digest(), java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #5dd76f0830f3a4853d2f16653e6e095ffde33e7602725c31b6a247a8408a8f4c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = null

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #5dd76f0830f3a4853d2f16653e6e095ffde33e7602725c31b6a247a8408a8f4c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer19401)


Findings in Java Class: com.amap.api.location.core.d

	 in Method: java.lang.String j(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4fc213fd4e3102d59fa9ec08890f1d7caf751a3f3913014ba0a8a4e9167249c4)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer19439)


	 in Method: java.lang.String a(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyGenerator (on Object #13dbe6c7dcbf727256d81bca7aece99023e4fc4f917ebb31f8d6efe2e7a4854a)
			Operation on object of type javax.crypto.KeyGenerator object not completed. Expected call to generateKey, init
			at statement: $r2 = null

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyGenerator (on Object #13dbe6c7dcbf727256d81bca7aece99023e4fc4f917ebb31f8d6efe2e7a4854a)
			Operation on object of type javax.crypto.KeyGenerator object not completed. Expected call to generateKey, init
			at statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer19534)


Findings in Java Class: com.amap.api.location.core.f

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f2ca9634da36ef5a5ff44c3761a4b693f674f79ec5170c5939812e819a9d7e20)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)


	 in Method: byte[] b(byte[],java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #27168af4f3b7b9a95890bf465e11ff6eeb534283b9e39fbe65b56f11a0c8940c)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #27168af4f3b7b9a95890bf465e11ff6eeb534283b9e39fbe65b56f11a0c8940c)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer20276)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #27168af4f3b7b9a95890bf465e11ff6eeb534283b9e39fbe65b56f11a0c8940c)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #27168af4f3b7b9a95890bf465e11ff6eeb534283b9e39fbe65b56f11a0c8940c)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer20276)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #27168af4f3b7b9a95890bf465e11ff6eeb534283b9e39fbe65b56f11a0c8940c)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters), javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec), update, javax.crypto.Cipher: void init(int,java.security.cert.Certificate), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom), wrap, doFinal
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer20275, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer20275, $r6)


	 in Method: byte[] c(byte[],java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ef42178371b266ed097b227e0732b691945501622b69e9b9210723eaf4f1b968)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ef42178371b266ed097b227e0732b691945501622b69e9b9210723eaf4f1b968)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer21325)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ef42178371b266ed097b227e0732b691945501622b69e9b9210723eaf4f1b968)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters), javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec), update, javax.crypto.Cipher: void init(int,java.security.cert.Certificate), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom), wrap, doFinal
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer21322, $r6)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ef42178371b266ed097b227e0732b691945501622b69e9b9210723eaf4f1b968)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer21322, $r6)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ef42178371b266ed097b227e0732b691945501622b69e9b9210723eaf4f1b968)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer21325)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer19543, $r7, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer19543, $r7, $r6)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer21318, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer21319)


	 in Method: javax.crypto.spec.SecretKeySpec c(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer19465)


	 in Method: byte[] a(byte[],java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer19548, $r1)


	 in Method: byte[] a(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer19460, $r2)


	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


	 in Method: java.lang.String d(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer20297, $r2)


Findings in Java Class: com.sina.weibo.sdk.utils.AidTask

	 in Method: java.lang.String encryptRsa(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer20506, $r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #fc8b6a902b6ebc381aaee0b3209ad9c41244fbecbdd1eb0f4e7faff0d2f5f756)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r7 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r4, $i0, $i1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #fc8b6a902b6ebc381aaee0b3209ad9c41244fbecbdd1eb0f4e7faff0d2f5f756)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r7 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r4, $i0, $i1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #fc8b6a902b6ebc381aaee0b3209ad9c41244fbecbdd1eb0f4e7faff0d2f5f756)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters), javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec), update, javax.crypto.Cipher: void init(int,java.security.cert.Certificate), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom), wrap, doFinal
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer20506, $r3)


Findings in Java Class: com.b.a.e

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5067, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5066)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5067, $r2, $r4)


Findings in Java Class: com.sina.weibo.sdk.net.SSLSocketFactoryEx

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6661, r6, varReplacer6661)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6661, r6, varReplacer6661)


Findings in Java Class: com.tencent.open.utils.HttpUtils$CustomSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3603, r7, varReplacer3603)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3603, r7, varReplacer3603)


Findings in Java Class: com.sina.weibo.sdk.utils.AesEncrypt

	 in Method: java.security.Key generateKey(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer19312)


	 in Method: java.lang.String Decrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer19260, $r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 91

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 7
	RequiredPredicateError: 25
	ConstraintError: 5
	IncompleteOperationError: 17
=====================================================================