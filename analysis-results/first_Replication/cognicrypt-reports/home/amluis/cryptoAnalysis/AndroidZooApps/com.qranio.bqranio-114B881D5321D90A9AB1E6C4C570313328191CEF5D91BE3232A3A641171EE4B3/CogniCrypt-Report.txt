Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1202)
		Method: <com.qranio.webserviceconnect.Security$MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: a0277788390e9447f616b0e2d7f16e0bcc195d06461d50b60e210ecbeff6033b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11088)
		Method: <com.qranio.util.Security: java.lang.String decrypt(java.lang.String)>
		SHA-256: 41ca34023934facef7adc18605bb72602d5ce183ceb5a0a073b3adef18394aeb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11325)
		Method: <crittercism.android.da: java.lang.String a(java.lang.String)>
		SHA-256: d7c2ea5f1768f781565f793f9b363a56fe526f9150f90eef7620636de755feeb
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15968)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaT(java.lang.String)>
		SHA-256: 955a872dccba2c6da87567d0fa0a4219fb9bf13c5f3e1aafca56e9cbe18c00d6
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11856)
		Method: <com.localytics.android.DatapointHelper: java.lang.String getSha256_buggy(java.lang.String)>
		SHA-256: 92e4292c33420684f2f9e9bfe897f8be7540ed4a5db2c56552783de301e38200
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16189)
		Method: <com.squareup.okhttp.internal.Util: java.lang.String shaBase64(java.lang.String)>
		SHA-256: 82038c93b07fae9823b37efce8f3b25e1b2a2453da6936ba437af2f822a1361f
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.localytics.android.DatapointHelper: java.lang.String getSha256_buggy(java.lang.String)>
		SHA-256: 2feca76bc0b1f633b0e7445d33ac9d4f4a9606eb32af76fd1505f1fb038c4fdc
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 712110b6d50d4a42f86c9165e8b14514ae6cccf973f8d32cdf255cac7d8b2aad
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.util.Random: void nextBytes(byte[])>($r2)
		Method: <com.squareup.okhttp.ws.WebSocketCall: void <init>(com.squareup.okhttp.OkHttpClient,com.squareup.okhttp.Request,java.util.Random)>
		SHA-256: 5fd49c807860cbf1852f0291c01998409f82892e207cf76802dc130126a4dbbe
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r7)
		Method: <com.sromku.simple.fb.utils.Utils: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: 43a35377bfb25a758eae159694ac09d24d8c3d5d84e510d0079c959e8fdcb063
		Secure: true
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10631)
		Method: <crittercism.android.y: java.security.Provider a()>
		SHA-256: dc291c9434d1afcfeaabfc04072d2d8120b83b2f197dcc47196313fd7b98fd91
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.qranio.webserviceconnect.Security: org.apache.http.client.HttpClient getNewHttpClient()>
		SHA-256: 1be05182ec330625056542a313cb41901830cf37581d91b17c13cf3eb07684a4
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.SecureRandom
		Statement: specialinvoke $r8.<java.security.SecureRandom: void <init>()>()
		Method: <com.localytics.android.AnalyticsHandler: void _updateHeaderForTestModeAttribution(java.lang.String,org.json.JSONObject,com.localytics.android.DatapointHelper$AdvertisingInfo,boolean)>
		SHA-256: c01b882ce9f8e5ef324c3b8d9131b55c7fa50a59a239ef9df76a0b4774ff7d4c
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <crittercism.android.da: java.lang.String a(java.lang.String)>
		SHA-256: a8d5f990f480129ebcd9dabf20cc87a7e6dbbf1c3faf732ccff9c89b10b2fdef
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer15611)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: a85a1bde784fd66bb50c233e3edb016b50c4acb695a7f9bff703bcbe564e5115
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4)
		Method: <com.qranio.webserviceconnect.WSUtils: java.lang.String getWSHash(java.lang.String,java.lang.String)>
		SHA-256: 7fca8a799bc6062cb3f0d85d50c9a7042244d50e0849feff92df6616f699e872
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.squareup.okhttp.internal.Util: java.lang.String shaBase64(java.lang.String)>
		SHA-256: 7e4c598fefb2cc0aa59230e140959cfefafbdf41dc1e16cb0f02ba069289e752
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.qranio.util.Security: java.lang.String decrypt(java.lang.String)>
		SHA-256: e406d6c161b7cb5f8bd5c05683d11dd35d9cffd56cc5a555c42ebb90acdb170c
		Secure: false
	Object:
		Variable: r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer8056)
		Method: <com.qranio.webserviceconnect.WSUtils: java.lang.String getWSHash(java.lang.String,java.lang.String)>
		SHA-256: c7e55d2ade794b1a421aaaff421e400404e0be2223177db9d906f347b5fd55bd
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer14637)
		Method: <com.sromku.simple.fb.utils.Utils: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: f7c1a28c34db1a77f01a2ffbaeed37f1908a9d14df7f6de564ce269a60c574cb
		Secure: true
	Object:
		Variable: varReplacer14633
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer14633)
		Method: <com.sromku.simple.fb.utils.Utils: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: 16ed93ada6eecd264704ff33ffc5f6f31c613ecfca10509fad398cc5b354937c
		Secure: false
	Object:
		Variable: varReplacer8056
		Type: java.lang.String
		Statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer8056)
		Method: <com.qranio.webserviceconnect.WSUtils: java.lang.String getWSHash(java.lang.String,java.lang.String)>
		SHA-256: a0e37ffd2acf84cb88247086642341bf63aa41ebb12a05a0d1b734115acb4c4c
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 35b0119aad99960d8bec3a1c0a0d18ad4ede33706412ee7d9291554433d85f77
		Secure: true
	Object:
		Variable: varReplacer11092
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer11092)
		Method: <com.qranio.util.Security: java.security.Key generateKey()>
		SHA-256: 6e1bf8d43af6b1a8f9c0695dcccfaab7d84df775e97c31f7bff0327988054e84
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer14633)
		Method: <com.sromku.simple.fb.utils.Utils: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: 2c90e76d4ba96fad6d33d83888acbee51d94b691fb0fd031da1873beccf88428
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <org.jarjar.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: 5c31efb8beb779517a7f291168d3912335afc0c4abe67c9d32ed8797b2e7c24a
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17051)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: b924cafe8b1a98b811afc9f136af46d7e7a64dca839a4b9f3e0d458b09f6bdfd
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: b06ea93113caf1c0a34502b70367c98fc8260fbfa0ac30bcb23e381db0de6b00
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <org.jarjar.apache.commons.codec.digest.DigestUtils: byte[] sha256(byte[])>
		SHA-256: d04a34131442e6215abf536c38358ba5d3ff2845ebd3a37286f3009aca967eb
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <org.jarjar.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: b832aa670c828e2ede739dc34ac5c16bb43a49eaa1e85346ac40adef288109f1
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer8055)
		Method: <com.qranio.webserviceconnect.WSUtils: java.lang.String getWSHash(java.lang.String,java.lang.String)>
		SHA-256: 2e6c011fd208d0e19d4f510c02904a4bb098f0df9fa46157b69df7a84118458b
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaT(java.lang.String)>
		SHA-256: 36ba1c4d4a21b43e8434065008241024dfe4622b0bb42c4c93bbc9c8a26a18ab
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.squareup.okhttp.ws.WebSocketCall: void <init>(com.squareup.okhttp.OkHttpClient,com.squareup.okhttp.Request)>
		SHA-256: 4b382ab64325a502c3d2d40fdfd66a1acd7d9c126f7523417345f0ebe57f6ee2
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer11092)
		Method: <com.qranio.util.Security: java.security.Key generateKey()>
		SHA-256: 9e6e65ba471237ac011ac717d8019fd17d3f9312a0e726a05967f7e7a562b7e2
		Secure: false

Findings in Java Class: crittercism.android.y

	 in Method: java.security.Provider a()
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #dc291c9434d1afcfeaabfc04072d2d8120b83b2f197dcc47196313fd7b98fd91)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r0.<javax.net.ssl.SSLContext: java.security.Provider getProvider()>()

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #dc291c9434d1afcfeaabfc04072d2d8120b83b2f197dcc47196313fd7b98fd91)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10631)


Findings in Java Class: com.qranio.util.Security

	 in Method: java.lang.String decrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer11087, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #41ca34023934facef7adc18605bb72602d5ce183ceb5a0a073b3adef18394aeb)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11088)


	 in Method: java.security.Key generateKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer11092)


Findings in Java Class: com.qranio.webserviceconnect.Security$MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1203, r5, varReplacer1203)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1203, r5, varReplacer1203)


Findings in Java Class: com.sromku.simple.fb.utils.Utils

	 in Method: java.lang.String encode(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer14633)


Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer15612, varReplacer15612, varReplacer15612)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer15612, varReplacer15612, varReplacer15612)


Findings in Java Class: com.qranio.webserviceconnect.WSUtils

	 in Method: java.lang.String getWSHash(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer8056)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 34

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	RequiredPredicateError: 8
	IncompleteOperationError: 2
=====================================================================