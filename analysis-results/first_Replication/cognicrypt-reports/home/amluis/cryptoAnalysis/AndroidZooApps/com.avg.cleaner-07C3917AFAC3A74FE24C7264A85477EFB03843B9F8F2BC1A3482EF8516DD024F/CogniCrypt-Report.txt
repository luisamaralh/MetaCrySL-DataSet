Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity: com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$CipherTextIvMac encrypt(byte[],com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$SecretKeys)>
		SHA-256: 25d3835610df116c8d3f054724d99f7905e07400f4267757f6af4ad048311bb9
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity: byte[] randomBytes(int)>
		SHA-256: 279db3d9da58ae94c02e1ba6db8deae9057d6b5f9f4f37662fc46c910a8d6da3
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5432)
		Method: <mp.lib.d: java.math.BigInteger b(java.lang.String)>
		SHA-256: 9125ead45958c0b0f0d54e800cec6230b5c6ef88e7adb27e376e1b27cf301dfe
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity: com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$SecretKeys generateKeyFromPassword(java.lang.String,byte[])>
		SHA-256: f7da95d0039900083d1c5bf4c9c17ba6b6f0a7c1bba0cc231e44dd229c9caa62
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <mp.lib.d: java.math.BigInteger b(java.lang.String)>
		SHA-256: 48e8e980974f07ac338299b101f5c169c0cbcfd332640677ec09471b33bac880
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.exacttarget.etpushsdk.util.m: java.lang.String b(java.lang.String)>
		SHA-256: 7a27ae3fcb22a8835c2cccb1442097f62ec8d440eacaa1ba0b380c27be480f5b
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzblv()>
		SHA-256: 112022bca94cdaa98ec8bb4e28d641de4a8f23ab1fc0b368e2d06d6a02e13c6a
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer5994)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$PrngFixes: void installLinuxPRNGSecureRandom()>
		SHA-256: fffecc92aa08000cd65efc9d78d8f2dce9733e7390faf6e145b0523b32e1c282
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer17087)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzblv()>
		SHA-256: d533a6f0edcb83c691dc06fd51b32c38cbf10a1caca65533743b1cb4847a95a
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity: com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$CipherTextIvMac encrypt(byte[],com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$SecretKeys)>
		SHA-256: 418c2ad98edc91011d89c3be10f36bd98972111ac309f4208c409f9fb9324bc5
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5974)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity: byte[] decrypt(com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$CipherTextIvMac,com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$SecretKeys)>
		SHA-256: 4bc480a450e3226dde486cb8a3b8f294fed7c284234f2ad61d1b7b475ed06ac
		Secure: false
	Object:
		Variable: varReplacer5964
		Type: int
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer5963, varReplacer5964)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity: com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$SecretKeys generateKeyFromPassword(java.lang.String,byte[])>
		SHA-256: e9d9e5bb1de3297df809e636a73d249a1629932db729f18f5d80e6dc3bc1075
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17021)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: ef7712136f2dbe04855ca994820171224f2672cab6250fe25eeab4db3b81e2fc
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15453)
		Method: <com.squareup.okhttp.internal.Util: f.f sha1(f.f)>
		SHA-256: 9294f8f1899f8d59ed723a4be41c946692cdcbaf5be00256f23504ba49804841
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer5976)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity: byte[] generateMac(byte[],javax.crypto.SecretKey)>
		SHA-256: 170d3c3691e912f5811db761768b671bf3340549329c98bece9c03353b189b89
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5960)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity: com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$CipherTextIvMac encrypt(byte[],com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$SecretKeys)>
		SHA-256: e1eb6452a2ccff6cb62e58a6709ac9c98c8b180af48de4f96585e04af4da8810
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity: byte[] decrypt(com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$CipherTextIvMac,com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$SecretKeys)>
		SHA-256: 197fe427bb47c7000549fc2bae1257af55f252f1907d92d197d440873bb7d19d
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.squareup.okhttp.internal.Util: f.f sha1(f.f)>
		SHA-256: edbf0fb2bfe0c263fc769f68ee377a5ac04ba061b9ab95fdebb5ffc8a7b78c46
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: f944777d9d8e89e0f8adf0af9c3ccd064733a31fa3f1e06304f27dc756cb592b
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3538)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: a9fbc83c9bea5af9ab893f19358ca7954f3995d11f08b1a9f8cdf1282efedf35
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5950)
		Method: <com.exacttarget.etpushsdk.util.m: java.lang.String b(java.lang.String)>
		SHA-256: 844f6028b697fd447506b05a67e926149c6f537673bca0dee8464200f9ab70cd
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5969)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity: com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$SecretKeys generateKeyFromPassword(java.lang.String,byte[])>
		SHA-256: f667934f0ed067c9bec9fed3c8ca04019d220f05bb2beb153797fb022006d382
		Secure: false
	Object:
		Variable: varReplacer5967
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5967)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity: com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$SecretKeys generateKeyFromPassword(java.lang.String,byte[])>
		SHA-256: f2d6e039f7fc5521a45a4f46087bd22af83b60c1596bac598b744b0b8cdbbc7a
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity: byte[] generateMac(byte[],javax.crypto.SecretKey)>
		SHA-256: c6dc4131ca13a700f69eebff9cf4d4cbd1f442867ec8377fecf98f1bef3306a4
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer5968)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity: com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$SecretKeys generateKeyFromPassword(java.lang.String,byte[])>
		SHA-256: a4e63e9190fa1b85f394d1f0e1a11f4b6539435c408d80f8878dcc1ce752c6d6
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer5963, varReplacer5964)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity: com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$SecretKeys generateKeyFromPassword(java.lang.String,byte[])>
		SHA-256: 4bdfb9536c911fa6ca107c5507639217f23fbc14689ba03daeaaed7f3111ddf5
		Secure: false
	Object:
		Variable: varReplacer5969
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5969)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity: com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$SecretKeys generateKeyFromPassword(java.lang.String,byte[])>
		SHA-256: ea30e55dc476ebbbbeb737e4412759e681e4a62d4302a8d786d26e03977db287
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5967)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity: com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$SecretKeys generateKeyFromPassword(java.lang.String,byte[])>
		SHA-256: f6f4234d9f07dd028a5f28e6d5555b0c6c7fc36e1002c94380666e7bdae59bec
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity: byte[] decrypt(com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$CipherTextIvMac,com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$SecretKeys)>
		SHA-256: 36da9e361da26f0f9650bfcbd38588efc7fa4e7a5a1d92c4a966ccf918fc9e45
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzkk(java.lang.String)>
		SHA-256: f768922fa43b6517f5cbb7b5c0e8dff878a97528e590f1df3666b51af353f078
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$PrngFixes: void installLinuxPRNGSecureRandom()>
		SHA-256: a174b835bb6e8b85e055455e3c62292dee48db170aff034fbce5926441c5624c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer5983)
		Method: <com.exacttarget.etpushsdk.util.AesCbcWithIntegrity: byte[] randomBytes(int)>
		SHA-256: 95ea19e2ff08f0cd03ff67e43a0d1bfa6bd06ae0b55e1629cd7c1665691ff733
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 4c7add4d41f06fa92bd57618e77b2df1a78eb8d44e5f363952002486d67608cc
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false

Findings in Java Class: com.exacttarget.etpushsdk.util.AesCbcWithIntegrity

	 in Method: com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$SecretKeys generateKeyFromPassword(java.lang.String,byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #4bdfb9536c911fa6ca107c5507639217f23fbc14689ba03daeaaed7f3111ddf5)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5967)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5969)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #a4e63e9190fa1b85f394d1f0e1a11f4b6539435c408d80f8878dcc1ce752c6d6)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer5968)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer5963, varReplacer5964)


	 in Method: byte[] decrypt(com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$CipherTextIvMac,com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$SecretKeys)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5973, $r5, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$CipherTextIvMac encrypt(byte[],com.exacttarget.etpushsdk.util.AesCbcWithIntegrity$SecretKeys)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5959, $r5, $r2)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ef7712136f2dbe04855ca994820171224f2672cab6250fe25eeab4db3b81e2fc)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17021)


Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3535, varReplacer3535, varReplacer3535)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3535, varReplacer3535, varReplacer3535)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 36

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 3
	RequiredPredicateError: 10
	IncompleteOperationError: 1
=====================================================================