public class com.initech.pkix.'cmp'.client.PKIMessageFormatter extends java.lang.Object
{

    public void <init>()
    {
        com.initech.pkix.'cmp'.client.PKIMessageFormatter $r0;

        $r0 := @this: com.initech.pkix.'cmp'.client.PKIMessageFormatter;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext)
    {
        com.initech.pkix.'cmp'.client.CMPContext $r0;
        com.initech.pkix.'cmp'.PKIMessage $r1;
        com.initech.pkix.'cmp'.PKIHeader $r2;
        int $i0, varReplacer29671, varReplacer29675, varReplacer29676, varReplacer29677, varReplacer29678, varReplacer29679, varReplacer29682;
        com.initech.asn1.useful.GeneralName $r3;
        byte[] $r4;
        com.initech.pkix.'cmp'.crmf.CertReqMessages $r5;
        com.initech.pkix.'cmp'.crmf.CertReqMsg $r6;
        com.initech.pkix.'cmp'.crmf.CertTemplate $r7;
        java.security.KeyPairGenerator $r8;
        java.security.KeyPair $r9;
        java.security.PrivateKey $r10;
        java.security.PublicKey $r11;
        java.lang.String $r12, varReplacer29669, varReplacer29670, varReplacer29672, varReplacer29673, varReplacer29674, varReplacer29680, varReplacer29681, varReplacer29683;
        com.initech.pkix.'cmp'.crmf.ProofOfPossession $r13;
        com.initech.asn1.useful.AlgorithmID $r14;
        java.lang.Exception $r15, $r18, $r19;
        com.initech.pkix.'cmp'.client.CMPException $r16;
        java.lang.StringBuilder $r17;

        nop;

        $r0 := @parameter0: com.initech.pkix.'cmp'.client.CMPContext;

        $r1 = new com.initech.pkix.'cmp'.PKIMessage;

        specialinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void <init>()>();

        $r2 = virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader getHeader()>();

        $i0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: int getVersion()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setVersion(int)>($i0);

        $r3 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: com.initech.asn1.useful.GeneralName getSender()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setSender(com.initech.asn1.useful.GeneralName)>($r3);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] genTransactionID()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setTransacID(byte[])>($r4);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] genSenderNonce()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setSenderNonce(byte[])>($r4);

        $r5 = new com.initech.pkix.'cmp'.crmf.CertReqMessages;

        specialinvoke $r5.<com.initech.pkix.'cmp'.crmf.CertReqMessages: void <init>()>();

        $r6 = new com.initech.pkix.'cmp'.crmf.CertReqMsg;

        specialinvoke $r6.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void <init>()>();

        varReplacer29671 = 0;

        virtualinvoke $r6.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void setCertReqId(int)>(varReplacer29671);

        varReplacer29677 = 0;

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignCertReqID(int)>(varReplacer29677);

        $r7 = new com.initech.pkix.'cmp'.crmf.CertTemplate;

        specialinvoke $r7.<com.initech.pkix.'cmp'.crmf.CertTemplate: void <init>()>();

     label01:
        varReplacer29681 = "RSA";

        $r8 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer29681);

        varReplacer29682 = 1024;

        virtualinvoke $r8.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer29682);

        $r9 = virtualinvoke $r8.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

        $r10 = virtualinvoke $r9.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        $r11 = virtualinvoke $r9.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignPubKey(java.security.PublicKey)>($r11);

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignPrivKey(java.security.PrivateKey)>($r10);

        virtualinvoke $r7.<com.initech.pkix.'cmp'.crmf.CertTemplate: void setPublicKey(java.security.PublicKey)>($r11);

     label02:
        $r3 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: com.initech.asn1.useful.GeneralName getSender()>();

        $r12 = virtualinvoke $r3.<com.initech.asn1.useful.GeneralName: java.lang.String toString()>();

        virtualinvoke $r7.<com.initech.pkix.'cmp'.crmf.CertTemplate: void setSubjectDN(java.lang.String)>($r12);

        virtualinvoke $r6.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void setCertTemplate(com.initech.pkix.'cmp'.crmf.CertTemplate)>($r7);

     label03:
        $r13 = virtualinvoke $r6.<com.initech.pkix.'cmp'.crmf.CertReqMsg: com.initech.pkix.'cmp'.crmf.ProofOfPossession getProofOfPossession()>();

        $r3 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: com.initech.asn1.useful.GeneralName getSender()>();

        $r11 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PublicKey getSignPubKey()>();

        virtualinvoke $r13.<com.initech.pkix.'cmp'.crmf.ProofOfPossession: void setSignature(com.initech.asn1.useful.GeneralName,java.security.PublicKey)>($r3, $r11);

        $r10 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PrivateKey getSignPrivKey()>();

     label04:
        $r14 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA1WithRSA>;

     label05:
        varReplacer29683 = "INITECH";

        virtualinvoke $r13.<com.initech.pkix.'cmp'.crmf.ProofOfPossession: void signSignature(java.security.PrivateKey,com.initech.asn1.useful.AlgorithmID,java.lang.String)>($r10, $r14, varReplacer29683);

     label06:
        virtualinvoke $r5.<com.initech.pkix.'cmp'.crmf.CertReqMessages: void add(com.initech.pkix.'cmp'.crmf.CertReqMsg)>($r6);

     label07:
        varReplacer29678 = 2;

        virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void setContent(int,java.lang.Object)>(varReplacer29678, $r5);

     label08:
        $r14 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA1WithRSA>;

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setProtectionAlgID(com.initech.asn1.useful.AlgorithmID)>($r14);

        staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: void a(com.initech.pkix.'cmp'.client.CMPContext,com.initech.pkix.'cmp'.PKIMessage)>($r0, $r1);

        return $r1;

     label09:
        $r15 := @caughtexception;

        $r16 = new com.initech.pkix.'cmp'.client.CMPException;

        $r17 = new java.lang.StringBuilder;

        varReplacer29670 = "keypair generate failed[";

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer29670);

        $r12 = virtualinvoke $r15.<java.lang.Exception: java.lang.String toString()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        varReplacer29674 = "]";

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer29674);

        $r12 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer29676 = 1;

        specialinvoke $r16.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer29676, $r12);

        throw $r16;

     label10:
        $r18 := @caughtexception;

        virtualinvoke $r18.<java.lang.Exception: void printStackTrace()>();

        $r16 = new com.initech.pkix.'cmp'.client.CMPException;

        $r17 = new java.lang.StringBuilder;

        varReplacer29680 = "fail to generate POP[";

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer29680);

        $r12 = virtualinvoke $r18.<java.lang.Exception: java.lang.String toString()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        varReplacer29672 = "]";

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer29672);

        $r12 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer29675 = 1;

        specialinvoke $r16.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer29675, $r12);

        throw $r16;

     label11:
        $r19 := @caughtexception;

        $r16 = new com.initech.pkix.'cmp'.client.CMPException;

        $r17 = new java.lang.StringBuilder;

        varReplacer29673 = "fail to generate PKIMessage[";

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer29673);

        $r12 = virtualinvoke $r19.<java.lang.Exception: java.lang.String toString()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        varReplacer29669 = "]";

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer29669);

        $r12 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer29679 = 1;

        specialinvoke $r16.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer29679, $r12);

        throw $r16;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label07 to label08 with label11;
    }

    private static com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext, int)
    {
        com.initech.pkix.'cmp'.client.CMPContext $r0;
        int $i0, $i1, varReplacer29621, varReplacer29623, varReplacer29626, varReplacer29627, varReplacer29629, varReplacer29630;
        com.initech.pkix.'cmp'.PKIMessage $r1;
        com.initech.pkix.'cmp'.PKIHeader $r2;
        byte[] $r3;
        com.initech.pkix.'cmp'.crmf.CertReqMessages $r4;
        com.initech.pkix.'cmp'.crmf.CertReqMsg $r5;
        com.initech.pkix.'cmp'.crmf.CertTemplate $r6;
        java.security.KeyPairGenerator $r7;
        java.security.KeyPair $r8;
        java.security.PrivateKey $r9;
        java.security.interfaces.RSAPrivateKey $r10;
        java.security.PublicKey $r11;
        java.security.interfaces.RSAPublicKey $r12;
        com.initech.pkix.'cmp'.crmf.ProofOfPossession $r13;
        com.initech.pkix.'cmp'.crmf.PKMACValue $r14;
        com.initech.asn1.useful.AlgorithmID $r15;
        com.initech.pkix.'cmp'.PBMParameter $r16;
        java.lang.Exception $r17, $r21, $r22, $r23;
        com.initech.pkix.'cmp'.client.CMPException $r18;
        java.lang.StringBuilder $r19;
        java.lang.String $r20, varReplacer29618, varReplacer29619, varReplacer29620, varReplacer29622, varReplacer29624, varReplacer29625, varReplacer29628, varReplacer29631, varReplacer29632;

        nop;

        $r0 := @parameter0: com.initech.pkix.'cmp'.client.CMPContext;

        $i0 := @parameter1: int;

        $r1 = new com.initech.pkix.'cmp'.PKIMessage;

        specialinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void <init>()>();

        $r2 = virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader getHeader()>();

        $i1 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: int getVersion()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setVersion(int)>($i1);

        $r3 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getSenderKID()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setSenderKID(byte[])>($r3);

        $r3 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] genTransactionID()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setTransacID(byte[])>($r3);

        $r3 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] genSenderNonce()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setSenderNonce(byte[])>($r3);

        $r4 = new com.initech.pkix.'cmp'.crmf.CertReqMessages;

        specialinvoke $r4.<com.initech.pkix.'cmp'.crmf.CertReqMessages: void <init>()>();

        $r5 = new com.initech.pkix.'cmp'.crmf.CertReqMsg;

        specialinvoke $r5.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void <init>()>();

        varReplacer29629 = 0;

        virtualinvoke $r5.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void setCertReqId(int)>(varReplacer29629);

        varReplacer29623 = 0;

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignCertReqID(int)>(varReplacer29623);

        $r6 = new com.initech.pkix.'cmp'.crmf.CertTemplate;

        specialinvoke $r6.<com.initech.pkix.'cmp'.crmf.CertTemplate: void <init>()>();

     label01:
        varReplacer29624 = "RSA";

        $r7 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer29624);

        virtualinvoke $r7.<java.security.KeyPairGenerator: void initialize(int)>($i0);

        $r8 = virtualinvoke $r7.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

        $r9 = virtualinvoke $r8.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        $r10 = (java.security.interfaces.RSAPrivateKey) $r9;

        $r11 = virtualinvoke $r8.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        $r12 = (java.security.interfaces.RSAPublicKey) $r11;

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignPubKey(java.security.PublicKey)>($r12);

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignPrivKey(java.security.PrivateKey)>($r10);

        virtualinvoke $r6.<com.initech.pkix.'cmp'.crmf.CertTemplate: void setPublicKey(java.security.PublicKey)>($r12);

     label02:
        virtualinvoke $r5.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void setCertTemplate(com.initech.pkix.'cmp'.crmf.CertTemplate)>($r6);

     label03:
        $r13 = virtualinvoke $r5.<com.initech.pkix.'cmp'.crmf.CertReqMsg: com.initech.pkix.'cmp'.crmf.ProofOfPossession getProofOfPossession()>();

     label04:
        $r14 = new com.initech.pkix.'cmp'.crmf.PKMACValue;

     label05:
        $r3 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getAuthCode()>();

        $r11 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PublicKey getSignPubKey()>();

        specialinvoke $r14.<com.initech.pkix.'cmp'.crmf.PKMACValue: void <init>(byte[],java.security.PublicKey)>($r3, $r11);

        $r11 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PublicKey getSignPubKey()>();

        virtualinvoke $r13.<com.initech.pkix.'cmp'.crmf.ProofOfPossession: void setSignature(com.initech.pkix.'cmp'.crmf.PKMACValue,java.security.PublicKey)>($r14, $r11);

        $r9 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PrivateKey getSignPrivKey()>();

     label06:
        $r15 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA1WithRSA>;

     label07:
        varReplacer29618 = "Initech";

        virtualinvoke $r13.<com.initech.pkix.'cmp'.crmf.ProofOfPossession: void signSignature(java.security.PrivateKey,com.initech.asn1.useful.AlgorithmID,java.lang.String)>($r9, $r15, varReplacer29618);

     label08:
        virtualinvoke $r4.<com.initech.pkix.'cmp'.crmf.CertReqMessages: void add(com.initech.pkix.'cmp'.crmf.CertReqMsg)>($r5);

     label09:
        varReplacer29621 = 0;

        virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void setContent(int,java.lang.Object)>(varReplacer29621, $r4);

     label10:
        $r16 = new com.initech.pkix.'cmp'.PBMParameter;

        specialinvoke $r16.<com.initech.pkix.'cmp'.PBMParameter: void <init>()>();

        $r15 = new com.initech.asn1.useful.AlgorithmID;

     label11:
        $r3 = virtualinvoke $r16.<com.initech.pkix.'cmp'.PBMParameter: byte[] getEncoded()>();

        varReplacer29619 = "1.2.840.113533.7.66.13";

        specialinvoke $r15.<com.initech.asn1.useful.AlgorithmID: void <init>(java.lang.String,byte[])>(varReplacer29619, $r3);

     label12:
        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setProtectionAlgID(com.initech.asn1.useful.AlgorithmID)>($r15);

        staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: void a(com.initech.pkix.'cmp'.client.CMPContext,com.initech.pkix.'cmp'.PKIMessage)>($r0, $r1);

        return $r1;

     label13:
        $r17 := @caughtexception;

        $r18 = new com.initech.pkix.'cmp'.client.CMPException;

        $r19 = new java.lang.StringBuilder;

        varReplacer29628 = "keypair generate failed[";

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer29628);

        $r20 = virtualinvoke $r17.<java.lang.Exception: java.lang.String toString()>();

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        varReplacer29625 = "]";

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer29625);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer29630 = 1;

        specialinvoke $r18.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer29630, $r20);

        throw $r18;

     label14:
        $r21 := @caughtexception;

        virtualinvoke $r21.<java.lang.Exception: void printStackTrace()>();

        $r18 = new com.initech.pkix.'cmp'.client.CMPException;

        $r19 = new java.lang.StringBuilder;

        varReplacer29622 = "fail to generate POP[";

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer29622);

        $r20 = virtualinvoke $r21.<java.lang.Exception: java.lang.String toString()>();

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        varReplacer29631 = "]";

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer29631);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer29627 = 1;

        specialinvoke $r18.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer29627, $r20);

        throw $r18;

     label15:
        $r22 := @caughtexception;

        $r18 = new com.initech.pkix.'cmp'.client.CMPException;

        $r19 = new java.lang.StringBuilder;

        varReplacer29620 = "fail to generate PKIMessage[";

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer29620);

        $r20 = virtualinvoke $r22.<java.lang.Exception: java.lang.String toString()>();

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        varReplacer29632 = "]";

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer29632);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer29626 = 1;

        specialinvoke $r18.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer29626, $r20);

        throw $r18;

     label16:
        $r23 := @caughtexception;

        $r15 = null;

        goto label12;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label16;
    }

    private static com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext, java.security.PublicKey, java.security.PrivateKey)
    {
        com.initech.pkix.'cmp'.client.CMPContext $r0;
        java.security.PublicKey $r1;
        java.security.PrivateKey $r2;
        com.initech.pkix.'cmp'.PKIMessage $r3;
        com.initech.pkix.'cmp'.PKIHeader $r4;
        int $i0;
        byte[] $r5;
        com.initech.pkix.'cmp'.crmf.CertReqMessages $r6;
        com.initech.pkix.'cmp'.crmf.CertReqMsg $r7;
        com.initech.pkix.'cmp'.crmf.CertTemplate $r8;
        com.initech.pkix.'cmp'.crmf.ProofOfPossession $r9;
        com.initech.pkix.'cmp'.crmf.PKMACValue $r10;
        com.initech.asn1.useful.AlgorithmID $r11;
        com.initech.pkix.'cmp'.PBMParameter $r12;
        java.lang.Exception $r13, $r17, $r18, $r19;
        com.initech.pkix.'cmp'.client.CMPException $r14;
        java.lang.StringBuilder $r15;
        java.lang.String $r16;

        $r0 := @parameter0: com.initech.pkix.'cmp'.client.CMPContext;

        $r1 := @parameter1: java.security.PublicKey;

        $r2 := @parameter2: java.security.PrivateKey;

        $r3 = new com.initech.pkix.'cmp'.PKIMessage;

        specialinvoke $r3.<com.initech.pkix.'cmp'.PKIMessage: void <init>()>();

        $r4 = virtualinvoke $r3.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader getHeader()>();

        $i0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: int getVersion()>();

        virtualinvoke $r4.<com.initech.pkix.'cmp'.PKIHeader: void setVersion(int)>($i0);

        $r5 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getSenderKID()>();

        virtualinvoke $r4.<com.initech.pkix.'cmp'.PKIHeader: void setSenderKID(byte[])>($r5);

        $r5 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] genTransactionID()>();

        virtualinvoke $r4.<com.initech.pkix.'cmp'.PKIHeader: void setTransacID(byte[])>($r5);

        $r5 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] genSenderNonce()>();

        virtualinvoke $r4.<com.initech.pkix.'cmp'.PKIHeader: void setSenderNonce(byte[])>($r5);

        $r6 = new com.initech.pkix.'cmp'.crmf.CertReqMessages;

        specialinvoke $r6.<com.initech.pkix.'cmp'.crmf.CertReqMessages: void <init>()>();

        $r7 = new com.initech.pkix.'cmp'.crmf.CertReqMsg;

        specialinvoke $r7.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void <init>()>();

        virtualinvoke $r7.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void setCertReqId(int)>(0);

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignCertReqID(int)>(0);

        $r8 = new com.initech.pkix.'cmp'.crmf.CertTemplate;

        specialinvoke $r8.<com.initech.pkix.'cmp'.crmf.CertTemplate: void <init>()>();

     label01:
        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignPubKey(java.security.PublicKey)>($r1);

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignPrivKey(java.security.PrivateKey)>($r2);

        virtualinvoke $r8.<com.initech.pkix.'cmp'.crmf.CertTemplate: void setPublicKey(java.security.PublicKey)>($r1);

     label02:
        virtualinvoke $r7.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void setCertTemplate(com.initech.pkix.'cmp'.crmf.CertTemplate)>($r8);

     label03:
        $r9 = virtualinvoke $r7.<com.initech.pkix.'cmp'.crmf.CertReqMsg: com.initech.pkix.'cmp'.crmf.ProofOfPossession getProofOfPossession()>();

     label04:
        $r10 = new com.initech.pkix.'cmp'.crmf.PKMACValue;

     label05:
        $r5 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getAuthCode()>();

        $r1 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PublicKey getSignPubKey()>();

        specialinvoke $r10.<com.initech.pkix.'cmp'.crmf.PKMACValue: void <init>(byte[],java.security.PublicKey)>($r5, $r1);

        $r1 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PublicKey getSignPubKey()>();

        virtualinvoke $r9.<com.initech.pkix.'cmp'.crmf.ProofOfPossession: void setSignature(com.initech.pkix.'cmp'.crmf.PKMACValue,java.security.PublicKey)>($r10, $r1);

        $r2 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PrivateKey getSignPrivKey()>();

     label06:
        $r11 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA1WithRSA>;

     label07:
        virtualinvoke $r9.<com.initech.pkix.'cmp'.crmf.ProofOfPossession: void signSignature(java.security.PrivateKey,com.initech.asn1.useful.AlgorithmID,java.lang.String)>($r2, $r11, "Initech");

     label08:
        virtualinvoke $r6.<com.initech.pkix.'cmp'.crmf.CertReqMessages: void add(com.initech.pkix.'cmp'.crmf.CertReqMsg)>($r7);

     label09:
        virtualinvoke $r3.<com.initech.pkix.'cmp'.PKIMessage: void setContent(int,java.lang.Object)>(0, $r6);

     label10:
        $r12 = new com.initech.pkix.'cmp'.PBMParameter;

        specialinvoke $r12.<com.initech.pkix.'cmp'.PBMParameter: void <init>()>();

        $r11 = new com.initech.asn1.useful.AlgorithmID;

     label11:
        $r5 = virtualinvoke $r12.<com.initech.pkix.'cmp'.PBMParameter: byte[] getEncoded()>();

        specialinvoke $r11.<com.initech.asn1.useful.AlgorithmID: void <init>(java.lang.String,byte[])>("1.2.840.113533.7.66.13", $r5);

     label12:
        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setProtectionAlgID(com.initech.asn1.useful.AlgorithmID)>($r11);

        staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: void a(com.initech.pkix.'cmp'.client.CMPContext,com.initech.pkix.'cmp'.PKIMessage)>($r0, $r3);

        return $r3;

     label13:
        $r13 := @caughtexception;

        $r14 = new com.initech.pkix.'cmp'.client.CMPException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("keypair generate failed[");

        $r16 = virtualinvoke $r13.<java.lang.Exception: java.lang.String toString()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(1, $r16);

        throw $r14;

     label14:
        $r17 := @caughtexception;

        virtualinvoke $r17.<java.lang.Exception: void printStackTrace()>();

        $r14 = new com.initech.pkix.'cmp'.client.CMPException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("fail to generate POP[");

        $r16 = virtualinvoke $r17.<java.lang.Exception: java.lang.String toString()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(1, $r16);

        throw $r14;

     label15:
        $r18 := @caughtexception;

        $r14 = new com.initech.pkix.'cmp'.client.CMPException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("fail to generate PKIMessage[");

        $r16 = virtualinvoke $r18.<java.lang.Exception: java.lang.String toString()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(1, $r16);

        throw $r14;

     label16:
        $r19 := @caughtexception;

        $r11 = null;

        goto label12;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label16;
    }

    private static void a(com.initech.pkix.'cmp'.client.CMPContext, com.initech.pkix.'cmp'.PKIMessage)
    {
        com.initech.pkix.'cmp'.client.CMPContext $r0;
        com.initech.pkix.'cmp'.PKIMessage $r1;
        com.initech.asn1.useful.AlgorithmID $r2;
        java.lang.String $r3, varReplacer29684, varReplacer29685, varReplacer29687;
        boolean $z0;
        byte[] $r4;
        java.security.PrivateKey $r5;
        java.lang.Exception $r6;
        com.initech.pkix.'cmp'.client.CMPException $r7;
        java.lang.StringBuilder $r8;
        int varReplacer29686;

        nop;

        $r0 := @parameter0: com.initech.pkix.'cmp'.client.CMPContext;

        $r1 := @parameter1: com.initech.pkix.'cmp'.PKIMessage;

     label1:
        $r2 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: com.initech.asn1.useful.AlgorithmID getProtectionAlgID()>();

        $r3 = virtualinvoke $r2.<com.initech.asn1.useful.AlgorithmID: java.lang.String getAlg()>();

        varReplacer29687 = "1.2.840.113533.7.66.13";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer29687);

     label2:
        if $z0 == 0 goto label5;

     label3:
        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getAuthCode()>();

        $r2 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: com.initech.asn1.useful.AlgorithmID getProtectionAlgID()>();

        virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void mac(byte[],com.initech.asn1.useful.AlgorithmID)>($r4, $r2);

     label4:
        return;

     label5:
        $r5 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PrivateKey getOldSignPrivKey()>();

        $r2 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: com.initech.asn1.useful.AlgorithmID getProtectionAlgID()>();

        virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void sign(java.security.PrivateKey,com.initech.asn1.useful.AlgorithmID)>($r5, $r2);

     label6:
        return;

     label7:
        $r6 := @caughtexception;

        $r7 = new com.initech.pkix.'cmp'.client.CMPException;

        $r8 = new java.lang.StringBuilder;

        varReplacer29685 = "fail to generate PKIProtection[";

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer29685);

        $r3 = virtualinvoke $r6.<java.lang.Exception: java.lang.String toString()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer29684 = "]";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer29684);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer29686 = 1;

        specialinvoke $r7.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer29686, $r3);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    private static com.initech.pkix.'cmp'.PKIMessage b(com.initech.pkix.'cmp'.client.CMPContext)
    {
        com.initech.pkix.'cmp'.client.CMPContext $r0;
        com.initech.pkix.'cmp'.PKIMessage $r1;
        com.initech.pkix.'cmp'.PKIHeader $r2;
        int $i0, varReplacer29652, varReplacer29653, varReplacer29655, varReplacer29658, varReplacer29659, varReplacer29663, varReplacer29665, varReplacer29667;
        com.initech.asn1.useful.GeneralName $r3;
        byte[] $r4;
        com.initech.pkix.'cmp'.crmf.CertReqMessages $r5;
        com.initech.pkix.'cmp'.crmf.CertReqMsg $r6;
        com.initech.pkix.'cmp'.crmf.CertTemplate $r7;
        java.lang.String $r8, varReplacer29650, varReplacer29651, varReplacer29654, varReplacer29656, varReplacer29657, varReplacer29660, varReplacer29661, varReplacer29662, varReplacer29664, varReplacer29666, varReplacer29668;
        java.security.KeyPairGenerator $r9;
        java.security.KeyPair $r10;
        java.security.PrivateKey $r11;
        java.security.PublicKey $r12;
        com.initech.pkix.'cmp'.crmf.control.CertId $r13;
        java.security.cert.Certificate $r14;
        java.security.cert.X509Certificate $r15;
        java.math.BigInteger $r16;
        java.security.Principal $r17;
        com.initech.asn1.useful.Name $r18;
        com.initech.asn1.ASN1OID $r19;
        com.initech.pkix.'cmp'.crmf.ProofOfPossession $r20;
        com.initech.asn1.useful.AlgorithmID $r21;
        java.lang.Exception $r22, $r25, $r26, $r27;
        com.initech.pkix.'cmp'.client.CMPException $r23;
        java.lang.StringBuilder $r24;

        nop;

        $r0 := @parameter0: com.initech.pkix.'cmp'.client.CMPContext;

        $r1 = new com.initech.pkix.'cmp'.PKIMessage;

        specialinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void <init>()>();

        $r2 = virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader getHeader()>();

        $i0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: int getVersion()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setVersion(int)>($i0);

        $r3 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: com.initech.asn1.useful.GeneralName getSender()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setSender(com.initech.asn1.useful.GeneralName)>($r3);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] genTransactionID()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setTransacID(byte[])>($r4);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] genSenderNonce()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setSenderNonce(byte[])>($r4);

        $r5 = new com.initech.pkix.'cmp'.crmf.CertReqMessages;

        specialinvoke $r5.<com.initech.pkix.'cmp'.crmf.CertReqMessages: void <init>()>();

        $r6 = new com.initech.pkix.'cmp'.crmf.CertReqMsg;

        specialinvoke $r6.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void <init>()>();

        varReplacer29667 = 0;

        virtualinvoke $r6.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void setCertReqId(int)>(varReplacer29667);

        varReplacer29658 = 0;

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignCertReqID(int)>(varReplacer29658);

        $r7 = new com.initech.pkix.'cmp'.crmf.CertTemplate;

        specialinvoke $r7.<com.initech.pkix.'cmp'.crmf.CertTemplate: void <init>()>();

        $r3 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: com.initech.asn1.useful.GeneralName getSender()>();

        $r8 = virtualinvoke $r3.<com.initech.asn1.useful.GeneralName: java.lang.String toString()>();

        virtualinvoke $r7.<com.initech.pkix.'cmp'.crmf.CertTemplate: void setSubjectDN(java.lang.String)>($r8);

     label01:
        varReplacer29650 = "RSA";

        $r9 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer29650);

        varReplacer29652 = 1024;

        virtualinvoke $r9.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer29652);

        $r10 = virtualinvoke $r9.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

        $r11 = virtualinvoke $r10.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        $r12 = virtualinvoke $r10.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignPubKey(java.security.PublicKey)>($r12);

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignPrivKey(java.security.PrivateKey)>($r11);

        virtualinvoke $r7.<com.initech.pkix.'cmp'.crmf.CertTemplate: void setPublicKey(java.security.PublicKey)>($r12);

     label02:
        virtualinvoke $r6.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void setCertTemplate(com.initech.pkix.'cmp'.crmf.CertTemplate)>($r7);

        $r13 = new com.initech.pkix.'cmp'.crmf.control.CertId;

     label03:
        $r14 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.cert.Certificate getOldSignCertificate()>();

        $r15 = (java.security.cert.X509Certificate) $r14;

        $r16 = virtualinvoke $r15.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        $r14 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.cert.Certificate getOldSignCertificate()>();

        $r15 = (java.security.cert.X509Certificate) $r14;

        $r17 = virtualinvoke $r15.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $r18 = (com.initech.asn1.useful.Name) $r17;

        specialinvoke $r13.<com.initech.pkix.'cmp'.crmf.control.CertId: void <init>(java.math.BigInteger,com.initech.asn1.useful.Name)>($r16, $r18);

     label04:
        $r19 = new com.initech.asn1.ASN1OID;

     label05:
        varReplacer29657 = "1.3.6.1.5.5.7.5.1.5";

        specialinvoke $r19.<com.initech.asn1.ASN1OID: void <init>(java.lang.String)>(varReplacer29657);

        virtualinvoke $r6.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void addControl(com.initech.asn1.ASN1OID,com.initech.pkix.'cmp'.crmf.control.PKIXControl)>($r19, $r13);

     label06:
        $r20 = virtualinvoke $r6.<com.initech.pkix.'cmp'.crmf.CertReqMsg: com.initech.pkix.'cmp'.crmf.ProofOfPossession getProofOfPossession()>();

        $r3 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: com.initech.asn1.useful.GeneralName getSender()>();

        $r12 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PublicKey getSignPubKey()>();

        virtualinvoke $r20.<com.initech.pkix.'cmp'.crmf.ProofOfPossession: void setSignature(com.initech.asn1.useful.GeneralName,java.security.PublicKey)>($r3, $r12);

        $r11 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PrivateKey getSignPrivKey()>();

     label07:
        $r21 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA1WithRSA>;

     label08:
        varReplacer29668 = "INITECH";

        virtualinvoke $r20.<com.initech.pkix.'cmp'.crmf.ProofOfPossession: void signSignature(java.security.PrivateKey,com.initech.asn1.useful.AlgorithmID,java.lang.String)>($r11, $r21, varReplacer29668);

     label09:
        virtualinvoke $r5.<com.initech.pkix.'cmp'.crmf.CertReqMessages: void add(com.initech.pkix.'cmp'.crmf.CertReqMsg)>($r6);

     label10:
        varReplacer29653 = 2;

        virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void setContent(int,java.lang.Object)>(varReplacer29653, $r5);

     label11:
        $r21 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA1WithRSA>;

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setProtectionAlgID(com.initech.asn1.useful.AlgorithmID)>($r21);

        staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: void a(com.initech.pkix.'cmp'.client.CMPContext,com.initech.pkix.'cmp'.PKIMessage)>($r0, $r1);

        return $r1;

     label12:
        $r22 := @caughtexception;

        $r23 = new com.initech.pkix.'cmp'.client.CMPException;

        $r24 = new java.lang.StringBuilder;

        varReplacer29666 = "keypair generate failed[";

        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer29666);

        $r8 = virtualinvoke $r22.<java.lang.Exception: java.lang.String toString()>();

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        varReplacer29662 = "]";

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer29662);

        $r8 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer29659 = 1;

        specialinvoke $r23.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer29659, $r8);

        throw $r23;

     label13:
        $r25 := @caughtexception;

        virtualinvoke $r25.<java.lang.Exception: void printStackTrace()>();

        $r23 = new com.initech.pkix.'cmp'.client.CMPException;

        $r24 = new java.lang.StringBuilder;

        varReplacer29664 = "fail to add oldCertID control[";

        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer29664);

        $r8 = virtualinvoke $r25.<java.lang.Exception: java.lang.String toString()>();

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        varReplacer29654 = "]";

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer29654);

        $r8 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer29663 = 1;

        specialinvoke $r23.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer29663, $r8);

        throw $r23;

     label14:
        $r26 := @caughtexception;

        virtualinvoke $r26.<java.lang.Exception: void printStackTrace()>();

        $r23 = new com.initech.pkix.'cmp'.client.CMPException;

        $r24 = new java.lang.StringBuilder;

        varReplacer29656 = "fail to generate POP[";

        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer29656);

        $r8 = virtualinvoke $r26.<java.lang.Exception: java.lang.String toString()>();

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        varReplacer29661 = "]";

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer29661);

        $r8 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer29665 = 1;

        specialinvoke $r23.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer29665, $r8);

        throw $r23;

     label15:
        $r27 := @caughtexception;

        $r23 = new com.initech.pkix.'cmp'.client.CMPException;

        $r24 = new java.lang.StringBuilder;

        varReplacer29651 = "fail to generate PKIMessage[";

        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer29651);

        $r8 = virtualinvoke $r27.<java.lang.Exception: java.lang.String toString()>();

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        varReplacer29660 = "]";

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer29660);

        $r8 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer29655 = 1;

        specialinvoke $r23.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer29655, $r8);

        throw $r23;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label06 to label07 with label14;
        catch java.lang.Exception from label08 to label09 with label14;
        catch java.lang.Exception from label10 to label11 with label15;
    }

    private static com.initech.pkix.'cmp'.PKIMessage c(com.initech.pkix.'cmp'.client.CMPContext)
    {
        com.initech.pkix.'cmp'.client.CMPContext $r0;
        com.initech.pkix.'cmp'.PKIMessage $r1;
        com.initech.pkix.'cmp'.PKIHeader $r2;
        int $i0, varReplacer29646, varReplacer29649;
        com.initech.asn1.useful.GeneralName $r3;
        byte[] $r4;
        com.initech.pkix.'cmp'.RevReqContent $r5;
        com.initech.pkix.'cmp'.RevDetails $r6;
        java.security.cert.Certificate $r7;
        com.initech.x509.X509CertImpl $r8;
        com.initech.asn1.useful.AlgorithmID $r9;
        java.lang.Exception $r10;
        com.initech.pkix.'cmp'.client.CMPException $r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r13, varReplacer29647, varReplacer29648;

        nop;

        $r0 := @parameter0: com.initech.pkix.'cmp'.client.CMPContext;

        $r1 = new com.initech.pkix.'cmp'.PKIMessage;

        specialinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void <init>()>();

        $r2 = virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader getHeader()>();

        $i0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: int getVersion()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setVersion(int)>($i0);

        $r3 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: com.initech.asn1.useful.GeneralName getSender()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setSender(com.initech.asn1.useful.GeneralName)>($r3);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] genSenderNonce()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setSenderNonce(byte[])>($r4);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] genTransactionID()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setTransacID(byte[])>($r4);

        $r5 = new com.initech.pkix.'cmp'.RevReqContent;

        specialinvoke $r5.<com.initech.pkix.'cmp'.RevReqContent: void <init>()>();

        $r6 = new com.initech.pkix.'cmp'.RevDetails;

        specialinvoke $r6.<com.initech.pkix.'cmp'.RevDetails: void <init>()>();

        $r7 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.cert.Certificate getOldSignCertificate()>();

        $r8 = (com.initech.x509.X509CertImpl) $r7;

        virtualinvoke $r6.<com.initech.pkix.'cmp'.RevDetails: void setFromCertificate(com.initech.x509.X509CertImpl)>($r8);

        virtualinvoke $r5.<com.initech.pkix.'cmp'.RevReqContent: void add(com.initech.pkix.'cmp'.RevDetails)>($r6);

     label1:
        varReplacer29646 = 11;

        virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void setContent(int,java.lang.Object)>(varReplacer29646, $r5);

     label2:
        $r9 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA1WithRSA>;

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setProtectionAlgID(com.initech.asn1.useful.AlgorithmID)>($r9);

        staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: void a(com.initech.pkix.'cmp'.client.CMPContext,com.initech.pkix.'cmp'.PKIMessage)>($r0, $r1);

        return $r1;

     label3:
        $r10 := @caughtexception;

        $r11 = new com.initech.pkix.'cmp'.client.CMPException;

        $r12 = new java.lang.StringBuilder;

        varReplacer29647 = "fail to generate PKIMessage[";

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer29647);

        $r13 = virtualinvoke $r10.<java.lang.Exception: java.lang.String toString()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        varReplacer29648 = "]";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer29648);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer29649 = 1;

        specialinvoke $r11.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer29649, $r13);

        throw $r11;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static com.initech.pkix.'cmp'.PKIMessage d(com.initech.pkix.'cmp'.client.CMPContext)
    {
        com.initech.pkix.'cmp'.client.CMPContext $r0;
        com.initech.pkix.'cmp'.PKIMessage $r1;
        com.initech.pkix.'cmp'.PKIHeader $r2;
        int $i0, varReplacer29639, varReplacer29641, varReplacer29642;
        com.initech.asn1.useful.GeneralName $r3;
        byte[] $r4;
        com.initech.pkix.'cmp'.CertConfirmContent $r5;
        com.initech.pkix.'cmp'.CertStatus $r6;
        java.security.cert.Certificate $r7;
        java.security.cert.X509Certificate $r8;
        java.lang.Exception $r9, $r13;
        com.initech.pkix.'cmp'.client.CMPException $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12, varReplacer29640, varReplacer29643, varReplacer29644, varReplacer29645;

        nop;

        $r0 := @parameter0: com.initech.pkix.'cmp'.client.CMPContext;

        $r1 = new com.initech.pkix.'cmp'.PKIMessage;

        specialinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void <init>()>();

        $r2 = virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader getHeader()>();

        $i0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: int getVersion()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setVersion(int)>($i0);

        $r3 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: com.initech.asn1.useful.GeneralName getRecipient()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setRecipient(com.initech.asn1.useful.GeneralName)>($r3);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getSenderNonce()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setSenderNonce(byte[])>($r4);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getRecipientNonce()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setRecipNonce(byte[])>($r4);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getTransactionID()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setTransacID(byte[])>($r4);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getSenderKID()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setSenderKID(byte[])>($r4);

        $r5 = new com.initech.pkix.'cmp'.CertConfirmContent;

        specialinvoke $r5.<com.initech.pkix.'cmp'.CertConfirmContent: void <init>()>();

        $r6 = new com.initech.pkix.'cmp'.CertStatus;

     label1:
        $r7 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.cert.Certificate getSignCertificate()>();

        $r8 = (java.security.cert.X509Certificate) $r7;

        specialinvoke $r6.<com.initech.pkix.'cmp'.CertStatus: void <init>(java.security.cert.X509Certificate)>($r8);

        $i0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: int getSignCertReqID()>();

        virtualinvoke $r6.<com.initech.pkix.'cmp'.CertStatus: void setCertReqId(int)>($i0);

        virtualinvoke $r5.<com.initech.pkix.'cmp'.CertConfirmContent: void add(com.initech.pkix.'cmp'.CertStatus)>($r6);

     label2:
        varReplacer29641 = 24;

        virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void setContent(int,java.lang.Object)>(varReplacer29641, $r5);

     label3:
        staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: void a(com.initech.pkix.'cmp'.client.CMPContext,com.initech.pkix.'cmp'.PKIMessage)>($r0, $r1);

        return $r1;

     label4:
        $r9 := @caughtexception;

        $r10 = new com.initech.pkix.'cmp'.client.CMPException;

        $r11 = new java.lang.StringBuilder;

        varReplacer29640 = "fail to hash certificate[";

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer29640);

        $r12 = virtualinvoke $r9.<java.lang.Exception: java.lang.String toString()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        varReplacer29644 = "]";

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer29644);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer29642 = 1;

        specialinvoke $r10.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer29642, $r12);

        throw $r10;

     label5:
        $r13 := @caughtexception;

        $r10 = new com.initech.pkix.'cmp'.client.CMPException;

        $r11 = new java.lang.StringBuilder;

        varReplacer29645 = "fail to generate PKIMessage[";

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer29645);

        $r12 = virtualinvoke $r13.<java.lang.Exception: java.lang.String toString()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        varReplacer29643 = "]";

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer29643);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer29639 = 1;

        specialinvoke $r10.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer29639, $r12);

        throw $r10;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Exception from label2 to label3 with label5;
    }

    private static com.initech.pkix.'cmp'.PKIMessage e(com.initech.pkix.'cmp'.client.CMPContext)
    {
        com.initech.pkix.'cmp'.client.CMPContext $r0;
        com.initech.pkix.'cmp'.PKIMessage $r1;
        com.initech.pkix.'cmp'.PKIHeader $r2;
        int $i0, varReplacer29634, varReplacer29635;
        com.initech.asn1.useful.GeneralName $r3;
        byte[] $r4;
        java.lang.Exception $r5;
        java.io.PrintStream $r6;
        com.initech.pkix.'cmp'.client.CMPException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9, varReplacer29633, varReplacer29637, varReplacer29638;
        null_type varReplacer29636;

        nop;

        $r0 := @parameter0: com.initech.pkix.'cmp'.client.CMPContext;

        $r1 = new com.initech.pkix.'cmp'.PKIMessage;

        specialinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void <init>()>();

        $r2 = virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader getHeader()>();

        $i0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: int getVersion()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setVersion(int)>($i0);

        $r3 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: com.initech.asn1.useful.GeneralName getRecipient()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setRecipient(com.initech.asn1.useful.GeneralName)>($r3);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getSenderNonce()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setSenderNonce(byte[])>($r4);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getRecipientNonce()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setRecipNonce(byte[])>($r4);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getTransactionID()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setTransacID(byte[])>($r4);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getSenderKID()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setSenderKID(byte[])>($r4);

     label1:
        varReplacer29635 = 19;

        varReplacer29636 = null;

        virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void setContent(int,java.lang.Object)>(varReplacer29635, varReplacer29636);

     label2:
        staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: void a(com.initech.pkix.'cmp'.client.CMPContext,com.initech.pkix.'cmp'.PKIMessage)>($r0, $r1);

        return $r1;

     label3:
        $r5 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        varReplacer29637 = "this can\'t emerge!";

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(varReplacer29637);

        $r7 = new com.initech.pkix.'cmp'.client.CMPException;

        $r8 = new java.lang.StringBuilder;

        varReplacer29633 = "fail to generate PKIMessage[";

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer29633);

        $r9 = virtualinvoke $r5.<java.lang.Exception: java.lang.String toString()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        varReplacer29638 = "]";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer29638);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer29634 = 1;

        specialinvoke $r7.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer29634, $r9);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static com.initech.pkix.'cmp'.PKIMessage format(com.initech.pkix.'cmp'.client.CMPContext, int)
    {
        com.initech.pkix.'cmp'.client.CMPContext $r0;
        int $i0, varReplacer29606;
        java.lang.Exception $r1;
        com.initech.pkix.'cmp'.PKIMessage $r2;
        java.lang.String varReplacer29605;

        nop;

        $r0 := @parameter0: com.initech.pkix.'cmp'.client.CMPContext;

        $i0 := @parameter1: int;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 2: goto label3;
            case 7: goto label4;
            case 11: goto label5;
            case 19: goto label7;
            case 24: goto label6;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.Exception;

        varReplacer29605 = "Not Yet Implemented";

        specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer29605);

        throw $r1;

     label2:
        varReplacer29606 = 2048;

        $r2 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext,int)>($r0, varReplacer29606);

        return $r2;

     label3:
        $r2 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        return $r2;

     label4:
        $r2 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage b(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        return $r2;

     label5:
        $r2 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage c(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        return $r2;

     label6:
        $r2 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage d(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        return $r2;

     label7:
        $r2 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage e(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        return $r2;
    }

    public static com.initech.pkix.'cmp'.PKIMessage format(com.initech.pkix.'cmp'.client.CMPContext, int, int)
    {
        com.initech.pkix.'cmp'.client.CMPContext $r0;
        int $i0, $i1, varReplacer29617;
        java.lang.Exception $r1;
        com.initech.pkix.'cmp'.PKIMessage $r2;
        java.lang.String varReplacer29616;

        nop;

        $r0 := @parameter0: com.initech.pkix.'cmp'.client.CMPContext;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        lookupswitch(0)
        {
            case 0: goto label2;
            case 2: goto label3;
            case 7: goto label4;
            case 11: goto label5;
            case 19: goto label7;
            case 24: goto label6;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.Exception;

        varReplacer29616 = "Not Yet Implemented";

        specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer29616);

        throw $r1;

     label2:
        varReplacer29617 = 1024;

        $r2 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext,int)>($r0, varReplacer29617);

        return $r2;

     label3:
        $r2 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        return $r2;

     label4:
        $r2 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage b(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        return $r2;

     label5:
        $r2 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage c(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        return $r2;

     label6:
        $r2 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage d(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        return $r2;

     label7:
        $r2 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage e(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        return $r2;
    }

    public static com.initech.pkix.'cmp'.PKIMessage format(com.initech.pkix.'cmp'.client.CMPContext, int, java.security.PublicKey, java.security.PrivateKey)
    {
        com.initech.pkix.'cmp'.client.CMPContext $r0;
        int $i0;
        java.security.PublicKey $r1;
        java.security.PrivateKey $r2;
        java.lang.Exception $r3;
        com.initech.pkix.'cmp'.PKIMessage $r4;

        $r0 := @parameter0: com.initech.pkix.'cmp'.client.CMPContext;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.security.PublicKey;

        $r2 := @parameter3: java.security.PrivateKey;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 2: goto label3;
            case 7: goto label4;
            case 11: goto label5;
            case 19: goto label7;
            case 24: goto label6;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.Exception;

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>("Not Yet Implemented");

        throw $r3;

     label2:
        $r4 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext,java.security.PublicKey,java.security.PrivateKey)>($r0, $r1, $r2);

        return $r4;

     label3:
        $r4 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        return $r4;

     label4:
        $r4 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage b(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        return $r4;

     label5:
        $r4 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage c(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        return $r4;

     label6:
        $r4 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage d(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        return $r4;

     label7:
        $r4 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage e(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        return $r4;
    }
}
