Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <u.aly.cm: java.lang.String r(android.content.Context)>
		SHA-256: 7ddb8756d7edb79f60a99a3ecdb48c28c6b7fa89e8e56c7dffd9b3cfc4a4f96
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <cn.jpush.android.util.a: java.lang.String b(java.lang.String)>
		SHA-256: 8e4d3ce3f6a3961627a164a718666216cbb71ad4d5d8d2a6bc5f52f33a56ba40
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(byte[])>
		SHA-256: edf8d4512ea4d685450853f37af1c60bdb4661ea96e0a8476dfe9d41f4bd92a
		Secure: true
	Object:
		Variable: varReplacer11014
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer11014)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: 414db0caf8cd3e9d9c0a63e976936a74713f5d992b23942016216867bcedfb98
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer11014)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: 4bfd3a79c018dfa09f9f0701366dc71d69c9f3046c4452e4543ca0c20bec493c
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.mm.a.b: java.lang.String a(byte[])>
		SHA-256: 49c5be17f6636d1cddfea76e5c36d1ba1f88788c784d140190c2a1684f41fbeb
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16288)
		Method: <com.dianyue.shuangyue.utils.universalimageloader.a.a.b.c: byte[] a(byte[])>
		SHA-256: bf691e2b990743458cc9fa46d3913363994619ada20355693830383f5a0e7031
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <cn.jpush.android.util.a: java.lang.String a(byte[])>
		SHA-256: c4d4007881f660d31095047c858a7cddf0ade719a9b3b9bb76358ae5434d949b
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String)>
		SHA-256: 67f8276464ff2b603934593edfd3991f3b602712d92e93712f83733b7783915
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.a: java.lang.String b(java.lang.String)>
		SHA-256: f5d4bf9ca7f7fb9000cf6a89dae134f0d93e52312b490bf6d8a3635e0c274af1
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.amap.api.mapcore2d.dc: java.lang.String c(android.content.Context,byte[])>
		SHA-256: 8efbf86f5ea16d28f9b105ce3b7240b42e587f75eb726331522c698e11e36cc4
		Secure: true
	Object:
		Variable: $r21
		Type: javax.net.ssl.SSLContext
		Statement: $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1892)
		Method: <okhttp3.ah: void <init>(okhttp3.ai)>
		SHA-256: 969adf2513f80ccb44361a823fb6ef441d34d569dd0c2dfb7017f34203ed0d7d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer16248)
		Method: <u.aly.al: void <init>(java.security.KeyStore)>
		SHA-256: 2f980e7aa3c5ff6b593f2b4f970db212fe1bae5e92c607e63c65bc08b89bccda
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.iflytek.sunflower.c.c: java.lang.String a(java.lang.String)>
		SHA-256: a980ab1cf206f1b2d55efecf6da410427f487cf11829045ba51026744a966f67
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15681)
		Method: <u.aly.cm: java.lang.String r(android.content.Context)>
		SHA-256: d73c8eb79fd28167015e809b7e431fb6d4635125b8d83a282870170d481b98aa
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: 667210ec6c57b08d5df500b485f4ccb0e5cdaf1471b1388f525ac35aeea49d65
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <cn.jpush.android.util.g: byte[] a(java.io.File)>
		SHA-256: c674f616d8a4149c10b3f91dfa9584390dcb6804f11b69608665967bac43ce50
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amap.api.mapcore2d.df: byte[] e(java.lang.String)>
		SHA-256: 82ccb6f87a6fa0897797ba40aa5f6af77ac165443e2b91d24dc90df6348d217f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14805)
		Method: <u.aly.cn: java.lang.String a(java.lang.String)>
		SHA-256: c56816fa4c236023a194cd0650a8f9a18656114390f49ec2fa3d4468304b48ee
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cn: java.lang.String b(java.lang.String)>
		SHA-256: f8d897717eab916f1850eea1d60e41b8fe1d195bf16d452b12f87adea8392a4f
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cj: byte[] b(byte[])>
		SHA-256: 4c900ece8f5922e7875f343933ffca231d7462c481943b7e8f1b1528b82a0945
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer10945)
		Method: <com.amap.api.mapcore2d.dc: java.lang.String c(android.content.Context,byte[])>
		SHA-256: 40c820aabb87c8d0189efd751143efd164774f2eaff914a1b68c069310e4d9fb
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.iflytek.cloud.a.i.k: java.lang.String b(java.lang.String)>
		SHA-256: 3db1e8c7300ea6b8ceccc7f0e48d9d6ddaff89f31cf48002dd34791f4e992cb7
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cj: java.lang.String c(java.lang.String)>
		SHA-256: e9e746e06a263ae3298f9afd9aae2329ecf87ed3edcdb531eef74b80daf701a5
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer14715)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: a51d21e42a4149f2c70f7b78bbeb89d03fbabd247f17856591fca2faefb6fb45
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10868)
		Method: <com.amap.api.mapcore2d.da: java.lang.String d(android.content.Context)>
		SHA-256: 6b84f280775872f4da45e80cd8abac44a8272755171cd99e2a0d20c4a4763586
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.dianyue.shuangyue.utils.universalimageloader.a.a.b.c: byte[] a(byte[])>
		SHA-256: 2c9b15e05768c3bb41a85d6b678b8517c98e5491cef1f7980fad6a50e7446d8b
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3740)
		Method: <com.dianyue.shuangyue.net.http.p: void <init>(java.security.KeyStore)>
		SHA-256: cea158daf802e1086a4468da1bb5f193c8c33d3641eb4337320f124c6acd9a57
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: f44b1d8a1562491f3628393050d3051eaaddafc0a1521f6a48f82755c4d836aa
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.g: byte[] a(java.io.File)>
		SHA-256: 9d5518b928395bd05bce5b6b363adfca98533751c6f8b6369158fc7086bf8946
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11253)
		Method: <com.iflytek.sunflower.c.c: java.lang.String a(java.lang.String)>
		SHA-256: b7546d7723a9ef3ba7bbd5ac58c878b648666ded45567866d0d4713357214382
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: baf36ba0be0be9712f0773d5e6bd6ea1289e24d9f49bc21a49b2c6b599778b28
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer14718)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: cdfa47c26ab14f0da11bbde4622c199b22535243d9f209f84532e51d002123c5
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer15907)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 3de4342a9bd53c1d0c9ee42f49445bac630a27a04190025527b2239a41e3682
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10998)
		Method: <com.amap.api.mapcore2d.de: byte[] a(byte[],java.security.Key)>
		SHA-256: 43024d821f17be51eac8ab58a7e046ded6a8827bf9fea75f558309004e90e074
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11015)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: 7db9da6a582fc06d6c931b2a9155da1067a460d4500c1db17aa2d11f908515ca
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amap.api.mapcore2d.de: byte[] a(byte[],java.security.Key)>
		SHA-256: c727289a66f61570b588ce85ca15414d2e5030eac97434fa4e1adfb6843260e8
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14717)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: c051d0ec0b46d0dd2078c57a9672376c4716fabe27986204b2bb9206c4e38e63
		Secure: false
	Object:
		Variable: varReplacer15907
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer15907)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 25f195c757bbb7d37df0497aa6461ff055a99d7b0c39de5c47baa6678f80993f
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer15908)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 562a45f7623cd01402be49480fa162378beb012c08a2e48b2f9ae1c576c49bce
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.dianyue.shuangyue.net.b: java.lang.String c(java.lang.String)>
		SHA-256: aaa2a9b912a557a05736631d9925e233d1c938a0d56293557677e121c0d6a658
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11005)
		Method: <com.amap.api.mapcore2d.df: byte[] e(java.lang.String)>
		SHA-256: c6bcd24d7f31d1efb8857b2ae37930e8cd91a3fbd468d000aff87ad130d7a503
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: 4e767d3d3eba2d7ee31e03fc2e2634e29a28892a4e9da789c1bf1489d6de298c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <com.dianyue.shuangyue.net.http.p: java.security.KeyStore a()>
		SHA-256: 2b07ca059440c5511bd37927988fcf6efa990e1795b8235032779d20bc37799b
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <u.aly.ag: void a()>
		SHA-256: 5cc4e9b101385fa66f6ff1d11413d5762bd39a30728f5c1ea31647b0f7bd3352
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15173)
		Method: <u.aly.cj: java.lang.String c(java.lang.String)>
		SHA-256: 81b39fdaf5087b9b120b97f75c76aa4b7754c7e70ad62065c458a7a849a674c2
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 8f959de29dd11411b269c986bbaf8c6255646eb9a772a5c5a0ee108386cc476f
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7519)
		Method: <com.pgyersdk.conf.a: void g(android.content.Context)>
		SHA-256: 7c604a620dedf0a9f847314a64433594ffefe8c419278a4441e50f7139b7ce84
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <cn.jpush.android.util.ai: java.lang.String b(java.lang.String)>
		SHA-256: 589f10f65a2d04fe4b0bb06abf8101daf047c6762569191c753224ee717411cc
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3702)
		Method: <com.dianyue.shuangyue.net.b: java.lang.String c(java.lang.String)>
		SHA-256: 35454e57e5016be8323c9116dda53bf117b69cd507203bdae9f6c1a0f9b58037
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r3.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.amap.api.mapcore2d.dc: java.lang.String c(android.content.Context,byte[])>
		SHA-256: 771d48022bf3b5cd1975d8160cfa1b1cfd84b522b7cfbf5fa22ae7e3e0ec094a
		Secure: true
	Object:
		Variable: varReplacer14718
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer14718)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: e2bed1694228840b1830cadd6fdb8a1142aef89f4921171e1ba2bb2471cf2ba8
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14713)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: 4bf097f9edf0e0e67be3c2567a49d7feb65720d59dec638b6cc15e523d031f66
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15480)
		Method: <u.aly.cj: byte[] b(byte[])>
		SHA-256: b5b0ff312342aa7c1948e1a176dc4fa4ab81ae96783f5c2b11cf2c30d57a636d
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6426)
		Method: <com.tencent.mm.a.b: java.lang.String a(byte[])>
		SHA-256: 81974eb6839d0d4333673a2f1e2e48ab4f7be8cd593e680fb5860e1b8dbbee02
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.ai: java.lang.String b(java.lang.String)>
		SHA-256: e3190b6f4323befbf18670a0eb10cd2790133ea7e985cb6f92d999f647f560e9
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.amap.api.mapcore2d.da: java.lang.String d(android.content.Context)>
		SHA-256: ce582d3359589e0fcc5e3efea69cc0ee28ef21a78ea71e381a925189678ced84
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: c0ff5c7b3a0bb15c203075d8186ded0937736db447ed4b0f9fef6c06ec241485
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15479)
		Method: <u.aly.cn: java.lang.String b(java.lang.String)>
		SHA-256: 3c7b84f3716d6378e3cc94f04dc3331dab7ffc4637746c4ccd49fdd57b11c4d5
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.pgyersdk.conf.a: void g(android.content.Context)>
		SHA-256: 1a0c3c23a5d3842fdc4a6129337c825534dd47cb3a9bfb4079f1e5fe30b0a00d
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.dianyue.shuangyue.googleplay.util.k: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 7881da5df3a1926d35307ca3d59bba8d3320568b6e7647592955d6c72c4e4e4d
		Secure: false
	Object:
		Variable: varReplacer14715
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer14715)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: bd9e5b086fc324e72ae4a50d4a7985d8ac8af4c62f737916b7c456ecccf93fca
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: 918bebe403e50fa57eec244da90c3e43f8e3d5906186b0e4ed6a963aa2f69db3
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: void <clinit>()>
		SHA-256: 81571f0f65b71822bd958d9fd94e85c4e0b32e123ab4c4b6ad790e4712eb88cf
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cn: java.lang.String a(java.lang.String)>
		SHA-256: a99da5275203c1ac4c0963ef6103e48d5c693ec8820291a487cdbb4c564fc729
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13683)
		Method: <com.iflytek.cloud.a.i.k: java.lang.String b(java.lang.String)>
		SHA-256: 55259c2c20380ee803955e292e279ea7fa3ead7abcc1c47d3eff7b4b66618508
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer14456)
		Method: <com.dianyue.shuangyue.googleplay.util.k: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 36e9a33e26852545440fa62cfe4b7520b13fffae4ad36cd872d4db60a16ba745
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String)>
		SHA-256: bfdf7a7690f99313d7d90ffe799c08accc3face2ec5e8c2f9d6c2ccbb3a7f821
		Secure: true

Findings in Java Class: cn.jpush.android.util.g

	 in Method: byte[] a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #c674f616d8a4149c10b3f91dfa9584390dcb6804f11b69608665967bac43ce50)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.amap.api.mapcore2d.da

	 in Method: java.lang.String d(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6b84f280775872f4da45e80cd8abac44a8272755171cd99e2a0d20c4a4763586)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10868)


Findings in Java Class: com.amap.api.mapcore2d.dc

	 in Method: java.lang.String c(android.content.Context,byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyGenerator (on Object #40c820aabb87c8d0189efd751143efd164774f2eaff914a1b68c069310e4d9fb)
			Operation on object of type javax.crypto.KeyGenerator object not completed. Expected call to generateKey, init
			at statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer10945)


Findings in Java Class: u.aly.cj

	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #81b39fdaf5087b9b120b97f75c76aa4b7754c7e70ad62065c458a7a849a674c2)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15173)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer14718)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer14716, $r2, $r4)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer14714, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer14714, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer14715)


Findings in Java Class: okhttp3.ah

	 in Method: void <init>(okhttp3.ai)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1893, varReplacer1893, varReplacer1893)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1893, varReplacer1893, varReplacer1893)


Findings in Java Class: u.aly.al

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16246, r7, varReplacer16246)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16246, r7, varReplacer16246)


Findings in Java Class: com.dianyue.shuangyue.net.http.p

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3741, r5, varReplacer3741)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3741, r5, varReplacer3741)


Findings in Java Class: com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters

	 in Method: java.lang.String calculateSignature(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer15907)


Findings in Java Class: com.amap.api.mapcore2d.de

	 in Method: byte[] a(byte[],java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer10999, $r1)


Findings in Java Class: com.dianyue.shuangyue.googleplay.util.k

	 in Method: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 68

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	TypestateError: 1
	RequiredPredicateError: 16
	ConstraintError: 2
=====================================================================