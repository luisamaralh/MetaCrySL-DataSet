Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.vp.astrology.existence_of_aliens.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.SSLContext
		Statement: $r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer364)
		Method: <com.paytm.pgsdk.PaytmSSLSocketFactory: void <init>(android.content.Context,com.paytm.pgsdk.PaytmClientCertificate)>
		SHA-256: 533702b41fdcd911c36793bc471593718fceadf57e5063d92d98beadebd8c4f9
		Secure: false
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r5)
		Method: <com.vp.astrology.existence_of_aliens.storage.security.SecurityUtil: byte[] encrypt(byte[],int,byte[],byte[])>
		SHA-256: d865fa4a6be1cffc3fe78c24314de27b68f26ee69a0aa175bea0f5458f3b1e99
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.vp.astrology.existence_of_aliens.storage.security.SecurityUtil: byte[] encrypt(byte[],int,byte[],byte[])>
		SHA-256: de3eb5a3337bf4a456c8e15fd2e8db60decd72c009501e7768c31cadf8fd20c
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer355)
		Method: <com.paytm.pgsdk.PaytmSSLSocketFactory: void <init>(android.content.Context,com.paytm.pgsdk.PaytmClientCertificate)>
		SHA-256: cf3f3f1d9191ae0a71b073f40e95d97db65ee8cc8bc070cd31462d3744b3f3c2
		Secure: true
	Object:
		Variable: $r19
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r19 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer361)
		Method: <com.paytm.pgsdk.PaytmSSLSocketFactory: void <init>(android.content.Context,com.paytm.pgsdk.PaytmClientCertificate)>
		SHA-256: 35471c4bad09bf5d082b0f6df8dc79a8786bee6d68d7309a55ce556873a5672f
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.SSLContext
		Statement: $r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer374)
		Method: <com.paytm.pgsdk.PaytmSSLSocketFactory: void <init>(android.content.Context,com.paytm.pgsdk.PaytmClientCertificate)>
		SHA-256: 1bff540bbaf9e6d3f0f4bc1b572738fdbed90eb1b7b9ad98aa6c229d4c8dda75
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.vp.astrology.existence_of_aliens.storage.security.SecurityUtil: byte[] encrypt(byte[],int,byte[],byte[])>
		SHA-256: 77b60291cedba28e7962c668a4d62324d67d93eb018070d22896903e03414584
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r5)
		Method: <com.vp.astrology.existence_of_aliens.storage.security.SecurityUtil: byte[] encrypt(byte[],int,byte[],byte[])>
		SHA-256: e88c5140168292deb7004c6a421a48a791f97f9f10debe2853cc9290374baa9a
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)
		Method: <com.vp.astrology.existence_of_aliens.storage.security.SecurityUtil: byte[] encrypt(byte[],int,byte[],byte[])>
		SHA-256: 2d5ae36871a433a41bccb48af4f0eca0b3332b40921fe5adc0206e8b0af5cacf
		Secure: false
	Object:
		Variable: $r20
		Type: javax.net.ssl.KeyManager[]
		Statement: $r20 = virtualinvoke $r19.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.paytm.pgsdk.PaytmSSLSocketFactory: void <init>(android.content.Context,com.paytm.pgsdk.PaytmClientCertificate)>
		SHA-256: a13c1cb8af06be6a4f03d4a6801c8220e011feeb5f986a66cca6aefc663a744b
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.SSLContext
		Statement: $r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer363)
		Method: <com.paytm.pgsdk.PaytmSSLSocketFactory: void <init>(android.content.Context,com.paytm.pgsdk.PaytmClientCertificate)>
		SHA-256: 56f11c3be4720db0c1143b7082d5e2ec7b53a25952ab75e9b6b3e7f676fee5ec
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer503)
		Method: <com.vp.astrology.existence_of_aliens.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: aee626f785a6c718c3e140e4fb9686576b95ed91b015d8d4d4567cb2ab965023
		Secure: false

Findings in Java Class: com.paytm.pgsdk.PaytmSSLSocketFactory

	 in Method: void <init>(android.content.Context,com.paytm.pgsdk.PaytmClientCertificate)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer368, r23, varReplacer368)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r20, r23, varReplacer354)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r20, r23, varReplacer354)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer368, r23, varReplacer368)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer357, r23, varReplacer357)

		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #35471c4bad09bf5d082b0f6df8dc79a8786bee6d68d7309a55ce556873a5672f)
			First parameter (with value "X509") should be any of {PKIX}
			at statement: $r19 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer361)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer357, r23, varReplacer357)


Findings in Java Class: com.vp.astrology.existence_of_aliens.storage.security.SecurityUtil

	 in Method: byte[] encrypt(byte[],int,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r4, $r3)


Findings in Java Class: com.vp.astrology.existence_of_aliens.util.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 11
	ConstraintError: 1
=====================================================================