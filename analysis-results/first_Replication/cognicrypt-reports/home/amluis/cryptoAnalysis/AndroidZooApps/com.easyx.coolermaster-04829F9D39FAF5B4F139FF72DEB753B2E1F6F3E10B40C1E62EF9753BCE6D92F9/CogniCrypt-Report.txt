Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.xinmei.adsdk.utils.t: java.lang.String d(java.lang.String)>
		SHA-256: fe78fb20306caeb2098c3351d7c84e71a43002c1ecb78c7071cdaeb833f1122b
		Secure: true
	Object:
		Variable: r5
		Type: java.security.SecureRandom
		Statement: specialinvoke r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.xinmei.adsdk.utils.a: void c()>
		SHA-256: 9f1c4ae5f4fdc8824f49a30e855726d5cf9a79f85f0407845e9f9b016c50d1fa
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer8933)
		Method: <com.easyxapp.common.d.b: byte[] a(byte[])>
		SHA-256: 25882d4fc9634b9e914786358a77be2fbbca1187c2ea62913dd39b685248fbba
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.xinmei.adsdk.utils.a: byte[] a(byte[],java.security.Key)>
		SHA-256: defbc4b7fb5d3c71cbf4d8f2e717a32c0a66bc2b21ba0dd8b3d675ed5143a7a6
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.easyxapp.common.d.b: byte[] a(byte[])>
		SHA-256: 4c007d82661266b5817bbe92225f4b95e375d4009b399b6ad4a1c654005f0fd7
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2486)
		Method: <com.xinmei.adsdk.utils.n: byte[] a(byte[],java.lang.String)>
		SHA-256: 3c7702536d112b4e328102589867b91c958361aa1cca55d5997f0013e864ad4d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2902)
		Method: <com.xinmei.adsdk.utils.a: byte[] a(byte[],java.security.Key)>
		SHA-256: 238cf711be6c5979906075f3558bc44f3a91f5dd8810d1bfffd358e8d1242d22
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6685)
		Method: <com.easyx.coolermaster.c.a: byte[] b(byte[],byte[])>
		SHA-256: a08c78a64430d9fea1cedacb360a68346a87f5bf46370d8c73517a954bf0a7ae
		Secure: false
	Object:
		Variable: $r14
		Type: javax.net.ssl.SSLContext
		Statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8265)
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: d2b6362e853acefa4e43da962900708ee6fc4355dff0c74e8057f2af7cd1a3d8
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.easyxapp.common.d.b: byte[] a(java.lang.String,byte[])>
		SHA-256: ca0bf1c97755bf745e72f10f87c4e24f8b7dce695ba5b7e758416d86fb7d9af9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer6670)
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[])>
		SHA-256: 862441431954ece49559e0588d67d971ffd2afca422d4ade1ce590fb6e3766f2
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8930)
		Method: <com.easyxapp.common.d.b: byte[] b(java.lang.String,byte[])>
		SHA-256: 7956fc7a157bb9af567b500867f7b06c842b5ff23e65c9f65d59165fb17c233f
		Secure: false
	Object:
		Variable: varReplacer8955
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8955)
		Method: <com.easyxapp.common.d.b: byte[] a(java.lang.String,byte[])>
		SHA-256: d8fdf2071daf60726037f36b2669f234d82058f1bbd84ce164a9a0a8baf67a3b
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer2487)
		Method: <com.xinmei.adsdk.utils.n: byte[] a(byte[],java.lang.String)>
		SHA-256: 73572c4969d7c6eda85e6db63f9171f42a1b9e8c5420cd80b6825dfd0eda06c0
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8954)
		Method: <com.easyxapp.common.d.b: byte[] a(java.lang.String,byte[])>
		SHA-256: b6b2d93494022da70cc14cfb0a0e7926a8faa848dde3bb2dcd5f11fe702b2868
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)
		Method: <com.xinmei.adsdk.utils.n: byte[] a(byte[],java.lang.String)>
		SHA-256: cec1cae73ed5d071f0d6946e6489a03382b4cb2fad6bcba1f496013ecc632401
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7147)
		Method: <com.easyxapp.xp.common.util.m: java.lang.String a(byte[])>
		SHA-256: 7d7b404f2a17b291c29998499677f9724df24f911de1a6326ce6b3d9f40899dd
		Secure: true
	Object:
		Variable: $r14
		Type: javax.net.ssl.SSLContext
		Statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8270)
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: e3138984b3f6da73c4fe0396778d9f4c30905ed913eabe776a868bc8a8e6daa7
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.easyxapp.common.d.b: byte[] b(java.lang.String,byte[])>
		SHA-256: 285b7cc6277f9df04e8584a4ae6095db72579ef07c82dcc337109710ad50a785
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyStore
		Statement: $r11 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 2f60181713d6f5ba9d7147e52d275fa1384e51fe31796c1e6effaa0e31708dfb
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.a: java.lang.String a(java.lang.String)>
		SHA-256: 5e54d7c75072b6ee2b597c5b9413576e6ddb692cffad2f913372e9e2b04fca41
		Secure: true
	Object:
		Variable: r48
		Type: java.security.SecureRandom
		Statement: specialinvoke r48.<java.security.SecureRandom: void <init>()>()
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: ae5ec3e880e484c2347a8bdd275050f73a5344dc7e5478fa3752317de601fd99
		Secure: true
	Object:
		Variable: r48
		Type: java.security.SecureRandom
		Statement: specialinvoke r48.<java.security.SecureRandom: void <init>()>()
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: ae5ec3e880e484c2347a8bdd275050f73a5344dc7e5478fa3752317de601fd99
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2499)
		Method: <com.xinmei.adsdk.utils.a: void c()>
		SHA-256: 632be7e5e5773e2891b49344020bf5fa162af4685990c21510c2085276e75da0
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.xinmei.adsdk.utils.a: byte[] b()>
		SHA-256: 6c968a2ebbc994743debaa0f8ff4b55131f79d716707e0bf8bcc02401e1fb8a9
		Secure: true
	Object:
		Variable: $r12
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r12 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer8248)
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 504a05ed86e7313fd8c182229010ac580f2e596014b5446f4261ad9a52cd48b9
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.easyxapp.xp.common.util.m: java.lang.String a(byte[])>
		SHA-256: 3b0c508c2288e4aa0fb5b4beceefbd5abae5b8b3b3b3ecec0e7ca13b87cd70b9
		Secure: true
	Object:
		Variable: varReplacer6674
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6674)
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[],byte[])>
		SHA-256: 83e8fc12713527b94f66b2edef64d989d62560c20f340b13ebd79da1f66845e4
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.easyxapp.kr.d.f: java.lang.String a(byte[])>
		SHA-256: a5091df634c9932547c7f9e8ded9e5a872158e191c59298d4fa426bacb71d339
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer6671)
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[])>
		SHA-256: 5b55bdf82b57c3feafab2b52b75dce9471e31d8aa50400845574328e592eedc6
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: 2125805d03a1e43489bdecc5db182c9da3fb7141e4e8c4afb45e18805c8edeaa
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.easyx.coolermaster.c.a: byte[] b(byte[],byte[])>
		SHA-256: 5ef8d28ab179e258311805f92969e46c2035be744d6c2feb40b4edb626054f36
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyStore
		Statement: $r11 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 2f60181713d6f5ba9d7147e52d275fa1384e51fe31796c1e6effaa0e31708dfb
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6674)
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[],byte[])>
		SHA-256: 21f3e60c27ae526e7edffa2e08f18fde4085a409730cbcff3d829ebde20a63d2
		Secure: false
	Object:
		Variable: $r13
		Type: javax.net.ssl.KeyManager[]
		Statement: $r13 = virtualinvoke $r12.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 616dea5870abd7100e346a82870661e7e0d4aa0710c5ecda884c5c032ec0ae5f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6672)
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[],byte[])>
		SHA-256: 4b3c00b046fe5c769cf023a1bd16a0167257470034255638aad2397183da57ff
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Key
		Statement: $r1 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.xinmei.adsdk.utils.a: byte[] b()>
		SHA-256: f22521785f615dd0e4d1e83f1ba09a0ce0783a24c18e091d07c7c4134fab6156
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)
		Method: <com.xinmei.adsdk.utils.n: byte[] a(byte[],java.lang.String)>
		SHA-256: d03c4b5dde23467f8ab226b16bdfd736c32e8c7c65effcb3bc7906bfe80486ab
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6686)
		Method: <com.easyx.coolermaster.c.a: byte[] b(byte[],byte[])>
		SHA-256: 9fb703cccbe4b17cb1c54235313316a449550064fa17975b3ae39613e1df51b5
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r12 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer8272)
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 8ea50f7d70876d10c035491f71b281a88d0bc8ff37b680f063912849815b1501
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2872)
		Method: <com.xinmei.adsdk.utils.t: java.lang.String d(java.lang.String)>
		SHA-256: f62c6d94cb69ad9122266a126320ffe0accdcd144f5375489d4a6ffad2756bf0
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7199)
		Method: <com.google.android.gms.ads.internal.util.client.a: java.lang.String a(java.lang.String)>
		SHA-256: 11e223675b2d8618495ab6ddca2a66e0c80e023534f141ca4f9c1dd20f64c842
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.easyx.coolermaster.c.a: byte[] b(byte[],byte[])>
		SHA-256: 70afe47b024b63fe976daddfdc9e396708d342a20ebc3fba7e11727837415f3b
		Secure: false
	Object:
		Variable: varReplacer6686
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6686)
		Method: <com.easyx.coolermaster.c.a: byte[] b(byte[],byte[])>
		SHA-256: 1ecbea75381946b9c531afbb0091c7f6df368b84b3b0eeffdca120a7736fa59a
		Secure: false
	Object:
		Variable: $r13
		Type: javax.net.ssl.KeyManager[]
		Statement: $r13 = virtualinvoke $r12.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 616dea5870abd7100e346a82870661e7e0d4aa0710c5ecda884c5c032ec0ae5f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8932)
		Method: <com.easyxapp.common.d.b: byte[] b(java.lang.String,byte[])>
		SHA-256: 1a181243f39edf9612b2a2177a9ba856c356a2fa517bddfe77025caba4a9f57e
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer860)
		Method: <com.easyxapp.kr.d.f: java.lang.String a(byte[])>
		SHA-256: 64dc5a477d80c531c6e9073ee659f947c0210dc4361c5d2c397b221a2bef4c1c
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer8934, varReplacer8935)
		Method: <com.easyxapp.common.d.b: byte[] a(byte[])>
		SHA-256: 5100adb610f42a15c8149d4c44c957f272a7ebe32ed7cf9deda2cc90f24ad678
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3316)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: 7cd36b68c2700cb4905051d5fbdd460b25200a173af4b4e610708fcf5d4ab89d
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer6667, varReplacer6668)
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[])>
		SHA-256: 7d8d5841e72e7ced8b42041c45f700d8646d211b93d76be24a318715fe156355
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer2487)
		Method: <com.xinmei.adsdk.utils.n: byte[] a(byte[],java.lang.String)>
		SHA-256: 8d8abdffa8959e90cea6e76231a22718887c1fd287452b80dd59f67e2cbe0d0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer8937)
		Method: <com.easyxapp.common.d.b: byte[] a(byte[])>
		SHA-256: 2c62210a314c2c808e674e5b5b626dd9318c4a64c16ca12fcd4e84cc6d70c727
		Secure: true
	Object:
		Variable: varReplacer8930
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8930)
		Method: <com.easyxapp.common.d.b: byte[] b(java.lang.String,byte[])>
		SHA-256: e7155f8bca2c14dbe21e1bf94c5d4b82a0e61fe90508dff6a586cb917dc22bf4
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[])>
		SHA-256: 9bec08917d8c17d6308fce1047325c6c7c3f151094e6e268fc8e7d3e89e5beab
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8955)
		Method: <com.easyxapp.common.d.b: byte[] a(java.lang.String,byte[])>
		SHA-256: 1424ed938e76d345ccdce80668994574cc6e145d8b6bd7859367c1f7e648bb79
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.xinmei.adsdk.utils.a: void c()>
		SHA-256: 37f7cbbc0475c0bef73971e5b9ec7619051e1c7359fd4900ab8d1b0cfda7455e
		Secure: false

Findings in Java Class: com.xinmei.adsdk.utils.n

	 in Method: byte[] a(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2484, $r6)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #3c7702536d112b4e328102589867b91c958361aa1cca55d5997f0013e864ad4d)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #3c7702536d112b4e328102589867b91c958361aa1cca55d5997f0013e864ad4d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer2487)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #3c7702536d112b4e328102589867b91c958361aa1cca55d5997f0013e864ad4d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters), javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec), update, javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.cert.Certificate), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom), wrap, doFinal
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2484, $r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #3c7702536d112b4e328102589867b91c958361aa1cca55d5997f0013e864ad4d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #3c7702536d112b4e328102589867b91c958361aa1cca55d5997f0013e864ad4d)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer2487)


Findings in Java Class: com.xinmei.adsdk.utils.a

	 in Method: void c()
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #632be7e5e5773e2891b49344020bf5fa162af4685990c21510c2085276e75da0)
			First parameter (with value "Blowfish") should be any of {HmacSHA224, HmacSHA256, AES, HmacSHA384, AESWRAP, DESede, HmacMD5, HmacSHA512, DESedeWRAP}
			at statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2499)

		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>($i0, $r1)


	 in Method: byte[] a(byte[],java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2901, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #238cf711be6c5979906075f3558bc44f3a91f5dd8810d1bfffd358e8d1242d22)
			First parameter (with value "Blowfish/ECB/PKCS5Padding") should be any of {AES, DESede, RSA}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2902)


Findings in Java Class: com.easyx.coolermaster.c.a

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6674)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4b3c00b046fe5c769cf023a1bd16a0167257470034255638aad2397183da57ff)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6672)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6687, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a08c78a64430d9fea1cedacb360a68346a87f5bf46370d8c73517a954bf0a7ae)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6685)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6686)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer6669, $r2)


Findings in Java Class: com.easyxapp.common.http.a

	 in Method: void a()
		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #504a05ed86e7313fd8c182229010ac580f2e596014b5446f4261ad9a52cd48b9)
			First parameter (with value "X509") should be any of {PKIX}
			at statement: $r12 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer8248)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #e3138984b3f6da73c4fe0396778d9f4c30905ed913eabe776a868bc8a8e6daa7)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8270)

		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #8ea50f7d70876d10c035491f71b281a88d0bc8ff37b680f063912849815b1501)
			First parameter (with value "X509") should be any of {PKIX}
			at statement: $r12 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer8272)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, r53, $r17)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, r53, $r17)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d2b6362e853acefa4e43da962900708ee6fc4355dff0c74e8057f2af7cd1a3d8)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8265)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, r53, $r17)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, r53, $r17)


Findings in Java Class: com.easyxapp.common.d.b

	 in Method: byte[] b(java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1a181243f39edf9612b2a2177a9ba856c356a2fa517bddfe77025caba4a9f57e)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8932)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8930)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8931, $r3)


	 in Method: byte[] a(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8956, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8955)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b6b2d93494022da70cc14cfb0a0e7926a8faa848dde3bb2dcd5f11fe702b2868)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8954)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer8936, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 56

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 16
	TypestateError: 2
	IncompleteOperationError: 3
	ConstraintError: 10
=====================================================================