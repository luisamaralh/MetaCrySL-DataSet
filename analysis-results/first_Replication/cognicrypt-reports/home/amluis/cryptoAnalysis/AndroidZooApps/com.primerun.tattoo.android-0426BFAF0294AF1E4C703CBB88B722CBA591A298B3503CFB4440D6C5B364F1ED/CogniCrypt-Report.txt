Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer2832)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 4277999b1b810d6a28ed9577a7d5ad206bedb381f1a94a92b4fe7cae5af620b1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1453)
		Method: <com.primerun.core.social.twitter.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: d2d3690717657065586739f522f13a8f2f0a1c7ed978df1628bb0aab0b9800f8
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1395)
		Method: <com.primerun.core.social.odnoklassniki.h: java.lang.String e(java.lang.String)>
		SHA-256: 9de4f981811a26020a89116d06bdb26440e0708224c57bdf8ec359b9cc59e3c1
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.jivesoftware.smack.sasl.core.SCRAMSHA1Mechanism: void <clinit>()>
		SHA-256: 2ba42fa894bc4d058f45f9a3f6af58b2e3df3ca1519d901d30f9a8895df561b5
		Secure: true
	Object:
		Variable: r33
		Type: java.security.SecureRandom
		Statement: specialinvoke r33.<java.security.SecureRandom: void <init>()>()
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: b0e383e04e9a7eeeda953690e5e22dd5749d29bf235490cbad2286a1ff8eae69
		Secure: true
	Object:
		Variable: $r26
		Type: java.security.KeyStore
		Statement: $r26 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>(varReplacer2840, $r25)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: bdf760a7814899280f288c63a3aeeaa9850ed7cab41310ec469efc9a873b32bf
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <com.primerun.core.social.twitter.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 6b2972340d68071ea89fa34ced478543a5c9597ffb0703eb22b64e97878f94f4
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.KeyManager[]
		Statement: $r4 = virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 8fe75bbae3a1b8bd621c51e87f86a68e645c0ce1f63b66aa5c423972f0c643e
		Secure: false
	Object:
		Variable: $r26
		Type: java.security.KeyStore
		Statement: $r26 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r8)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 4f7e9f5436b9a82ae9a3174915613719a59b84c26e5333cf15e2e400f1e67f8
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2836)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 9ca4a35b7a46ae2a9ae42398767afe55c60ec2ab8974eb8561ab4f97c8245d62
		Secure: false
	Object:
		Variable: $r15
		Type: java.security.KeyStore
		Statement: $r15 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer2837, varReplacer2838)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 8051eaca1fa07e56e9af4a41cef54e5b8567ce1ee6d4c1d0b4ba0aed90c1208e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer1452)
		Method: <com.primerun.core.social.twitter.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 762bf5cf00364de0a89a8c32e9b450ee6ffcf023eaa0c99357fb99c87bba86a5
		Secure: true
	Object:
		Variable: varReplacer1453
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1453)
		Method: <com.primerun.core.social.twitter.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: e9b98c3add370e481d99f81b48c22177d9fb9ae9f4bb320c1cb306d90ab3911
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.primerun.core.social.odnoklassniki.h: java.lang.String e(java.lang.String)>
		SHA-256: 7d008f405b045c58f3aeaefbad1e67f6e351f9c5fa005a01a2769880e80a678d
		Secure: true

Findings in Java Class: org.jivesoftware.smack.tcp.XMPPTCPConnection

	 in Method: void proceedTLSReceived()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, varReplacer2827, r33)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, varReplacer2827, r33)

		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #4277999b1b810d6a28ed9577a7d5ad206bedb381f1a94a92b4fe7cae5af620b1)
			First parameter (with value "SunX509") should be any of {PKIX}
			at statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer2832)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #bdf760a7814899280f288c63a3aeeaa9850ed7cab41310ec469efc9a873b32bf)
			First parameter (with value "PKCS11") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r26 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>(varReplacer2840, $r25)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #8051eaca1fa07e56e9af4a41cef54e5b8567ce1ee6d4c1d0b4ba0aed90c1208e)
			First parameter (with value "KeychainStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r15 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer2837, varReplacer2838)


Findings in Java Class: com.primerun.core.social.twitter.h

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1453)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 14

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 3
	ConstraintError: 3
=====================================================================