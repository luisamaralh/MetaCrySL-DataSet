Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer2162
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2162)
		Method: <m.client.push.library.e.d: java.security.Key a()>
		SHA-256: b12fa6843d4960f89f1305dbaab025f71a36351eee7a2901310a3506eea0e30b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r2, varReplacer1205)
		Method: <m.client.android.library.core.utils.AESUtil: byte[] cryptToBytes(int,java.io.InputStream)>
		SHA-256: 62fdfde517345c84c237f5937d70ea25991bb657fd19eb3b5293de298f6ef0b9
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r3)
		Method: <org.a.a.a.a.a.c.a: javax.net.ssl.SSLContext q(java.lang.String)>
		SHA-256: e9476cb4a91028185b39d0692601b10f8423a09d936c11ff6aeb0c29fd0fed7b
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2162)
		Method: <m.client.push.library.e.d: java.security.Key a()>
		SHA-256: ec99badd9ad6cf8b4a3340c6b9335eb78872799993cb6ca3332fc852adb755ee
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <m.client.push.library.e.d: java.lang.String b(java.lang.String)>
		SHA-256: f15ec00d07f2fd4e8823ca85163eaaa641eada5e3f075ef486470f011925a9de
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2150, varReplacer2151)
		Method: <m.client.push.library.e.d: java.lang.String b(java.lang.String)>
		SHA-256: 1d5b2e7ccf4ff4b085ca44da6795c4c673ab855a67492fcc0a78165132798b57
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2140, varReplacer2141)
		Method: <m.client.push.library.e.d: java.lang.String b(java.lang.String)>
		SHA-256: 4798db58710e12d1767f25332c2a644c5e990ae31aa0ae669c9733b5843f2bd
		Secure: false
	Object:
		Variable: varReplacer2142
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2142)
		Method: <m.client.push.library.e.d: java.lang.String b(java.lang.String)>
		SHA-256: 1a9ba4847e82e10be8232bdd51fd3a93291f89afedc9e29556ff8a27a20da9b1
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer4626, varReplacer4627)
		Method: <m.client.android.library.core.utils.AESUtil: java.lang.String decrypt(java.lang.String)>
		SHA-256: a652e904127b463bdfb16fbfc4d65823a9c25d1f11bff2707099a507fda6b8c8
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <m.client.android.library.core.utils.AESUtil: java.lang.String encrypt(java.lang.String)>
		SHA-256: ddf04eb7b8591cd40da499cd889bab86baca065b6e1744693474e2f48d987000
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2154)
		Method: <m.client.push.library.e.d: java.lang.String b(java.lang.String)>
		SHA-256: 5892cc0680ba994f175fdfe38ffa37f890278d12811ebb3dda68503cb8d00897
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4624)
		Method: <m.client.android.library.core.utils.AESUtil: java.lang.String decrypt(java.lang.String)>
		SHA-256: 5b1eb6fb2c5d1e47eb1ce328f729f498a11f8bbb469b9dc94b133625f591abe1
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <m.client.push.library.e.d: java.lang.String a(java.lang.String)>
		SHA-256: 43d91e60fda6cffed76f5ff3c0371b2fcb776e0d73e32fb8a13c32c1a6e68a7d
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>($r10, $r13)
		Method: <org.a.a.a.a.a.c.a: javax.net.ssl.SSLContext q(java.lang.String)>
		SHA-256: d56385ed5a7f55536e786d70377f1dc93e0888884761dd35ae56189cbe5b13ec
		Secure: true
	Object:
		Variable: $r17
		Type: javax.net.ssl.KeyManager[]
		Statement: $r17 = virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.a.a.a.a.a.c.a: javax.net.ssl.SSLContext q(java.lang.String)>
		SHA-256: a70daa45c38d7239efd9f18bb1cd37fff66033006d6a14b625afe0b1ec015798
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1209)
		Method: <m.client.android.library.core.utils.AESUtil: java.security.Key generateKey()>
		SHA-256: c22daee97ffe1d5183e1e777c572e699c4d7fc3ed360ab86db03de4412587677
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal()>()
		Method: <m.client.android.library.core.utils.AESUtil: byte[] cryptToBytes(int,java.io.InputStream)>
		SHA-256: 93ed0b13fead2cd32393e47707e71a24c9c7fc9160423e402002eb45faa7a27d
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <org.a.a.a.a.a.c.a: javax.net.ssl.SSLContext q(java.lang.String)>
		SHA-256: 9c3809a05a6f8f138b3a9a084450d185adefccb3fe10031bacbd8effcb977349
		Secure: true
	Object:
		Variable: varReplacer1209
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1209)
		Method: <m.client.android.library.core.utils.AESUtil: java.security.Key generateKey()>
		SHA-256: 52f8198a3b3774be57284677f2a7f43631d1239e4d1b12411385dcfd8250ddd3
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <m.client.android.library.core.utils.AESUtil: java.lang.String encrypt(java.lang.String)>
		SHA-256: ddf04eb7b8591cd40da499cd889bab86baca065b6e1744693474e2f48d987000
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <org.a.a.a.a.a.c.a: javax.net.ssl.SSLContext q(java.lang.String)>
		SHA-256: 9c3809a05a6f8f138b3a9a084450d185adefccb3fe10031bacbd8effcb977349
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1151)
		Method: <m.client.android.library.core.utils.MD5Util: java.lang.String getMD5Hash(byte[])>
		SHA-256: 750ed6831e81aadfc0f2c3e13ea731add4f7a5f2f7e9d5cedef7a0e62b8ab32
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4623)
		Method: <m.client.android.library.core.utils.AESUtil: java.lang.String decrypt(java.lang.String)>
		SHA-256: cbd71db5476b0fde951def04382193c6aaaf5184bf64babd3f3f34da691628ba
		Secure: false
	Object:
		Variable: varReplacer4624
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4624)
		Method: <m.client.android.library.core.utils.AESUtil: java.lang.String decrypt(java.lang.String)>
		SHA-256: b51f0b0c29132945360721f1c9373f74ed66731cbc79cc02cbaf32466d0ed582
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r2, varReplacer2134)
		Method: <m.client.push.library.e.d: java.lang.String a(java.lang.String)>
		SHA-256: ab04751f9f587a7ceaf043ba73796826084104307f3d6c7be74043893a6c06b3
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer4621, varReplacer4622)
		Method: <m.client.android.library.core.utils.AESUtil: java.lang.String decrypt(java.lang.String)>
		SHA-256: 86c625412d70df8843fb46ce616415948e0db724ceb6374446fb0570daa953d5
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <m.client.android.library.core.utils.MD5Util: java.lang.String getMD5Hash(byte[])>
		SHA-256: f5c92ccfdaffdbf736d81dc243f66d9c24336c2e9ec45ee77f1c476fee8b416e
		Secure: true
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r10)
		Method: <org.a.a.a.a.a.c.a: javax.net.ssl.SSLContext q(java.lang.String)>
		SHA-256: ef666115deaa63a0e33c62bd9dc270028c6fa462d950c4e268398ed2b147655f
		Secure: true
	Object:
		Variable: varReplacer2154
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2154)
		Method: <m.client.push.library.e.d: java.lang.String b(java.lang.String)>
		SHA-256: 4502eda50d8823b0c08e59e079164ff0e3cf4fc29d059616c9c89848c5753771
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <m.client.android.library.core.utils.AESUtil: java.lang.String decrypt(java.lang.String)>
		SHA-256: f5a958dbc34099fe876b1b753bac92f6df190694d66babab1939774bcf3869f4
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <m.client.push.library.e.d: java.lang.String b(java.lang.String)>
		SHA-256: f15ec00d07f2fd4e8823ca85163eaaa641eada5e3f075ef486470f011925a9de
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <m.client.android.library.core.utils.AESUtil: java.lang.String decrypt(java.lang.String)>
		SHA-256: f5a958dbc34099fe876b1b753bac92f6df190694d66babab1939774bcf3869f4
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r7, varReplacer1204, $i0)
		Method: <m.client.android.library.core.utils.AESUtil: byte[] cryptToBytes(int,java.io.InputStream)>
		SHA-256: 5188f23a95e410bda9ba9edfba4a37f0e36ea99b926f88306c40b6e86e174c8e
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2142)
		Method: <m.client.push.library.e.d: java.lang.String b(java.lang.String)>
		SHA-256: 2917fda6c628129f515079a6e0b057af973161e12c53b1e148ff9534766b6a34
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r7, varReplacer1204, $i0)
		Method: <m.client.android.library.core.utils.AESUtil: byte[] cryptToBytes(int,java.io.InputStream)>
		SHA-256: 602cb135dceb65c9455c82ce5fd35d87b4625581d7084c3fdf22dbd6a9bf2682
		Secure: false
	Object:
		Variable: varReplacer4623
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4623)
		Method: <m.client.android.library.core.utils.AESUtil: java.lang.String decrypt(java.lang.String)>
		SHA-256: 95580937d1bd9dfbab877352324a80da944a053ab8948037e8273d5797786bf0
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r8, varReplacer5946, $i0)
		Method: <m.client.android.library.core.utils.AESUtil: byte[] cryptToBytes(int,java.io.File)>
		SHA-256: 91600854d428f80a50661deb9bac15710fe5e48ba3ea8bf65ea0817ce0c7506e
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal()>()
		Method: <m.client.android.library.core.utils.AESUtil: byte[] cryptToBytes(int,java.io.File)>
		SHA-256: fb40f36b700d713c484d8800ade1777d2ddd48525322af81a33ace4fcd47dc45
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r9 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r8, varReplacer5946, $i0)
		Method: <m.client.android.library.core.utils.AESUtil: byte[] cryptToBytes(int,java.io.File)>
		SHA-256: 2f764724803181640befe8bbcd1cc78d6ed891c8e53b954da5a86b4762c31bc1
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r3, $r2)
		Method: <org.a.a.a.a.a.c.a: javax.net.ssl.SSLContext q(java.lang.String)>
		SHA-256: 8a3f608affec894e2934d7b23c7a8cf4a6209615fd64fc02e6c3a2c3f832eba3
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r2, varReplacer4611)
		Method: <m.client.android.library.core.utils.AESUtil: java.lang.String encrypt(java.lang.String)>
		SHA-256: 60cacce12669230985e056e73429a01c723aea991fefed829001275aa88f1cfb
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <m.client.push.library.e.d: java.lang.String a(java.lang.String)>
		SHA-256: 43d91e60fda6cffed76f5ff3c0371b2fcb776e0d73e32fb8a13c32c1a6e68a7d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r2, varReplacer5947)
		Method: <m.client.android.library.core.utils.AESUtil: byte[] cryptToBytes(int,java.io.File)>
		SHA-256: 3a2bbbdb09999b00b2d80b8c177d70bb440544fa9d24436477ad5ce00c2def8a
		Secure: false

Findings in Java Class: m.client.android.library.core.utils.AESUtil

	 in Method: byte[] cryptToBytes(int,java.io.InputStream)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1207, $r4)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #62fdfde517345c84c237f5937d70ea25991bb657fd19eb3b5293de298f6ef0b9)
			Unexpected call to method <javax.crypto.Cipher: byte[] doFinal()> on object of type javax.crypto.Cipher. Expect a call to one of the following methods javax.crypto.Cipher: byte[] doFinal(byte[]),javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]),javax.crypto.Cipher: byte[] doFinal(byte[],int,int),javax.crypto.Cipher: void init(int,java.security.Key),javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters),javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec),javax.crypto.Cipher: void init(int,java.security.cert.Certificate),javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom),javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom),javax.crypto.Cipher: int update(byte[],int,int,byte[],int),javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer),javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom),javax.crypto.Cipher: byte[] wrap(java.security.Key),javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom),javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int),javax.crypto.Cipher: byte[] update(byte[],int,int),javax.crypto.Cipher: byte[] update(byte[]),javax.crypto.Cipher: int update(byte[],int,int,byte[]),javax.crypto.Cipher: int update(java.nio.ByteBuffer,java.nio.ByteBuffer)
			at statement: $r7 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal()>()


	 in Method: byte[] cryptToBytes(int,java.io.File)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #3a2bbbdb09999b00b2d80b8c177d70bb440544fa9d24436477ad5ce00c2def8a)
			Unexpected call to method <javax.crypto.Cipher: byte[] doFinal()> on object of type javax.crypto.Cipher. Expect a call to one of the following methods javax.crypto.Cipher: byte[] doFinal(byte[]),javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]),javax.crypto.Cipher: byte[] doFinal(byte[],int,int),javax.crypto.Cipher: void init(int,java.security.Key),javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters),javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec),javax.crypto.Cipher: void init(int,java.security.cert.Certificate),javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom),javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom),javax.crypto.Cipher: int update(byte[],int,int,byte[],int),javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer),javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom),javax.crypto.Cipher: byte[] wrap(java.security.Key),javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom),javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int),javax.crypto.Cipher: byte[] update(byte[],int,int),javax.crypto.Cipher: byte[] update(byte[]),javax.crypto.Cipher: int update(byte[],int,int,byte[]),javax.crypto.Cipher: int update(java.nio.ByteBuffer,java.nio.ByteBuffer)
			at statement: $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5945, $r4)


	 in Method: java.lang.String decrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4623)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4624)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4615, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4614, $r5)


	 in Method: java.security.Key generateKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1209)


	 in Method: java.lang.String encrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4610, $r4)


Findings in Java Class: org.a.a.a.a.a.c.a

	 in Method: javax.net.ssl.SSLContext q(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r19, varReplacer3916)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r19, varReplacer3916)


Findings in Java Class: m.client.push.library.e.d

	 in Method: java.lang.String a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2137, $r4)


	 in Method: java.security.Key a()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2162)


	 in Method: java.lang.String b(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2146, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2149, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2142)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2154)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 43

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 16
	TypestateError: 2
=====================================================================