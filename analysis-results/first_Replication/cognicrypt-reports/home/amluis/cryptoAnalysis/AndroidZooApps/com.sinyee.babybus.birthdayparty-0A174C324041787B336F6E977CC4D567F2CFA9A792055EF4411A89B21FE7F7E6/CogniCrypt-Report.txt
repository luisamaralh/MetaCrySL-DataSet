Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7946)
		Method: <com.babybus.utils.AESUtils: java.lang.String Decrypt(java.lang.String,java.lang.String)>
		SHA-256: 17a02d4b4464cff1a41e6f170cf3c3b63e38e8df2f79b29a0523078a5776427e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.babybus.app.App: java.lang.String getMD5MessageDigest(byte[])>
		SHA-256: e4a548e1b63eebc1a6c77b0b90dce5ba2065846894295a3bd480b9b0a3c5e345
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1660)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: b4d4f2e8f72d76c65bc6dc8b0184e16b96ec1f69be415cdb768be01e0d117b18
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 7a74e8fbde4cb7f3c5f100dc4c6bc0d46ff7409fd74d931edb087eb017f74545
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <com.babybus.aiolos.g: javax.crypto.SecretKey a(java.lang.String)>
		SHA-256: 9d617c963919297fcbc1837279a757bafdc80d23404743e2a74e574e3d788a76
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7952)
		Method: <com.babybus.app.App: java.lang.String getMD5MessageDigest(byte[])>
		SHA-256: acdd7b3e2a2754506ff64bfb613301eb13963485a5e15ffff4af3fb46676fe7d
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6784)
		Method: <com.babybus.utils.RSAUtils: java.lang.String sPubEncrypt(java.lang.String,java.lang.String)>
		SHA-256: 3c4f769b0867f6079d2864ed2e7ff3b21df9db16d2de8103b484872162d1a79e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9677)
		Method: <com.iqiyi.sdk.android.vcop.net.NewSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 136d41663018e22c4c1fdbc65fa1122831335a425eff50d3f9e502c4b7197df5
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPair
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.babybus.helper.RSACodeHelper: void init()>
		SHA-256: 6bc71973c3f5ea8a041e37be4a70512025cf5a185f39cdbfc493bf5a29f146e9
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9399)
		Method: <com.appodeal.ads.t: javax.net.ssl.SSLSocketFactory d()>
		SHA-256: 19d44f5c67fed4205f2db386295f3bd0e0253247c18550f329136a043f9ee49e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7978)
		Method: <com.babybus.aiolos.g: java.lang.String a(byte[],javax.crypto.SecretKey)>
		SHA-256: 56470b28030ed18a5eb259a700019038b24c2dacd9573c4f3ce5c68b40da3c30
		Secure: false
	Object:
		Variable: varReplacer7951
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer7951)
		Method: <com.babybus.utils.AESUtils: java.lang.String Decrypt(java.lang.String,java.lang.String)>
		SHA-256: f0a340ba8fc532dfdac3bd994f2a4630c57286e8dab9c7fac37391ab258c44ae
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.babybus.aiolos.g: javax.crypto.SecretKey a(java.lang.String)>
		SHA-256: eed6605db0f34bbabfa89c3fb52877f764440e05cd82f090e870c6368df68160
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyPairGenerator
		Statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer6731)
		Method: <com.babybus.helper.RSACodeHelper: void init()>
		SHA-256: 15347b4e3a7858dabea06e90f554b2d9def255473b91046c8b3e15a81844b799
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.babybus.utils.RSAUtils: java.lang.String sPubEncrypt(java.lang.String,java.lang.String)>
		SHA-256: 8d37f153aed0a1cd0cb26abb78ad69a694aa98dd4ee51f96cbc671d573e6bccc
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.babybus.aiolos.g: java.lang.String a(byte[],javax.crypto.SecretKey)>
		SHA-256: d7eef02f82b95a4ddafdd1b9a2e72dc3b04384d186bb714811648f958c085fb3
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.babybus.aiolos.g: java.lang.String a(byte[],javax.crypto.SecretKey)>
		SHA-256: fc5341a4e7e7c92c6110bab7d20a7d0f77ac32e4ecd1e33a6517462dd1bfeaea
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer7951)
		Method: <com.babybus.utils.AESUtils: java.lang.String Decrypt(java.lang.String,java.lang.String)>
		SHA-256: 170edcd44a3e1fbd44bd275ca58faeb43357e2473db6b71b0d9caa116bfccb34
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.babybus.utils.AESUtils: java.lang.String Decrypt(java.lang.String,java.lang.String)>
		SHA-256: 4278ed9157936097667bc52086c2e35029bba55540082bad1ae263bc341943c8
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.iqiyi.sdk.android.vcop.net.HttpTools: void <init>()>
		SHA-256: 8eafe4c250fe5ec89e01de6dc10d5607e313c8a64d63518dc26b9b0bc0c6e901
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer7980)
		Method: <com.babybus.aiolos.g: javax.crypto.SecretKey a(java.lang.String)>
		SHA-256: 458c7f85cfb07c3ab6e0ef8a49d416979c28f1b1df3ffad8a5c52ac61f479c87
		Secure: false

Findings in Java Class: com.babybus.helper.RSACodeHelper

	 in Method: void init()
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #15347b4e3a7858dabea06e90f554b2d9def255473b91046c8b3e15a81844b799)
			First parameter (with value 1024) should be any of {2048, 4096}
			at statement: virtualinvoke $r2.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer6732)


Findings in Java Class: com.babybus.aiolos.g

	 in Method: java.lang.String a(byte[],javax.crypto.SecretKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer7979, $r1, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #56470b28030ed18a5eb259a700019038b24c2dacd9573c4f3ce5c68b40da3c30)
			First parameter (with value "des") should be any of {AES, DESede, RSA}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7978)


	 in Method: javax.crypto.SecretKey a(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #458c7f85cfb07c3ab6e0ef8a49d416979c28f1b1df3ffad8a5c52ac61f479c87)
			First parameter (with value "des") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer7980)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


Findings in Java Class: com.appodeal.ads.t

	 in Method: javax.net.ssl.SSLSocketFactory d()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9397, r8, varReplacer9397)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #19d44f5c67fed4205f2db386295f3bd0e0253247c18550f329136a043f9ee49e)
			First parameter (with value "TLSv1") should be any of {TLS}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9399)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9397, r8, varReplacer9397)


Findings in Java Class: com.babybus.utils.AESUtils

	 in Method: java.lang.String Decrypt(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7949, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer7951)


Findings in Java Class: com.babybus.utils.RSAUtils

	 in Method: java.lang.String sPubEncrypt(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6786, $r2)


Findings in Java Class: com.iqiyi.sdk.android.vcop.net.NewSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9678, r5, varReplacer9678)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9678, r5, varReplacer9678)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 21

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 4
	RequiredPredicateError: 9
=====================================================================