Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2889)
		Method: <com.google.ads.b: java.math.BigInteger d()>
		SHA-256: f94481bea1a8df9372696380173716a8cc1443356924ebdfb267631232f97204
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer180)
		Method: <org.acs.pubs.cen.optimum.services.SyncJobsService: javax.net.ssl.SSLSocketFactory createSslSocketFactory()>
		SHA-256: c1d1ff18a68b3581c1c02e3dce45c8b716c7d1c25bf6a8443b68df6e3c4ae78f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer459)
		Method: <com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)>
		SHA-256: a70466c6cb509107d79e62bfd4198d07782b2782f4087e22b22624da58f837b1
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r3.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r8, $r4)
		Method: <org.acs.pubs.cen.optimum.utils.ZipDecrypter: java.io.File decrypt(java.io.File)>
		SHA-256: b27f21658c9920342cc983b077112d9e811ed68315bf0d26e77d7368b49dbf7d
		Secure: false
	Object:
		Variable: r4
		Type: java.security.SecureRandom
		Statement: specialinvoke r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.acs.pubs.cen.optimum.services.SyncJobsService: javax.net.ssl.SSLSocketFactory createSslSocketFactory()>
		SHA-256: eb15ec94c9b11872c8e3c7fe70db38019b9f3a3cb83bbc73fde8fbe444b1eea7
		Secure: true
	Object:
		Variable: varReplacer1291
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1291)
		Method: <org.acs.pubs.cen.optimum.utils.ZipDecrypter: java.io.File decrypt(java.io.File)>
		SHA-256: 411eb7ff7d135f1158ab0f7392980a878968ae081b3ac7cd09a2844d383e986a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.google.ads.an: byte[] a(byte[],java.lang.String)>
		SHA-256: b5fbd8fab021f359681408ce0fede977eb5cbaa7718495e87f7a6c4b0e21dad
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1290)
		Method: <org.acs.pubs.cen.optimum.utils.ZipDecrypter: java.io.File decrypt(java.io.File)>
		SHA-256: b795c4dee3c4b130a2d76ed1caf9537acf95dd0638fc69734261624122b7fc88
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer2370)
		Method: <org.acs.pubs.cen.optimum.inApp.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: b2952e66d998f6e8b0019fb91f8a94ed9961e4478f0df336d9a3b98c0a397f41
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.ads.aj: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 397770e48d3a64bf1d52958c037bf479b6896d2b87107b9d677024e3763bca1c
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r0 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.google.ads.an: byte[] a(byte[],java.lang.String)>
		SHA-256: c3c5dc1682e57a512b72e963a5fb41a7b7db9c418a19121e48cc25d1ec1b91f
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.ads.aj: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 359dcec9aaf4e026bd2f80646775c20e7cb06914ed0df52dc225fa2dc31ea5cf
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)>
		SHA-256: e0c72fc41e053c4940df80ac214885a81274dd181ac131e0da4a0b5bbb5e0b40
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.ads.b: java.math.BigInteger d()>
		SHA-256: 78a979d5efddbf2afb96ae4c070ca3d2463759077cfed92e4b0a58617d6126a5
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1291)
		Method: <org.acs.pubs.cen.optimum.utils.ZipDecrypter: java.io.File decrypt(java.io.File)>
		SHA-256: c98ebbfe8b40dccd7b4b30b35f6bce837ebdb00b2a4005c72fd587df3e6140be
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <com.google.ads.aj: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 9851cb4f5e335a8afd2f6fa8953ca357f69d8b25ee0f7d811070c05075a507ed
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.google.ads.an: byte[] a(byte[],java.lang.String)>
		SHA-256: f980e9159ee075a943ba208be792ee73d74bfeae2d064310d648d299f7429f02
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3162)
		Method: <com.google.ads.an: byte[] a(byte[],java.lang.String)>
		SHA-256: 8917e88a6189c3a2ed9bc5fe90ca683652f02e5da7e5b36f00c99095956e35e7
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <org.acs.pubs.cen.optimum.inApp.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: c678472b4c19c53650e756c77dab364889209724da847a2f30c698a83517174f
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3164)
		Method: <com.google.ads.an: byte[] a(byte[],java.lang.String)>
		SHA-256: cf3652c34bfff2e6b296ed57f1e5f5e694d10916f78d3670b468a361f832d87
		Secure: false
	Object:
		Variable: varReplacer3164
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3164)
		Method: <com.google.ads.an: byte[] a(byte[],java.lang.String)>
		SHA-256: c482e9d9e89070414019eae772f834f0b6a841760bc7cc220da3f500d5641d70
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3235)
		Method: <com.google.ads.aj: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 861a19c545dfc0c40f7f210547de640fe764d5e551527b798299c2a99a87f95d
		Secure: true

Findings in Java Class: org.acs.pubs.cen.optimum.utils.ZipDecrypter

	 in Method: java.io.File decrypt(java.io.File)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b795c4dee3c4b130a2d76ed1caf9537acf95dd0638fc69734261624122b7fc88)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1290)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b795c4dee3c4b130a2d76ed1caf9537acf95dd0638fc69734261624122b7fc88)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke $r3.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r8, $r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #b27f21658c9920342cc983b077112d9e811ed68315bf0d26e77d7368b49dbf7d)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), java.io.InputStream: int read(), javax.crypto.CipherInputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[]), close, java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: $i0 = virtualinvoke $r3.<javax.crypto.CipherInputStream: int read(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #b27f21658c9920342cc983b077112d9e811ed68315bf0d26e77d7368b49dbf7d)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), java.io.InputStream: int read(), javax.crypto.CipherInputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[]), close, java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: $i0 = virtualinvoke $r3.<javax.crypto.CipherInputStream: int read(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1291)


Findings in Java Class: org.acs.pubs.cen.optimum.services.SyncJobsService

	 in Method: javax.net.ssl.SSLSocketFactory createSslSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer179, r5, r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer179, r5, r4)


Findings in Java Class: com.google.ads.an

	 in Method: byte[] a(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3164)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3163, $r8, $r2)


Findings in Java Class: org.acs.pubs.cen.optimum.inApp.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 22

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	IncompleteOperationError: 3
	RequiredPredicateError: 7
=====================================================================