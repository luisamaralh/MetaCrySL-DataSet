Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzbo: byte[] zzy(java.lang.String)>
		SHA-256: f2106878215500731f872a321e6e2580f7862f1e78afb72228f2462e8fd8203f
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 4c3ef24d9dcbe9c3c805a70b30efd3900d8efcc8b976bdf307a218612149c602
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9293)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzax(java.lang.String)>
		SHA-256: 6545b1ca496f33acd2771b459413dee90332a755585a2562beceb956785e67cd
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6920)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: ecbf2a01c04a265c2a3ec98bbe99eb53807fd88f1ab6084ba5ee50292122f062
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10613)
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: 3b333194070ad2b7564ef6e2b8d6e6a0efa1ab253c4e3c58e0fa66f709992efa
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: a0fb3191ce4c347e6dc4d2c93a2b28d5d01589a91341d353d9d79172a555d6fa
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: 6e6f3a156274bccb5009c67a602212222822b175df2e03889ca0ead18734c307
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10186)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: f04e7869766a3cbd162771d9a8f528b832deb86c7b6d2c84090122b588653e72
		Secure: false
	Object:
		Variable: varReplacer6920
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6920)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: 35e570a212d9ff4d0862ecebdb137cd1894716951dd1e9c180bcb73224a9782f
		Secure: false
	Object:
		Variable: varReplacer10186
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10186)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: ec854879542a3cc57dbf1025af0b07a75da2c3d926b445e7aca602c1549e89fa
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: bdc7512ec38c2cc09adba71da2f9eeaa86d77e6218983960216f0ede83a261e7
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11628)
		Method: <com.google.android.gms.internal.zzbl: java.security.MessageDigest zzcu()>
		SHA-256: 376a3545ff9583b2dd04f53d08a3d22248dd2d1d1c5328e3afea4b415ebf6e98
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer6926)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: 645cb5248feab13013f5f67e2ff0b4aeabca926c815e5cb2acd848a4b2eeaaa2
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6935)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: f3d8a9c6c5c826c279a905c8b4a533eda04334e8959ae7e91f4922258e90896c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer6923, varReplacer6924)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: 7685408a0f221946abfd747cb14c3720592a5d1f091abc08b82b0ebe9a5c31e5
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.jb.gokeyboard.theme.template.util.MD5: java.lang.String to32BitString(java.lang.String,boolean,java.lang.String)>
		SHA-256: ecba3dab4c41b7a4ff993eef20596fa3f11b5bb345b97ea3312cc2084d292831
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.facebook.ads.internal.util.s: java.lang.String b(java.lang.String)>
		SHA-256: cb5c85ecc670eb31cda7aafed21d7f4cf4c9816928a7898d9b23a7a6312611af
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 57b34ea97dd082ce3816307185da5f3c24486a235eadb14d113287b38117a418
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9482)
		Method: <com.facebook.ads.internal.util.s: java.lang.String b(java.lang.String)>
		SHA-256: 30556d2f39acbbc9c160decb793991e5135bf30c112bb81585c5e90c2695bdb2
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6918)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: 3780dde5b775895fe998710ed1cbb3964219c0ac2d1730f91f634ff275366fa
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 5a4ce487d3da3934d330909e15f4b82460918db06fc9ea79826feeef29fe6fe3
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: ac2912fd2a8cc62f2d028959fdfebed1a18ae39f8a205fd829cc8080606487cd
		Secure: true
	Object:
		Variable: varReplacer6935
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6935)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 1160e14f6210b4ef1fc44284fbe4f8234c2576c05986d64110b11cefe0fff39f
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzax(java.lang.String)>
		SHA-256: 7308cbb752fef6ca5c626168d9dd95e9e8f9ddb34d1af5deec26021c404b54b2
		Secure: true
	Object:
		Variable: r12
		Type: java.security.SecureRandom
		Statement: specialinvoke r12.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)>
		SHA-256: 28ce7f80687f60d700936748d1561bbe406957299dfe63f40eacb0b994499d24
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8995)
		Method: <com.google.android.gms.internal.zzhl: java.lang.String zzgn()>
		SHA-256: d5f3f22d9bf4019119694752b19fcf6a07ed89cbccaf512c78599a7f5760f9d
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer6922)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: 294e3d653fa3869f1cf5323f3df09875971b2f543270b077fd06af89f46d80bc
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 13b7df8e4159afd3c95e773a0a2fb89a181151c51e2fcbe7400da8a0d51bf426
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzhl: java.lang.String zzgn()>
		SHA-256: 1c33ea201bcf804228acbcaa6968fdd2b73f38f2ea8aa76f62f64bd55c2bd1be
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10184)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: eed2e5a73d124635c7b6e77f5956e57dc5c873ecfdd1692705f8414be87590ab
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6936)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 68733191fb3e9603a3d6db0d4a48c91d2d3f51a6cbf3cbf4c359eec991a1c2ef
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9093)
		Method: <com.jb.gokeyboard.theme.template.util.MD5: java.lang.String to32BitString(java.lang.String,boolean,java.lang.String)>
		SHA-256: 91a434e00ab132b717d2f776c44d2986e023e929571dcb6ab5e7dcfac5b4e17b
		Secure: true
	Object:
		Variable: r10
		Type: java.security.SecureRandom
		Statement: specialinvoke r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: c49baf8b2831a2be9aa3b8b2b456003f3087b1f5f20fd8411803ca8aa53c7285
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1194)
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: 521a5a473ce14779be9bc7aa51245175865c8ed93ba4ce34b6183b6ffa3df661
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: c912c10fbdf9c59ad4f89e99034f2098742bd04a6912e7829063391bc286c150
		Secure: false

Findings in Java Class: com.facebook.ads.internal.util.g

	 in Method: void b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1197, r12, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1197, r12, $r3)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #521a5a473ce14779be9bc7aa51245175865c8ed93ba4ce34b6183b6ffa3df661)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1194)


Findings in Java Class: com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt

	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6920)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #3780dde5b775895fe998710ed1cbb3964219c0ac2d1730f91f634ff275366fa)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6918)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6919, $r2)


	 in Method: byte[] encrypt(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #68733191fb3e9603a3d6db0d4a48c91d2d3f51a6cbf3cbf4c359eec991a1c2ef)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6936)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6937, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6935)


	 in Method: byte[] getRawKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer6925, $r2)


Findings in Java Class: com.google.android.gms.internal.zzbm

	 in Method: java.lang.String zzz(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #376a3545ff9583b2dd04f53d08a3d22248dd2d1d1c5328e3afea4b415ebf6e98)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r5.<com.google.android.gms.internal.zzbl: byte[] zzy(java.lang.String)>($r1)


	 in Method: java.lang.String zzA(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #376a3545ff9583b2dd04f53d08a3d22248dd2d1d1c5328e3afea4b415ebf6e98)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = virtualinvoke $r10.<com.google.android.gms.internal.zzbl: byte[] zzy(java.lang.String)>($r1)


Findings in Java Class: com.google.android.gms.internal.zzar

	 in Method: byte[] zzc(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10187, $r10, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10186)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 35

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 3
	IncompleteOperationError: 2
	RequiredPredicateError: 10
=====================================================================