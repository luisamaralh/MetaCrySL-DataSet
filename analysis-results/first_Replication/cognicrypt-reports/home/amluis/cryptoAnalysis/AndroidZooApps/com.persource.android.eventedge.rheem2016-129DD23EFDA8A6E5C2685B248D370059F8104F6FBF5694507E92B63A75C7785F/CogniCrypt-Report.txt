Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.persource.android.http.RSAEncryption: void initKey()>
		SHA-256: 2a3381d89b81c1649b3e72ee669f197104a161fb408148354740d17b5cf3c19b
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.PublicKey
		Statement: $r2 = virtualinvoke $r1.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.persource.android.http.RSAEncryption: void initKey()>
		SHA-256: 1dd1f463b1f0efd532a31a37b178c8eda60fa45019bf280d819add2e7a2cef81
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.persource.android.http.AES256Cipher: void initKey()>
		SHA-256: 58945049af25493fa4c9a708d69544768011046cd739b70e90787171c410f785
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer11551)
		Method: <com.persource.android.http.AES256Cipher: void initKey()>
		SHA-256: 87cb78054ca6e44b46d400659cbfa2aeda114d9bc379fcb3d4f44c204fd002f2
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.PrivateKey
		Statement: $r3 = virtualinvoke $r1.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.persource.android.http.RSAEncryption: void initKey()>
		SHA-256: defe66733c44ad0d8403120a2b5368b4593ea0f4bb35ad9f55a1d23d6a087d58
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.android.volley.cache.DiskLruBasedCache: java.lang.String hashKeyForDisk(java.lang.String)>
		SHA-256: ec43dc7bac9afe42f113c51f32768952684e020fbc41b645cbf75e939da130c1
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11601)
		Method: <com.persource.android.http.RSAEncryption: java.lang.String encryptData(java.lang.String,byte[])>
		SHA-256: 451f4c13e138cb94f5a3d6c04945213677a872c4dce30deddc2dd9ce0ff6ea5f
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.artifex.mupdflib.MD5: java.lang.String MD5Hash(java.lang.String)>
		SHA-256: f8d18cdc6332cebb9b945a8b130b22812212283a43e394bf3ef703198b5507ca
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6223)
		Method: <com.artifex.mupdflib.MD5: java.lang.String MD5Hash(java.lang.String)>
		SHA-256: b1a47cffa91653a2aa743b086872afe411795a2028d34a94daf583b260f2b13
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.persource.android.http.RSAEncryption: java.lang.String encryptData(java.lang.String,byte[])>
		SHA-256: 2881a0a2ab51d5bce6e3d5f009fa39f2e0a738e7cae86b31809d4ea8571a5e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.persource.android.http.AES256Cipher: void initKey()>
		SHA-256: 4d7c6baab5c92f0db662144587ecd1ce39344dbb6502d372fd0860823b5cfdcf
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer11547)
		Method: <com.persource.android.http.RSAEncryption: void initKey()>
		SHA-256: c99a51b2929526e660ef064af649e0ff25e7ff04ab04964357f961717c5b735a
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11895)
		Method: <com.android.volley.cache.DiskLruBasedCache: java.lang.String hashKeyForDisk(java.lang.String)>
		SHA-256: 4abae615fa8e2349325e04cb3d4e0d0bdc6889636f4630d54a3052ab3296c2bf
		Secure: true

Findings in Java Class: com.persource.android.http.RSAEncryption

	 in Method: java.lang.String encryptData(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer11598, $r4)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 1
=====================================================================