Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2782)
		Method: <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String generateSecretKey()>
		SHA-256: 3df29c06b66152ec5cc6b0f699878d834c3be2f81f85eaf0a9aa0e2ee55199ec
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r2, varReplacer2785, varReplacer2786)
		Method: <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String generateSecretKey()>
		SHA-256: cd54227c107f613872aebb5fd3f6f5e8eef15cf111df97ce0e601a9abf58f0f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String generateSecretKey()>
		SHA-256: 8587a6b4a3889c8369399b8eeb96b169923a65cf7cc1c21ddd8e41ba84d9f9f2
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String generateSecretKey()>
		SHA-256: fa977e069dc0ac398df10afb498000c56cee071c981025dcb8bde7b6f89d767d
		Secure: true
	Object:
		Variable: varReplacer2786
		Type: int
		Statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r2, varReplacer2785, varReplacer2786)
		Method: <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String generateSecretKey()>
		SHA-256: b9d2f65e47dc0c91f8035ffe808879960b72b41ee5f40f91745c0e4bc25c7331
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.DigestOutputStream
		Statement: specialinvoke $r9.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r8, $r11)
		Method: <com.flurry.sdk.cz: void <init>(java.lang.String,java.lang.String,boolean,boolean,long,long,java.util.List,java.util.Map,java.util.Map,java.util.Map,java.util.Map,long)>
		SHA-256: 16b4ee685194b5150c9ab5dffdc62fc66837468af57f451a43130dfeca2e1f48
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2784)
		Method: <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String generateSecretKey()>
		SHA-256: 31cb35586d1f46d9dbef4ca2ce909f7fe10d23bb209b128294bbf8a0dff403ce
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)
		Method: <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String generateSecretKey()>
		SHA-256: 3a6681e13e99ce1167f2e123de6b187a07d2651df36cf9186221a2e800757161
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer817)
		Method: <com.flurry.sdk.fb: byte[] d(java.lang.String)>
		SHA-256: 96f38ada6fa45e494678c199605644aafd259111a6110b7e61c05c240225c2c6
		Secure: true
	Object:
		Variable: varReplacer2784
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2784)
		Method: <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String generateSecretKey()>
		SHA-256: 37e33144971e4c8937a46a968fd87f6c25878286f5fd653ef9ea321defa71e0e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.flurry.sdk.fb: byte[] d(java.lang.String)>
		SHA-256: 1a1cc63830a47172efe6cbfe44438f7887878e3b6548376813c2dd25011ed742
		Secure: true

Findings in Java Class: com.pmx.pmx_client.utils.io.EncryptionHelper

	 in Method: java.lang.String generateSecretKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #3df29c06b66152ec5cc6b0f699878d834c3be2f81f85eaf0a9aa0e2ee55199ec)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2782)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2784)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #cd54227c107f613872aebb5fd3f6f5e8eef15cf111df97ce0e601a9abf58f0f)
			Third parameter (with value 1000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r2, varReplacer2785, varReplacer2786)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #cd54227c107f613872aebb5fd3f6f5e8eef15cf111df97ce0e601a9abf58f0f)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)


Findings in Java Class: com.flurry.sdk.cz

	 in Method: void <init>(java.lang.String,java.lang.String,boolean,boolean,long,long,java.util.List,java.util.Map,java.util.Map,java.util.Map,java.util.Map,long)
		IncompleteOperationError violating CrySL rule for java.security.DigestOutputStream (on Object #16b4ee685194b5150c9ab5dffdc62fc66837468af57f451a43130dfeca2e1f48)
			Operation on object of type java.security.DigestOutputStream object not completed. Expected call to write
			at statement: virtualinvoke $r9.<java.security.DigestOutputStream: void on(boolean)>(varReplacer3695)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 11

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 2
	RequiredPredicateError: 2
	ConstraintError: 2
=====================================================================