public class org.bitcoinj.crypto.PBKDF2SHA512 extends java.lang.Object
{

    private static byte[] F(java.lang.String, java.lang.String, int, int) throws java.lang.Exception
    {
        java.lang.String $r0, $r1, varReplacer7340, varReplacer7341, varReplacer7343;
        int $i0, $i1, $i2, $i3, $i4, varReplacer7342, varReplacer7344, varReplacer7345;
        javax.crypto.spec.SecretKeySpec $r2;
        byte[] $r3, $r4, $r5;
        javax.crypto.Mac $r6;
        byte $b5, $b6;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = null;

        $r4 = null;

        $r2 = new javax.crypto.spec.SecretKeySpec;

        varReplacer7340 = "UTF-8";

        $r5 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer7340);

        varReplacer7343 = "HmacSHA512";

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer7343);

        $r0 = virtualinvoke $r2.<javax.crypto.spec.SecretKeySpec: java.lang.String getAlgorithm()>();

        $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r0);

        virtualinvoke $r6.<javax.crypto.Mac: void init(java.security.Key)>($r2);

        $i2 = 0;

     label1:
        if $i2 >= 2048 goto label6;

        if $i2 != 0 goto label3;

        varReplacer7341 = "UTF-8";

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer7341);

        $r3 = staticinvoke <org.bitcoinj.crypto.PBKDF2SHA512: byte[] INT(int)>($i1);

        $i3 = lengthof $r4;

        $i4 = lengthof $r3;

        $i3 = $i3 + $i4;

        $r5 = newarray (byte)[$i3];

        $i3 = lengthof $r4;

        varReplacer7344 = 0;

        varReplacer7345 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, varReplacer7344, $r5, varReplacer7344, $i3);

        $i3 = lengthof $r4;

        $i4 = lengthof $r3;

        varReplacer7342 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, varReplacer7342, $r5, $i3, $i4);

        $r3 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5);

        $r4 = $r3;

        virtualinvoke $r6.<javax.crypto.Mac: void reset()>();

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        $r3 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3);

        virtualinvoke $r6.<javax.crypto.Mac: void reset()>();

        $i3 = 0;

     label4:
        $i4 = lengthof $r4;

        if $i3 >= $i4 goto label5;

        $b5 = $r4[$i3];

        $b6 = $r3[$i3];

        $b5 = $b5 ^ $b6;

        $r4[$i3] = $b5;

        $i3 = $i3 + 1;

        goto label4;

     label5:
        goto label2;

     label6:
        return $r4;
    }

    private static byte[] INT(int)
    {
        int $i0, varReplacer7346;
        java.nio.ByteBuffer $r0;
        java.nio.ByteOrder $r1;
        byte[] $r2;

        nop;

        $i0 := @parameter0: int;

        varReplacer7346 = 4;

        $r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(varReplacer7346);

        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r1);

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i0);

        $r2 = virtualinvoke $r0.<java.nio.ByteBuffer: byte[] array()>();

        return $r2;
    }

    public static byte[] derive(java.lang.String, java.lang.String, int, int)
    {
        java.lang.String $r0, $r1, varReplacer7337;
        int $i0, $i1, $i2, $i4, varReplacer7334, varReplacer7338, varReplacer7339;
        byte[] $r2, $r7;
        java.io.ByteArrayOutputStream $r3;
        java.lang.Exception $r4;
        double $d0, $d1, $d2, varReplacer7335, varReplacer7336;
        byte $b3;
        java.lang.IllegalArgumentException $r5;
        java.lang.RuntimeException $r6;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        $d0 = (double) 64;

     label01:
        varReplacer7335 = 2.0;

        varReplacer7336 = 32.0;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>(varReplacer7335, varReplacer7336);

     label02:
        $d1 = $d1 - 1.0;

        $d1 = $d1 * 20.0;

        $b3 = $d0 cmpl $d1;

        if $b3 <= 0 goto label05;

        $r5 = new java.lang.IllegalArgumentException;

     label03:
        varReplacer7337 = "derived key too long";

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer7337);

        throw $r5;

     label04:
        $r4 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r6;

     label05:
        $d0 = (double) 64;

        $d0 = $d0 / 20.0;

     label06:
        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

     label07:
        $i2 = (int) $d0;

        $i4 = 1;

     label08:
        if $i4 > $i2 goto label11;

     label09:
        varReplacer7334 = 2048;

        $r2 = staticinvoke <org.bitcoinj.crypto.PBKDF2SHA512: byte[] F(java.lang.String,java.lang.String,int,int)>($r0, $r1, varReplacer7334, $i4);

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[])>($r2);

     label10:
        $i4 = $i4 + 1;

        goto label08;

     label11:
        $r2 = newarray (byte)[64];

        $r7 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $i0 = lengthof $r2;

        varReplacer7338 = 0;

        varReplacer7339 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, varReplacer7338, $r2, varReplacer7338, $i0);

        return $r2;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Exception from label03 to label04 with label04;
        catch java.lang.Exception from label06 to label07 with label04;
        catch java.lang.Exception from label09 to label10 with label04;
    }
}
