class com.nielsen.app.sdk.c extends java.lang.Object
{
    public static final int ENCODING_SCHEME_Base16Text;
    public static final int ENCODING_SCHEME_Base64Text;
    private static java.security.KeyStore d;
    private static java.lang.String e;
    private static java.lang.String f;
    private static android.content.SharedPreferences g;
    private static final java.lang.String h;
    private static final java.lang.String i;
    private static final java.lang.String k;
    private static final java.lang.String l;
    private com.nielsen.app.sdk.a a;
    private android.content.Context b;
    private byte[] c;
    private java.lang.String j;
    private javax.crypto.Cipher m;
    private javax.crypto.SecretKey n;
    private javax.crypto.spec.IvParameterSpec o;

    static void <clinit>()
    {
        java.lang.String varReplacer3175, varReplacer3176;
        null_type varReplacer3177, varReplacer3178;

        nop;

        varReplacer3178 = null;

        <com.nielsen.app.sdk.c: java.security.KeyStore d> = varReplacer3178;

        varReplacer3176 = "cryptoAliasKey";

        <com.nielsen.app.sdk.c: java.lang.String e> = varReplacer3176;

        varReplacer3175 = "initialVectorAlias";

        <com.nielsen.app.sdk.c: java.lang.String f> = varReplacer3175;

        varReplacer3177 = null;

        <com.nielsen.app.sdk.c: android.content.SharedPreferences g> = varReplacer3177;

        return;
    }

    public void <init>(android.content.Context, com.nielsen.app.sdk.a)
    {
        com.nielsen.app.sdk.c $r0;
        android.content.Context $r1;
        com.nielsen.app.sdk.a $r2;
        null_type varReplacer3180, varReplacer3181, varReplacer3182, varReplacer3183, varReplacer3184, varReplacer3185, varReplacer3186;

        nop;

        $r0 := @this: com.nielsen.app.sdk.c;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.nielsen.app.sdk.a;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer3184 = null;

        $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a> = varReplacer3184;

        varReplacer3183 = null;

        $r0.<com.nielsen.app.sdk.c: android.content.Context b> = varReplacer3183;

        varReplacer3186 = null;

        $r0.<com.nielsen.app.sdk.c: byte[] c> = varReplacer3186;

        varReplacer3180 = null;

        $r0.<com.nielsen.app.sdk.c: java.lang.String j> = varReplacer3180;

        varReplacer3185 = null;

        $r0.<com.nielsen.app.sdk.c: javax.crypto.Cipher m> = varReplacer3185;

        varReplacer3181 = null;

        $r0.<com.nielsen.app.sdk.c: javax.crypto.SecretKey n> = varReplacer3181;

        varReplacer3182 = null;

        $r0.<com.nielsen.app.sdk.c: javax.crypto.spec.IvParameterSpec o> = varReplacer3182;

        $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a> = $r2;

        $r0.<com.nielsen.app.sdk.c: android.content.Context b> = $r1;

        return;
    }

    private boolean a()
    {
        com.nielsen.app.sdk.c $r0;
        boolean $z0, $z1;
        javax.crypto.Cipher $r1;
        javax.crypto.SecretKey $r2;
        javax.crypto.spec.IvParameterSpec $r3;
        android.content.Context $r4;
        java.lang.String $r5, $r16, varReplacer3143, varReplacer3144, varReplacer3146, varReplacer3147, varReplacer3150, varReplacer3155, varReplacer3157, varReplacer3158, varReplacer3159, varReplacer3161, varReplacer3164, varReplacer3166, varReplacer3167, varReplacer3169, varReplacer3170, varReplacer3172, varReplacer3173, varReplacer3174;
        java.security.KeyStore $r6;
        android.content.SharedPreferences $r7;
        java.io.File $r8;
        java.lang.StringBuilder $r9;
        javax.crypto.KeyGenerator $r10;
        java.security.SecureRandom $r11;
        byte[] $r12;
        javax.crypto.spec.SecretKeySpec $r13;
        int $i0, varReplacer3148, varReplacer3149, varReplacer3151, varReplacer3153, varReplacer3154, varReplacer3156, varReplacer3160, varReplacer3163, varReplacer3165, varReplacer3168, varReplacer3171;
        android.content.SharedPreferences$Editor $r14;
        char[] $r15;
        java.io.FileOutputStream $r17;
        java.io.FileInputStream $r18;
        java.security.Key $r19;
        java.lang.Throwable $r20, $r23, $r24;
        com.nielsen.app.sdk.a $r21;
        java.lang.Object[] $r22;
        java.lang.Exception $r25;
        null_type varReplacer3145, varReplacer3152, varReplacer3162;

        nop;

        $r0 := @this: com.nielsen.app.sdk.c;

        $z0 = 0;

        $r1 = $r0.<com.nielsen.app.sdk.c: javax.crypto.Cipher m>;

        if $r1 == null goto label01;

        $r2 = $r0.<com.nielsen.app.sdk.c: javax.crypto.SecretKey n>;

        if $r2 == null goto label01;

        $r3 = $r0.<com.nielsen.app.sdk.c: javax.crypto.spec.IvParameterSpec o>;

        if $r3 == null goto label01;

        varReplacer3153 = 1;

        return varReplacer3153;

     label01:
        $r4 = $r0.<com.nielsen.app.sdk.c: android.content.Context b>;

     label02:
        if $r4 == null goto label79;

     label03:
        $r5 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5);

     label04:
        <com.nielsen.app.sdk.c: java.security.KeyStore d> = $r6;

     label05:
        $r4 = $r0.<com.nielsen.app.sdk.c: android.content.Context b>;

     label06:
        varReplacer3170 = "AppCryptoPrefs";

        varReplacer3171 = 0;

        $r7 = virtualinvoke $r4.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>(varReplacer3170, varReplacer3171);

     label07:
        <com.nielsen.app.sdk.c: android.content.SharedPreferences g> = $r7;

        $r6 = <com.nielsen.app.sdk.c: java.security.KeyStore d>;

        if $r6 == null goto label81;

        $r7 = <com.nielsen.app.sdk.c: android.content.SharedPreferences g>;

        if $r7 == null goto label81;

     label08:
        $r4 = $r0.<com.nielsen.app.sdk.c: android.content.Context b>;

     label09:
        $r8 = virtualinvoke $r4.<android.content.Context: java.io.File getFilesDir()>();

        $r5 = virtualinvoke $r8.<java.io.File: java.lang.String getPath()>();

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String toString()>();

     label10:
        $r8 = new java.io.File;

        $r9 = new java.lang.StringBuilder;

     label11:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label12:
        $r5 = <java.io.File: java.lang.String separator>;

     label13:
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer3144 = "cryptokey.keystore";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3144);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r5);

        $z1 = virtualinvoke $r8.<java.io.File: boolean exists()>();

     label14:
        if $z1 != 0 goto label55;

     label15:
        varReplacer3167 = "AES";

        $r10 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer3167);

        varReplacer3172 = "SHA1PRNG";

        $r11 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer3172);

        varReplacer3151 = 256;

        virtualinvoke $r10.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer3151, $r11);

        $r2 = virtualinvoke $r10.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        $r12 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>();

     label16:
        $r0.<com.nielsen.app.sdk.c: byte[] c> = $r12;

        $r12 = newarray (byte)[16];

     label17:
        virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>($r12);

     label18:
        $r3 = new javax.crypto.spec.IvParameterSpec;

     label19:
        specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12);

     label20:
        $r0.<com.nielsen.app.sdk.c: javax.crypto.spec.IvParameterSpec o> = $r3;

     label21:
        $r13 = new javax.crypto.spec.SecretKeySpec;

     label22:
        $i0 = lengthof $r12;

     label23:
        varReplacer3160 = 0;

        varReplacer3161 = "AES";

        specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer3160, $i0, varReplacer3161);

     label24:
        $r7 = <com.nielsen.app.sdk.c: android.content.SharedPreferences g>;

     label25:
        $r14 = interfaceinvoke $r7.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

     label26:
        $r12 = newarray (byte)[16];

     label27:
        virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>($r12);

        varReplacer3165 = 0;

        $r5 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r12, varReplacer3165);

     label28:
        $r0.<com.nielsen.app.sdk.c: java.lang.String j> = $r5;

        $r5 = $r0.<com.nielsen.app.sdk.c: java.lang.String j>;

     label29:
        varReplacer3158 = "[^A-Za-z]+";

        varReplacer3159 = "";

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(varReplacer3158, varReplacer3159);

     label30:
        $r0.<com.nielsen.app.sdk.c: java.lang.String j> = $r5;

        $r5 = $r0.<com.nielsen.app.sdk.c: java.lang.String j>;

     label31:
        varReplacer3166 = "KeyStorePw";

        interfaceinvoke $r14.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>(varReplacer3166, $r5);

        interfaceinvoke $r14.<android.content.SharedPreferences$Editor: boolean commit()>();

     label32:
        $r6 = <com.nielsen.app.sdk.c: java.security.KeyStore d>;

     label33:
        $r5 = $r0.<com.nielsen.app.sdk.c: java.lang.String j>;

     label34:
        $r15 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        varReplacer3145 = null;

        virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer3145, $r15);

     label35:
        $r6 = <com.nielsen.app.sdk.c: java.security.KeyStore d>;

        $r5 = <com.nielsen.app.sdk.c: java.lang.String e>;

     label36:
        $r16 = $r0.<com.nielsen.app.sdk.c: java.lang.String j>;

     label37:
        $r15 = virtualinvoke $r16.<java.lang.String: char[] toCharArray()>();

        varReplacer3152 = null;

        virtualinvoke $r6.<java.security.KeyStore: void setKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>($r5, $r2, $r15, varReplacer3152);

     label38:
        $r6 = <com.nielsen.app.sdk.c: java.security.KeyStore d>;

        $r5 = <com.nielsen.app.sdk.c: java.lang.String f>;

     label39:
        $r16 = $r0.<com.nielsen.app.sdk.c: java.lang.String j>;

     label40:
        $r15 = virtualinvoke $r16.<java.lang.String: char[] toCharArray()>();

        varReplacer3162 = null;

        virtualinvoke $r6.<java.security.KeyStore: void setKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>($r5, $r13, $r15, varReplacer3162);

     label41:
        $r4 = $r0.<com.nielsen.app.sdk.c: android.content.Context b>;

     label42:
        varReplacer3147 = "cryptokey.keystore";

        varReplacer3148 = 0;

        $r17 = virtualinvoke $r4.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>(varReplacer3147, varReplacer3148);

     label43:
        $r6 = <com.nielsen.app.sdk.c: java.security.KeyStore d>;

     label44:
        $r5 = $r0.<com.nielsen.app.sdk.c: java.lang.String j>;

     label45:
        $r15 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r6.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r17, $r15);

        virtualinvoke $r17.<java.io.FileOutputStream: void close()>();

     label46:
        $r13 = new javax.crypto.spec.SecretKeySpec;

     label47:
        $r12 = $r0.<com.nielsen.app.sdk.c: byte[] c>;

     label48:
        varReplacer3146 = "AES";

        specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer3146);

     label49:
        $r0.<com.nielsen.app.sdk.c: javax.crypto.SecretKey n> = $r13;

     label50:
        varReplacer3173 = "AES/CBC/PKCS5Padding";

        $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3173);

     label51:
        $r0.<com.nielsen.app.sdk.c: javax.crypto.Cipher m> = $r1;

     label52:
        $z1 = 1;

     label53:
        $z0 = $z1;

     label54:
        return $z0;

     label55:
        $r7 = <com.nielsen.app.sdk.c: android.content.SharedPreferences g>;

     label56:
        $r5 = $r0.<com.nielsen.app.sdk.c: java.lang.String j>;

     label57:
        varReplacer3174 = "KeyStorePw";

        $r5 = interfaceinvoke $r7.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(varReplacer3174, $r5);

     label58:
        $r0.<com.nielsen.app.sdk.c: java.lang.String j> = $r5;

        $r4 = $r0.<com.nielsen.app.sdk.c: android.content.Context b>;

     label59:
        varReplacer3143 = "cryptokey.keystore";

        $r18 = virtualinvoke $r4.<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>(varReplacer3143);

     label60:
        $r6 = <com.nielsen.app.sdk.c: java.security.KeyStore d>;

     label61:
        $r5 = $r0.<com.nielsen.app.sdk.c: java.lang.String j>;

     label62:
        $r15 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r18, $r15);

     label63:
        $r6 = <com.nielsen.app.sdk.c: java.security.KeyStore d>;

        $r5 = <com.nielsen.app.sdk.c: java.lang.String e>;

     label64:
        $r16 = $r0.<com.nielsen.app.sdk.c: java.lang.String j>;

     label65:
        $r15 = virtualinvoke $r16.<java.lang.String: char[] toCharArray()>();

        $r19 = virtualinvoke $r6.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r5, $r15);

     label66:
        $r2 = (javax.crypto.SecretKey) $r19;

     label67:
        $r12 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>();

     label68:
        $r0.<com.nielsen.app.sdk.c: byte[] c> = $r12;

     label69:
        $r6 = <com.nielsen.app.sdk.c: java.security.KeyStore d>;

        $r5 = <com.nielsen.app.sdk.c: java.lang.String f>;

     label70:
        $r16 = $r0.<com.nielsen.app.sdk.c: java.lang.String j>;

     label71:
        $r15 = virtualinvoke $r16.<java.lang.String: char[] toCharArray()>();

        $r19 = virtualinvoke $r6.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r5, $r15);

     label72:
        $r2 = (javax.crypto.SecretKey) $r19;

     label73:
        $r3 = new javax.crypto.spec.IvParameterSpec;

     label74:
        $r12 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>();

        specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12);

     label75:
        $r0.<com.nielsen.app.sdk.c: javax.crypto.spec.IvParameterSpec o> = $r3;

     label76:
        virtualinvoke $r18.<java.io.FileInputStream: void close()>();

     label77:
        goto label46;

     label78:
        $r20 := @caughtexception;

        $r21 = $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a>;

        $r22 = newarray (java.lang.Object)[0];

        varReplacer3168 = 69;

        varReplacer3169 = "UTF-8 encoding for initial vector array is not supported";

        virtualinvoke $r21.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,char,java.lang.String,java.lang.Object[])>($r20, varReplacer3168, varReplacer3169, $r22);

        goto label54;

     label79:
        $r21 = $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a>;

        $r22 = newarray (java.lang.Object)[0];

     label80:
        varReplacer3154 = 69;

        varReplacer3155 = "App Context is NULL. Unable to retrieve absolute directory path and access preferences !";

        virtualinvoke $r21.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer3154, varReplacer3155, $r22);

     label81:
        $z1 = 0;

        goto label53;

     label82:
        $r23 := @caughtexception;

        $r21 = $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a>;

        $r22 = newarray (java.lang.Object)[0];

        varReplacer3156 = 69;

        varReplacer3157 = "Encryption algorithm support does not exist";

        virtualinvoke $r21.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,char,java.lang.String,java.lang.Object[])>($r23, varReplacer3156, varReplacer3157, $r22);

        goto label54;

     label83:
        $r24 := @caughtexception;

        $r21 = $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a>;

        $r22 = newarray (java.lang.Object)[0];

        varReplacer3149 = 69;

        varReplacer3150 = "Padding scheme supported does not exist";

        virtualinvoke $r21.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,char,java.lang.String,java.lang.Object[])>($r24, varReplacer3149, varReplacer3150, $r22);

        goto label54;

     label84:
        $r25 := @caughtexception;

        $r21 = $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a>;

        $r22 = newarray (java.lang.Object)[0];

        varReplacer3163 = 69;

        varReplacer3164 = "Failed setting up encrypt/decrypt paramerers";

        virtualinvoke $r21.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,char,java.lang.String,java.lang.Object[])>($r25, varReplacer3163, varReplacer3164, $r22);

        goto label54;

        catch java.io.UnsupportedEncodingException from label03 to label04 with label78;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label78;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label78;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label78;
        catch java.io.UnsupportedEncodingException from label13 to label14 with label78;
        catch java.io.UnsupportedEncodingException from label15 to label16 with label78;
        catch java.io.UnsupportedEncodingException from label17 to label18 with label78;
        catch java.io.UnsupportedEncodingException from label19 to label20 with label78;
        catch java.io.UnsupportedEncodingException from label23 to label24 with label78;
        catch java.io.UnsupportedEncodingException from label25 to label26 with label78;
        catch java.io.UnsupportedEncodingException from label27 to label28 with label78;
        catch java.io.UnsupportedEncodingException from label29 to label30 with label78;
        catch java.io.UnsupportedEncodingException from label31 to label32 with label78;
        catch java.io.UnsupportedEncodingException from label34 to label35 with label78;
        catch java.io.UnsupportedEncodingException from label37 to label38 with label78;
        catch java.io.UnsupportedEncodingException from label40 to label41 with label78;
        catch java.io.UnsupportedEncodingException from label42 to label43 with label78;
        catch java.io.UnsupportedEncodingException from label45 to label46 with label78;
        catch java.io.UnsupportedEncodingException from label48 to label49 with label78;
        catch java.io.UnsupportedEncodingException from label50 to label51 with label78;
        catch java.io.UnsupportedEncodingException from label57 to label58 with label78;
        catch java.io.UnsupportedEncodingException from label59 to label60 with label78;
        catch java.io.UnsupportedEncodingException from label62 to label63 with label78;
        catch java.io.UnsupportedEncodingException from label65 to label66 with label78;
        catch java.io.UnsupportedEncodingException from label67 to label68 with label78;
        catch java.io.UnsupportedEncodingException from label71 to label72 with label78;
        catch java.io.UnsupportedEncodingException from label74 to label75 with label78;
        catch java.io.UnsupportedEncodingException from label76 to label77 with label78;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label82;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label82;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label82;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label82;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label82;
        catch java.security.NoSuchAlgorithmException from label15 to label16 with label82;
        catch java.security.NoSuchAlgorithmException from label17 to label18 with label82;
        catch java.security.NoSuchAlgorithmException from label19 to label20 with label82;
        catch java.security.NoSuchAlgorithmException from label23 to label24 with label82;
        catch java.security.NoSuchAlgorithmException from label25 to label26 with label82;
        catch java.security.NoSuchAlgorithmException from label27 to label28 with label82;
        catch java.security.NoSuchAlgorithmException from label29 to label30 with label82;
        catch java.security.NoSuchAlgorithmException from label31 to label32 with label82;
        catch java.security.NoSuchAlgorithmException from label34 to label35 with label82;
        catch java.security.NoSuchAlgorithmException from label37 to label38 with label82;
        catch java.security.NoSuchAlgorithmException from label40 to label41 with label82;
        catch java.security.NoSuchAlgorithmException from label42 to label43 with label82;
        catch java.security.NoSuchAlgorithmException from label45 to label46 with label82;
        catch java.security.NoSuchAlgorithmException from label48 to label49 with label82;
        catch java.security.NoSuchAlgorithmException from label50 to label51 with label82;
        catch java.security.NoSuchAlgorithmException from label57 to label58 with label82;
        catch java.security.NoSuchAlgorithmException from label59 to label60 with label82;
        catch java.security.NoSuchAlgorithmException from label62 to label63 with label82;
        catch java.security.NoSuchAlgorithmException from label65 to label66 with label82;
        catch java.security.NoSuchAlgorithmException from label67 to label68 with label82;
        catch java.security.NoSuchAlgorithmException from label71 to label72 with label82;
        catch java.security.NoSuchAlgorithmException from label74 to label75 with label82;
        catch java.security.NoSuchAlgorithmException from label76 to label77 with label82;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label83;
        catch javax.crypto.NoSuchPaddingException from label06 to label07 with label83;
        catch javax.crypto.NoSuchPaddingException from label09 to label10 with label83;
        catch javax.crypto.NoSuchPaddingException from label11 to label12 with label83;
        catch javax.crypto.NoSuchPaddingException from label13 to label14 with label83;
        catch javax.crypto.NoSuchPaddingException from label15 to label16 with label83;
        catch javax.crypto.NoSuchPaddingException from label17 to label18 with label83;
        catch javax.crypto.NoSuchPaddingException from label19 to label20 with label83;
        catch javax.crypto.NoSuchPaddingException from label23 to label24 with label83;
        catch javax.crypto.NoSuchPaddingException from label25 to label26 with label83;
        catch javax.crypto.NoSuchPaddingException from label27 to label28 with label83;
        catch javax.crypto.NoSuchPaddingException from label29 to label30 with label83;
        catch javax.crypto.NoSuchPaddingException from label31 to label32 with label83;
        catch javax.crypto.NoSuchPaddingException from label34 to label35 with label83;
        catch javax.crypto.NoSuchPaddingException from label37 to label38 with label83;
        catch javax.crypto.NoSuchPaddingException from label40 to label41 with label83;
        catch javax.crypto.NoSuchPaddingException from label42 to label43 with label83;
        catch javax.crypto.NoSuchPaddingException from label45 to label46 with label83;
        catch javax.crypto.NoSuchPaddingException from label48 to label49 with label83;
        catch javax.crypto.NoSuchPaddingException from label50 to label51 with label83;
        catch javax.crypto.NoSuchPaddingException from label57 to label58 with label83;
        catch javax.crypto.NoSuchPaddingException from label59 to label60 with label83;
        catch javax.crypto.NoSuchPaddingException from label62 to label63 with label83;
        catch javax.crypto.NoSuchPaddingException from label65 to label66 with label83;
        catch javax.crypto.NoSuchPaddingException from label67 to label68 with label83;
        catch javax.crypto.NoSuchPaddingException from label71 to label72 with label83;
        catch javax.crypto.NoSuchPaddingException from label74 to label75 with label83;
        catch javax.crypto.NoSuchPaddingException from label76 to label77 with label83;
        catch java.lang.Exception from label01 to label02 with label84;
        catch java.lang.Exception from label03 to label04 with label84;
        catch java.lang.Exception from label05 to label07 with label84;
        catch java.lang.Exception from label08 to label10 with label84;
        catch java.lang.Exception from label11 to label12 with label84;
        catch java.lang.Exception from label13 to label14 with label84;
        catch java.lang.Exception from label15 to label18 with label84;
        catch java.lang.Exception from label19 to label21 with label84;
        catch java.lang.Exception from label22 to label24 with label84;
        catch java.lang.Exception from label25 to label32 with label84;
        catch java.lang.Exception from label33 to label35 with label84;
        catch java.lang.Exception from label36 to label38 with label84;
        catch java.lang.Exception from label39 to label43 with label84;
        catch java.lang.Exception from label44 to label46 with label84;
        catch java.lang.Exception from label47 to label52 with label84;
        catch java.lang.Exception from label56 to label60 with label84;
        catch java.lang.Exception from label61 to label63 with label84;
        catch java.lang.Exception from label64 to label69 with label84;
        catch java.lang.Exception from label70 to label73 with label84;
        catch java.lang.Exception from label74 to label77 with label84;
        catch java.io.UnsupportedEncodingException from label80 to label81 with label78;
        catch java.security.NoSuchAlgorithmException from label80 to label81 with label82;
        catch javax.crypto.NoSuchPaddingException from label80 to label81 with label83;
        catch java.lang.Exception from label79 to label81 with label84;
    }

    private byte[] a(byte[])
    {
        com.nielsen.app.sdk.c $r0;
        byte[] $r1;
        boolean $z0;
        javax.crypto.Cipher $r2;
        javax.crypto.SecretKey $r3;
        javax.crypto.spec.IvParameterSpec $r4;
        java.lang.Throwable $r5, $r8, $r9, $r10;
        com.nielsen.app.sdk.a $r6;
        java.lang.Object[] $r7;
        java.lang.Exception $r11;
        int varReplacer3127, varReplacer3129, varReplacer3131, varReplacer3133, varReplacer3137, varReplacer3141;
        java.lang.String varReplacer3128, varReplacer3130, varReplacer3132, varReplacer3134, varReplacer3142;
        null_type varReplacer3135, varReplacer3136, varReplacer3138, varReplacer3139, varReplacer3140;

        nop;

        $r0 := @this: com.nielsen.app.sdk.c;

        $r1 := @parameter0: byte[];

     label01:
        $z0 = specialinvoke $r0.<com.nielsen.app.sdk.c: boolean a()>();

     label02:
        if $z0 == 0 goto label13;

     label03:
        $r2 = $r0.<com.nielsen.app.sdk.c: javax.crypto.Cipher m>;

        $r3 = $r0.<com.nielsen.app.sdk.c: javax.crypto.SecretKey n>;

        $r4 = $r0.<com.nielsen.app.sdk.c: javax.crypto.spec.IvParameterSpec o>;

     label04:
        varReplacer3137 = 1;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3137, $r3, $r4);

     label05:
        $r2 = $r0.<com.nielsen.app.sdk.c: javax.crypto.Cipher m>;

     label06:
        $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label07:
        return $r1;

     label08:
        $r5 := @caughtexception;

        $r6 = $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a>;

        $r7 = newarray (java.lang.Object)[0];

        varReplacer3129 = 69;

        varReplacer3130 = "Invalid key for encryption algorithm";

        virtualinvoke $r6.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,char,java.lang.String,java.lang.Object[])>($r5, varReplacer3129, varReplacer3130, $r7);

        varReplacer3135 = null;

        return varReplacer3135;

     label09:
        $r8 := @caughtexception;

        $r6 = $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a>;

        $r7 = newarray (java.lang.Object)[0];

        varReplacer3141 = 69;

        varReplacer3142 = "Invalid parameter for encryption algorithm";

        virtualinvoke $r6.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,char,java.lang.String,java.lang.Object[])>($r8, varReplacer3141, varReplacer3142, $r7);

        varReplacer3138 = null;

        return varReplacer3138;

     label10:
        $r9 := @caughtexception;

        $r6 = $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a>;

        $r7 = newarray (java.lang.Object)[0];

        varReplacer3133 = 69;

        varReplacer3134 = "Illegal block size for encryption algorithm";

        virtualinvoke $r6.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,char,java.lang.String,java.lang.Object[])>($r9, varReplacer3133, varReplacer3134, $r7);

        varReplacer3139 = null;

        return varReplacer3139;

     label11:
        $r10 := @caughtexception;

        $r6 = $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a>;

        $r7 = newarray (java.lang.Object)[0];

        varReplacer3127 = 69;

        varReplacer3128 = "Bad padding for encryption algorithm";

        virtualinvoke $r6.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,char,java.lang.String,java.lang.Object[])>($r10, varReplacer3127, varReplacer3128, $r7);

        varReplacer3140 = null;

        return varReplacer3140;

     label12:
        $r11 := @caughtexception;

        $r6 = $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a>;

        $r7 = newarray (java.lang.Object)[0];

        varReplacer3131 = 69;

        varReplacer3132 = "Failed encrypting from bytes";

        virtualinvoke $r6.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,char,java.lang.String,java.lang.Object[])>($r11, varReplacer3131, varReplacer3132, $r7);

     label13:
        varReplacer3136 = null;

        return varReplacer3136;

        catch java.security.InvalidKeyException from label01 to label02 with label08;
        catch java.security.InvalidKeyException from label04 to label05 with label08;
        catch java.security.InvalidKeyException from label06 to label07 with label08;
        catch java.security.InvalidAlgorithmParameterException from label01 to label02 with label09;
        catch java.security.InvalidAlgorithmParameterException from label04 to label05 with label09;
        catch java.security.InvalidAlgorithmParameterException from label06 to label07 with label09;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label10;
        catch javax.crypto.IllegalBlockSizeException from label04 to label05 with label10;
        catch javax.crypto.IllegalBlockSizeException from label06 to label07 with label10;
        catch javax.crypto.BadPaddingException from label01 to label02 with label11;
        catch javax.crypto.BadPaddingException from label04 to label05 with label11;
        catch javax.crypto.BadPaddingException from label06 to label07 with label11;
        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label07 with label12;
    }

    private byte[] b(byte[])
    {
        com.nielsen.app.sdk.c $r0;
        byte[] $r1;
        boolean $z0;
        javax.crypto.Cipher $r2;
        javax.crypto.SecretKey $r3;
        javax.crypto.spec.IvParameterSpec $r4;
        java.lang.Throwable $r5, $r8, $r9, $r10;
        com.nielsen.app.sdk.a $r6;
        java.lang.Object[] $r7;
        java.lang.Exception $r11;
        int varReplacer3199, varReplacer3201, varReplacer3204, varReplacer3208, varReplacer3212, varReplacer3213;
        java.lang.String varReplacer3200, varReplacer3202, varReplacer3205, varReplacer3209, varReplacer3214;
        null_type varReplacer3203, varReplacer3206, varReplacer3207, varReplacer3210, varReplacer3211;

        nop;

        $r0 := @this: com.nielsen.app.sdk.c;

        $r1 := @parameter0: byte[];

     label01:
        $z0 = specialinvoke $r0.<com.nielsen.app.sdk.c: boolean a()>();

     label02:
        if $z0 == 0 goto label13;

     label03:
        $r2 = $r0.<com.nielsen.app.sdk.c: javax.crypto.Cipher m>;

        $r3 = $r0.<com.nielsen.app.sdk.c: javax.crypto.SecretKey n>;

        $r4 = $r0.<com.nielsen.app.sdk.c: javax.crypto.spec.IvParameterSpec o>;

     label04:
        varReplacer3212 = 2;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3212, $r3, $r4);

     label05:
        $r2 = $r0.<com.nielsen.app.sdk.c: javax.crypto.Cipher m>;

     label06:
        $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label07:
        return $r1;

     label08:
        $r5 := @caughtexception;

        $r6 = $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a>;

        $r7 = newarray (java.lang.Object)[0];

        varReplacer3208 = 69;

        varReplacer3209 = "Invalid key for decryption algorithm";

        virtualinvoke $r6.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,char,java.lang.String,java.lang.Object[])>($r5, varReplacer3208, varReplacer3209, $r7);

        varReplacer3203 = null;

        return varReplacer3203;

     label09:
        $r8 := @caughtexception;

        $r6 = $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a>;

        $r7 = newarray (java.lang.Object)[0];

        varReplacer3213 = 69;

        varReplacer3214 = "Invalid parameter for decryption algorithm";

        virtualinvoke $r6.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,char,java.lang.String,java.lang.Object[])>($r8, varReplacer3213, varReplacer3214, $r7);

        varReplacer3211 = null;

        return varReplacer3211;

     label10:
        $r9 := @caughtexception;

        $r6 = $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a>;

        $r7 = newarray (java.lang.Object)[0];

        varReplacer3201 = 69;

        varReplacer3202 = "Illegal block size for decryption algorithm";

        virtualinvoke $r6.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,char,java.lang.String,java.lang.Object[])>($r9, varReplacer3201, varReplacer3202, $r7);

        varReplacer3210 = null;

        return varReplacer3210;

     label11:
        $r10 := @caughtexception;

        $r6 = $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a>;

        $r7 = newarray (java.lang.Object)[0];

        varReplacer3204 = 69;

        varReplacer3205 = "Bad padding for decryption algorithm";

        virtualinvoke $r6.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,char,java.lang.String,java.lang.Object[])>($r10, varReplacer3204, varReplacer3205, $r7);

        varReplacer3206 = null;

        return varReplacer3206;

     label12:
        $r11 := @caughtexception;

        $r6 = $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a>;

        $r7 = newarray (java.lang.Object)[0];

        varReplacer3199 = 69;

        varReplacer3200 = "Failed decrypting from bytes";

        virtualinvoke $r6.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,char,java.lang.String,java.lang.Object[])>($r11, varReplacer3199, varReplacer3200, $r7);

     label13:
        varReplacer3207 = null;

        return varReplacer3207;

        catch java.security.InvalidKeyException from label01 to label02 with label08;
        catch java.security.InvalidKeyException from label04 to label05 with label08;
        catch java.security.InvalidKeyException from label06 to label07 with label08;
        catch java.security.InvalidAlgorithmParameterException from label01 to label02 with label09;
        catch java.security.InvalidAlgorithmParameterException from label04 to label05 with label09;
        catch java.security.InvalidAlgorithmParameterException from label06 to label07 with label09;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label10;
        catch javax.crypto.IllegalBlockSizeException from label04 to label05 with label10;
        catch javax.crypto.IllegalBlockSizeException from label06 to label07 with label10;
        catch javax.crypto.BadPaddingException from label01 to label02 with label11;
        catch javax.crypto.BadPaddingException from label04 to label05 with label11;
        catch javax.crypto.BadPaddingException from label06 to label07 with label11;
        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label07 with label12;
    }

    public java.lang.String decrypt(java.lang.String, int)
    {
        com.nielsen.app.sdk.c $r0;
        java.lang.String $r1, varReplacer3190, varReplacer3194;
        int $i0, varReplacer3189, varReplacer3191, varReplacer3193;
        byte[] $r2;
        java.nio.charset.Charset $r3;
        java.lang.Throwable $r4;
        com.nielsen.app.sdk.a $r5;
        java.lang.Object[] $r6;
        java.lang.Exception $r7;
        null_type varReplacer3187, varReplacer3188, varReplacer3192;

        nop;

        $r0 := @this: com.nielsen.app.sdk.c;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        lookupswitch($i0)
        {
            case 0: goto label03;
            case 1: goto label05;
            default: goto label01;
        };

     label01:
        $r2 = null;

     label02:
        if $r2 != null goto label07;

        varReplacer3187 = null;

        return varReplacer3187;

     label03:
        varReplacer3191 = 0;

        $r2 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r1, varReplacer3191);

     label04:
        goto label02;

     label05:
        $r2 = staticinvoke <com.nielsen.app.sdk.k: byte[] g(java.lang.String)>($r1);

     label06:
        goto label02;

     label07:
        $r2 = specialinvoke $r0.<com.nielsen.app.sdk.c: byte[] b(byte[])>($r2);

     label08:
        if $r2 == null goto label13;

        $r1 = new java.lang.String;

     label09:
        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r2, $r3);

     label10:
        return $r1;

     label11:
        $r4 := @caughtexception;

        $r5 = $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a>;

        $r6 = newarray (java.lang.Object)[0];

        varReplacer3193 = 69;

        varReplacer3194 = "IllegalArgumentException while decrypting text.";

        virtualinvoke $r5.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,char,java.lang.String,java.lang.Object[])>($r4, varReplacer3193, varReplacer3194, $r6);

        varReplacer3188 = null;

        return varReplacer3188;

     label12:
        $r7 := @caughtexception;

        $r5 = $r0.<com.nielsen.app.sdk.c: com.nielsen.app.sdk.a a>;

        $r6 = newarray (java.lang.Object)[0];

        varReplacer3189 = 69;

        varReplacer3190 = "Failed decrypting string";

        virtualinvoke $r5.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,char,java.lang.String,java.lang.Object[])>($r7, varReplacer3189, varReplacer3190, $r6);

        varReplacer3192 = null;

        return varReplacer3192;

     label13:
        $r1 = null;

        goto label10;

        catch java.lang.IllegalArgumentException from label03 to label04 with label11;
        catch java.lang.IllegalArgumentException from label05 to label06 with label11;
        catch java.lang.IllegalArgumentException from label07 to label08 with label11;
        catch java.lang.IllegalArgumentException from label09 to label10 with label11;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label12;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.lang.Exception from label09 to label10 with label12;
    }

    public java.lang.String encrypt(java.lang.String, int)
    {
        com.nielsen.app.sdk.c $r0;
        java.lang.String $r1;
        int $i0, varReplacer3123;
        java.nio.charset.Charset $r2;
        byte[] $r3;
        null_type varReplacer3124, varReplacer3125;

        nop;

        $r0 := @this: com.nielsen.app.sdk.c;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $r3 = specialinvoke $r0.<com.nielsen.app.sdk.c: byte[] a(byte[])>($r3);

        if $r3 == null goto label4;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            default: goto label1;
        };

     label1:
        varReplacer3124 = null;

        return varReplacer3124;

     label2:
        varReplacer3123 = 0;

        $r1 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r3, varReplacer3123);

        return $r1;

     label3:
        $r1 = staticinvoke <com.nielsen.app.sdk.k: java.lang.String a(byte[])>($r3);

        return $r1;

     label4:
        varReplacer3125 = null;

        return varReplacer3125;
    }
}
