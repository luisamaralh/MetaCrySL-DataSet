Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r2 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.effect.monster.StartingActivity: java.lang.String a(java.lang.String)>
		SHA-256: 272a4a3bf5a58b46b6b61fde4a51688e7585889bd3ee23e13907423bdeb1ad1d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer388)
		Method: <com.facebook.ads.internal.util.u: java.lang.String a(java.lang.String)>
		SHA-256: 73d74d3d8ade66b15c7a4849de94a46421f37dfeae28e3d312895988c5c28291
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3559)
		Method: <com.facebook.ads.internal.i.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 33637454decd848cbddf74c056cfd9071221babd1005d337fe1ec75e75e619f6
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.effect.monster.StartingActivity: java.lang.String a(java.lang.String)>
		SHA-256: aa719fdd6d79750159aa22fbf53021df82e0b09cd47e3d7f1fdb0eb077110d02
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.a: java.lang.String a(java.lang.String)>
		SHA-256: 9c928118487fae9d5eac892aa739474a497b63552a1867048909118d0f5dc27a
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.util.u: java.lang.String a(java.lang.String)>
		SHA-256: b0848ede314d8f6f3edd11c3c03b4bc1df9fb690d05614c15c8c0b8d708023db
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <levis.app.purchase.util.Security: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 751a5ba36d3129042fb7bd697676e5ec07c9b1a95f1fa18340736b80f4d28eaf
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.facebook.ads.internal.i.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 8b3145b340a6eb159a4d880bda44d3cff594af2332e72af75d6e28d17186dbf7
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.KeyGenerator
		Statement: $r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1350)
		Method: <com.effect.monster.StartingActivity: java.lang.String a(java.lang.String)>
		SHA-256: fe6f5013e8ea849a9302071048eb232c37088619a692ae84e89d1692b68a38a3
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: $r4 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer1353, varReplacer1354)
		Method: <com.effect.monster.StartingActivity: java.lang.String a(java.lang.String)>
		SHA-256: 48be15bd4ac8037d1522d0bdf77c8063c938ba4857681b40b0acf3c9dccb4734
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1349)
		Method: <com.effect.monster.StartingActivity: java.lang.String a(java.lang.String)>
		SHA-256: b130002f21b251972e2314727f3083e06e9285e5cfb3d7ec58e6274b6d658bd4
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1355)
		Method: <com.effect.monster.StartingActivity: java.lang.String a(java.lang.String)>
		SHA-256: 857d7cb32b316f95012afd9393f4b396d028433de7c2a8906c84c7b4fd04dcf0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1765)
		Method: <com.google.android.gms.ads.internal.util.client.a: java.lang.String a(java.lang.String)>
		SHA-256: b3f338d470f34343127520b22a1c03667b1f1ff09264688aa7cd1441330d9277
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer2435)
		Method: <levis.app.purchase.util.Security: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 5ba6627675d978414d5114957ffa6148422ee13237c2ec50976d8e01e3558925
		Secure: false
	Object:
		Variable: varReplacer1349
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1349)
		Method: <com.effect.monster.StartingActivity: java.lang.String a(java.lang.String)>
		SHA-256: c66371968bc15b43ae48c6d399882c445118ab419f5605c0db15d6d3160b98ed
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r3.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.effect.monster.StartingActivity: java.lang.String a(java.lang.String)>
		SHA-256: 3df35c8d4e239cfb008a11bc0727f92a6c3d09e5233a11d55a835f936ce99692
		Secure: false

Findings in Java Class: com.effect.monster.StartingActivity

	 in Method: java.lang.String a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer1351, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1352, $r7)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #857d7cb32b316f95012afd9393f4b396d028433de7c2a8906c84c7b4fd04dcf0)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1355)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1349)


Findings in Java Class: levis.app.purchase.util.Security

	 in Method: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 16

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 4
	ConstraintError: 1
=====================================================================