Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2515)
		Method: <com.joymeng.PaymentSdkV2.util.EncryptUtil: byte[] decrypt(java.lang.String,byte[])>
		SHA-256: c7a5a2343d7d44362efd46c61fa7b7337ff9a196885ebbef0d06c6678f9d40f2
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.chartboost.sdk.Libraries.b: byte[] a(byte[])>
		SHA-256: df9cc91db878d9b707b993c5401ae9c0015da739d8d6a1ac2039933dc2b2de26
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2518)
		Method: <com.joymeng.PaymentSdkV2.util.EncryptUtil: byte[] getRawKey(java.lang.String)>
		SHA-256: a79be01cd4646ec8e265f20579b5e4997cbb8e473c695d2af0610308a41d4439
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.unity3d.player.UnityPlayer: java.lang.String a(java.lang.String)>
		SHA-256: 5a54f705314d6605f4cf61ba388d3b495336c885c3ea98cfb7cec081c65981da
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.men.Shell.ShellUtil.c: byte[] b(java.lang.String,byte[])>
		SHA-256: 6f6df81b8c1fef610ae2b12dad81a2afe86b7b69644e05452f5f9e45ef4d3602
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.men.Shell.ShellUtil.c: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 984a9e6295005e04b804f766c7dd86650e4bf6022723a065d7e0d36f63e7427
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1414)
		Method: <com.unity3d.player.UnityPlayer: java.lang.String a(java.lang.String)>
		SHA-256: daa8cb8a1a0503bf153026c713ed2773645e4492ce367bd582344f6eb9034b57
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer1878)
		Method: <com.men.Shell.ShellUtil.c: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 28804ceb998b535b2b3271b19ffb8fb215a18927d663e3b74f8708daf338924b
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.men.Shell.ShellUtil.c: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 157c9e073cb609f61771352a8d4e2cabd409732995bfe40a84a078b9711e32c2
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3738)
		Method: <com.men.Shell.ShellUtil.c: byte[] b(java.lang.String,byte[])>
		SHA-256: 7761794a14b45e868351fc07ada7ccd8651c8a97563030747d4709de77133070
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.joymeng.PaymentSdkV2.util.EncryptUtil: byte[] decrypt(java.lang.String,byte[])>
		SHA-256: f6335512e54aa77a0c966a217a24a1492c856888fc2232b23057af4d7224a503
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2514)
		Method: <com.joymeng.PaymentSdkV2.util.EncryptUtil: byte[] decrypt(java.lang.String,byte[])>
		SHA-256: b8c0d5acf4c7901201bea00c424ff4f7eb7aaf36688a29c76376d3395423dae7
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <com.ltad.Tools.e: java.lang.String a(java.lang.String,byte[])>
		SHA-256: c5c8e53d4686506485e584f12086d41723c58cd4655195233a54052f5b023756
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.men.Shell.ShellUtil.c: byte[] b(java.lang.String,byte[])>
		SHA-256: 5dd10a97c202bfdb3ca767715b594f7c7c2005ec27994c38d8307bee086d441d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer2519, varReplacer2520)
		Method: <com.joymeng.PaymentSdkV2.util.EncryptUtil: byte[] getRawKey(java.lang.String)>
		SHA-256: bd4eecd3cc0e986006f548a789b5556eeaad74ed6c2389ee6876af35f835679
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4314)
		Method: <com.ltad.Tools.e: byte[] b(java.lang.String,byte[])>
		SHA-256: 5cf3189917f8f46a65de41e2f590e038648690b678d0d47f04cd41d641cc4938
		Secure: false
	Object:
		Variable: r10
		Type: java.security.SecureRandom
		Statement: specialinvoke r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: c49baf8b2831a2be9aa3b8b2b456003f3087b1f5f20fd8411803ca8aa53c7285
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1875)
		Method: <com.men.Shell.ShellUtil.c: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 8d1a9459670661766d3c5a21cd2f95e5d0fdcaf58bc6d55eeac2834692a907ec
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.men.Shell.ShellUtil.c: byte[] b(java.lang.String,byte[])>
		SHA-256: f441a70e7f1628771f6766cc806eae55ee7fffa7dc64e1480c4862f6933e09ef
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <com.men.Shell.ShellUtil.c: java.lang.String a(java.lang.String,byte[])>
		SHA-256: f326c6cd02fd631184226b1b797a5e0f142e9d576747c3e53cf3754815826f42
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4320)
		Method: <com.ltad.Tools.e: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 73690fd2e0afbe287164f15806eb334f4f444e2ec4ce581c1b49677ced02ea6
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4315)
		Method: <com.ltad.Tools.e: byte[] b(java.lang.String,byte[])>
		SHA-256: ce23f920cb4ce22751aa3024c53371418fac0bd4816e546640611edabcd5381e
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ltad.Tools.e: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 1a23e3ec0a1cbc25f2da6457ea141fc821d089fec011ccc1e10fd1e0bdd0ef79
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.ltad.Tools.e: byte[] b(java.lang.String,byte[])>
		SHA-256: 22680ec204e44b86a3f5834da332275e07d9fc90298fce74d8af0e66e759cde8
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.men.Shell.ShellUtil.c: byte[] b(java.lang.String,byte[])>
		SHA-256: c34bd69e76f972c8494f3f6b82bb602c464e8b3c54e25fcda691e85a8546e99
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.ltad.Tools.e: java.lang.String a(java.lang.String,byte[])>
		SHA-256: bec38a39f5526283b1434a89d1b19331063ae4dd2e462c76147468db431c3269
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.ltad.Tools.e: byte[] b(java.lang.String,byte[])>
		SHA-256: a9f2df2e82b8a67e0237d21c9c369628f411cc877cdb14c43118ecfccfbd0fc5
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3737)
		Method: <com.men.Shell.ShellUtil.c: byte[] b(java.lang.String,byte[])>
		SHA-256: 509cec1a676f63453097fc0c5a27d4d70bc4e96e01233239af5dc641a1b1331e
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ltad.Tools.e: byte[] b(java.lang.String,byte[])>
		SHA-256: 2a1d4c3b9303be8e3bd948ec4d34006c3193228ac3bb87a0086ad4bca24c63db
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.joymeng.PaymentSdkV2.util.EncryptUtil: byte[] getRawKey(java.lang.String)>
		SHA-256: 832cc7ee7853a8474bf964dd772b19827ab9615d62bf9d72ad7dcf755ae27738
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4317)
		Method: <com.ltad.Tools.e: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 3b793fd295a092a359b4aee9a65371503ca77cd2d2d90008cb9afd048dfb6098
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer939)
		Method: <com.chartboost.sdk.Libraries.b: byte[] a(byte[])>
		SHA-256: 267e10a8302f60f5f7db6cf92b800144010ae83e8863f64f3c4c3d2c80e43ed4
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1520)
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: b2c27bad3261def4da39c9df5e4885866eb3f3053fd1d1227461f340da5364ca
		Secure: false
	Object:
		Variable: varReplacer2515
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2515)
		Method: <com.joymeng.PaymentSdkV2.util.EncryptUtil: byte[] decrypt(java.lang.String,byte[])>
		SHA-256: c9cd22007b505d234788c906c5b1a87cf1d16aafa0bac7852c7deb219042009
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.ltad.Tools.e: byte[] b(java.lang.String,byte[])>
		SHA-256: c8d06f6b60166ede7f9b093b5efe12c2588c0bbd6d58f7236c091581b48c298c
		Secure: false

Findings in Java Class: com.unity3d.player.UnityPlayer

	 in Method: java.lang.String a(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #daa8cb8a1a0503bf153026c713ed2773645e4492ce367bd582344f6eb9034b57)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #daa8cb8a1a0503bf153026c713ed2773645e4492ce367bd582344f6eb9034b57)
			Third parameter (with value 0)Variable pre_lenmust be  greater than pre_off
			at statement: virtualinvoke $r2.<java.security.MessageDigest: void update(byte[],int,int)>($r1, varReplacer1409, $i3)


Findings in Java Class: com.facebook.ads.internal.util.g

	 in Method: void b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1519, r12, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1519, r12, $r3)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b2c27bad3261def4da39c9df5e4885866eb3f3053fd1d1227461f340da5364ca)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1520)


Findings in Java Class: com.men.Shell.ShellUtil.c

	 in Method: java.lang.String a(java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8d1a9459670661766d3c5a21cd2f95e5d0fdcaf58bc6d55eeac2834692a907ec)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES, DESede, RSA}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1875)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1876, $r5, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #28804ceb998b535b2b3271b19ffb8fb215a18927d663e3b74f8708daf338924b)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer1878)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1876, $r5, $r7)


	 in Method: byte[] b(java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7761794a14b45e868351fc07ada7ccd8651c8a97563030747d4709de77133070)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES, DESede, RSA}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3738)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3736, $r7, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #509cec1a676f63453097fc0c5a27d4d70bc4e96e01233239af5dc641a1b1331e)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3737)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


Findings in Java Class: com.ltad.Tools.e

	 in Method: byte[] b(java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5cf3189917f8f46a65de41e2f590e038648690b678d0d47f04cd41d641cc4938)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES, DESede, RSA}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4314)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4316, $r7, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #ce23f920cb4ce22751aa3024c53371418fac0bd4816e546640611edabcd5381e)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4315)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


	 in Method: java.lang.String a(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4318, $r5, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4318, $r5, $r7)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #73690fd2e0afbe287164f15806eb334f4f444e2ec4ce581c1b49677ced02ea6)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES, DESede, RSA}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4320)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #3b793fd295a092a359b4aee9a65371503ca77cd2d2d90008cb9afd048dfb6098)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4317)


Findings in Java Class: com.joymeng.PaymentSdkV2.util.EncryptUtil

	 in Method: byte[] decrypt(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2515)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2516, $r2)


	 in Method: byte[] getRawKey(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer2521, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 35

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 1
	ConstraintError: 10
	RequiredPredicateError: 19
=====================================================================