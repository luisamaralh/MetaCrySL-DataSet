public class com.iLivery.Util.VODconnect extends java.lang.Object
{
    private static int Time;
    private static int TimeDebug;
    private static final java.lang.String aesEncryptionAlgorithm;
    private static final java.lang.String characterEncoding;
    private static final java.lang.String cipherTransformation;
    private static final java.lang.String yek_2;

    public void <init>()
    {
        com.iLivery.Util.VODconnect $r0;

        $r0 := @this: com.iLivery.Util.VODconnect;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String WebService(java.lang.String, java.lang.String, java.util.Map)
    {
        java.lang.String $r0, $r1, $r3, $r4, $r5, $r7, $r8, varReplacer2726, varReplacer2727, varReplacer2729, varReplacer2730, varReplacer2731, varReplacer2734, varReplacer2735, varReplacer2736, varReplacer2737, varReplacer2738, varReplacer2739, varReplacer2740, varReplacer2741, varReplacer2743, varReplacer2744, varReplacer2745, varReplacer2746, varReplacer2748, varReplacer2749, varReplacer2750, varReplacer2751;
        java.util.Map $r2;
        java.lang.StringBuilder $r6, r12;
        boolean $z0;
        int $i0, $i1, $i2, varReplacer2728, varReplacer2732, varReplacer2733, varReplacer2742, varReplacer2747;
        java.lang.Throwable $r9, $r11;
        org.json.JSONException $r10;
        org.apache.http.client.ClientProtocolException r13;
        java.io.IOException r14;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.util.Map;

        $r3 = "";

        $r4 = "";

        $r5 = "";

        r12 = new java.lang.StringBuilder;

        $r6 = r12;

     label01:
        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        varReplacer2736 = "/";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2736);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $r3 = $r7;

     label03:
        $r8 = staticinvoke <com.iLivery.Connect.Connect: java.lang.String buildParameter(java.util.Map)>($r2);

        varReplacer2731 = "VOD - Send Message : ";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer2731, $r8);

        $r8 = staticinvoke <com.iLivery.Connect.Connect: java.lang.String buildParameter(java.util.Map)>($r2);

        varReplacer2728 = 1;

        $r8 = staticinvoke <com.iLivery.Util.VODconnect: java.lang.String encrypt(java.lang.String,boolean)>($r8, varReplacer2728);

        varReplacer2743 = "sData";

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer2743, $r8);

        $r8 = staticinvoke <com.iLivery.Connect.Connect: java.lang.String buildParameter(java.util.Map)>($r2);

     label04:
        $r4 = $r8;

     label05:
        $r7 = staticinvoke <com.iLivery.Util.VODconnect: java.lang.String process(java.lang.String,java.lang.String)>($r7, $r8);

     label06:
        $r5 = $r7;

     label07:
        if $r5 == null goto label08;

        varReplacer2734 = "";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer2734);

        if $z0 == 0 goto label09;

     label08:
        $r5 = "";

     label09:
        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 > 3500 goto label14;

        r12 = new java.lang.StringBuilder;

        varReplacer2739 = "- Parameter:";

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2739);

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer2746 = "- Result:";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2746);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.iLivery.Util.MyLog: void w(java.lang.String,java.lang.String)>($r3, $r4);

     label10:
        varReplacer2751 = "";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer2751);

        if $z0 == 0 goto label18;

        $i0 = <com.iLivery.Util.VODconnect: int Time>;

        if $i0 >= 0 goto label19;

        $i0 = <com.iLivery.Util.VODconnect: int Time>;

        $i0 = $i0 + 1;

        <com.iLivery.Util.VODconnect: int Time> = $i0;

        $r0 = staticinvoke <com.iLivery.Util.VODconnect: java.lang.String WebService(java.lang.String,java.lang.String,java.util.Map)>($r0, $r1, $r2);

        return $r0;

     label11:
        $r9 := @caughtexception;

        r12 = new java.lang.StringBuilder;

        varReplacer2737 = "- parameter:";

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2737);

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer2726 = "- Result:";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2726);

        varReplacer2727 = "";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2727);

        varReplacer2748 = "- Error";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2748);

        r13 = (org.apache.http.client.ClientProtocolException) $r9;

        $r7 = virtualinvoke r13.<org.apache.http.client.ClientProtocolException: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.iLivery.Util.MyLog: void e(java.lang.String,java.lang.String)>($r3, $r7);

        goto label07;

     label12:
        $r10 := @caughtexception;

        r12 = new java.lang.StringBuilder;

        varReplacer2745 = "- parameter:";

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2745);

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer2735 = "- Result:";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2735);

        varReplacer2740 = "";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2740);

        varReplacer2744 = "- Error";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2744);

        $r7 = virtualinvoke $r10.<org.json.JSONException: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.iLivery.Util.MyLog: void e(java.lang.String,java.lang.String)>($r3, $r7);

        goto label07;

     label13:
        $r11 := @caughtexception;

        r12 = new java.lang.StringBuilder;

        varReplacer2730 = "- parameter:";

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2730);

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer2741 = "- Result:";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2741);

        varReplacer2749 = "";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2749);

        varReplacer2738 = "- Error";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2738);

        r14 = (java.io.IOException) $r11;

        $r7 = virtualinvoke r14.<java.io.IOException: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.iLivery.Util.MyLog: void e(java.lang.String,java.lang.String)>($r3, $r7);

        goto label07;

     label14:
        r12 = new java.lang.StringBuilder;

        varReplacer2750 = "- Parameter:";

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2750);

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer2729 = "- Result:";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2729);

        varReplacer2732 = 0;

        varReplacer2733 = 3499;

        $r4 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(varReplacer2732, varReplacer2733);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.iLivery.Util.MyLog: void w(java.lang.String,java.lang.String)>($r3, $r4);

        $i0 = 3499;

     label15:
        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label10;

        if $i0 == 66499 goto label10;

        $i1 = $i0 + 3500;

        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i1 <= $i2 goto label17;

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i1 = $i1 + -1;

        $r4 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

     label16:
        staticinvoke <com.iLivery.Util.MyLog: void w(java.lang.String,java.lang.String)>($r3, $r4);

        $i0 = $i0 + 3500;

        goto label15;

     label17:
        $i1 = $i0 + 3500;

        $r4 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        goto label16;

     label18:
        varReplacer2747 = 0;

        <com.iLivery.Util.VODconnect: int Time> = varReplacer2747;

     label19:
        $i0 = <com.iLivery.Util.VODconnect: int TimeDebug>;

        if $i0 != 4 goto label20;

        varReplacer2742 = 0;

        <com.iLivery.Util.VODconnect: int TimeDebug> = varReplacer2742;

     label20:
        $i0 = <com.iLivery.Util.VODconnect: int TimeDebug>;

        $i0 = $i0 + 1;

        <com.iLivery.Util.VODconnect: int TimeDebug> = $i0;

        return $r5;

        catch org.apache.http.client.ClientProtocolException from label01 to label02 with label11;
        catch org.apache.http.client.ClientProtocolException from label03 to label04 with label11;
        catch org.apache.http.client.ClientProtocolException from label05 to label06 with label11;
        catch org.json.JSONException from label01 to label02 with label12;
        catch org.json.JSONException from label03 to label04 with label12;
        catch org.json.JSONException from label05 to label06 with label12;
        catch java.io.IOException from label01 to label02 with label13;
        catch java.io.IOException from label03 to label04 with label13;
        catch java.io.IOException from label05 to label06 with label13;
    }

    public static java.lang.String decrypt(java.lang.String)
    {
        java.lang.Exception $r0;
        byte[] $r1, $r4, $r5;
        java.lang.String $r2, $r3;
        boolean $z0;

        $r2 := @parameter0: java.lang.String;

     label01:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

     label02:
        if $z0 == 0 goto label03;

        return "";

     label03:
        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("[[ADD]]", "+");

     label04:
        $r2 = $r3;

     label05:
        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("[[AMPERSAND]]", "&");

     label06:
        $r2 = $r3;

     label07:
        $r4 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r3, 2);

        $r5 = staticinvoke <com.iLivery.Util.VODconnect: byte[] getKeyBytes(java.lang.String)>("@1B2c3D4e5F6g7H8");

        $r1 = newarray (byte)[16];

     label08:
        $r3 = new java.lang.String;

     label09:
        $r1 = staticinvoke <com.iLivery.Util.VODconnect: byte[] decrypt(byte[],byte[],byte[])>($r4, $r5, $r1);

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r1, "UTF-8");

     label10:
        return $r3;

     label11:
        $r0 := @caughtexception;

        $r3 = virtualinvoke $r0.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Error Decrypt", $r3);

        return $r2;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    private static byte[] decrypt(byte[], byte[], byte[]) throws java.security.NoSuchAlgorithmException, javax.crypto.NoSuchPaddingException, java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        byte[] $r0, $r1, $r4;
        javax.crypto.spec.IvParameterSpec $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        javax.crypto.Cipher $r5;

        $r4 := @parameter0: byte[];

        $r0 := @parameter1: byte[];

        $r1 := @parameter2: byte[];

        $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        $r3 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, "AES");

        $r2 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1);

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r3, $r2);

        $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

        return $r4;
    }

    public static java.lang.String encrypt(java.lang.String, boolean)
    {
        java.lang.String $r0, $r5, $r6, varReplacer2763, varReplacer2764, varReplacer2766, varReplacer2767, varReplacer2768, varReplacer2769, varReplacer2770;
        boolean $z0;
        java.lang.Exception $r1;
        byte[] $r2, $r3, $r4;
        int varReplacer2765;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

     label1:
        varReplacer2770 = "UTF-8";

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer2770);

        varReplacer2766 = "@1B2c3D4e5F6g7H8";

        $r4 = staticinvoke <com.iLivery.Util.VODconnect: byte[] getKeyBytes(java.lang.String)>(varReplacer2766);

        $r2 = newarray (byte)[16];

        $r2 = staticinvoke <com.iLivery.Util.VODconnect: byte[] encrypt(byte[],byte[],byte[])>($r3, $r4, $r2);

        varReplacer2765 = 2;

        $r5 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r2, varReplacer2765);

        varReplacer2769 = "+";

        $r6 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(varReplacer2769);

        varReplacer2768 = "[[ADD]]";

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r6, varReplacer2768);

        varReplacer2767 = "&";

        $r6 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(varReplacer2767);

        varReplacer2763 = "[[AMPERSAND]]";

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r6, varReplacer2763);

     label2:
        return $r5;

     label3:
        $r1 := @caughtexception;

        $r5 = virtualinvoke $r1.<java.lang.Exception: java.lang.String toString()>();

        varReplacer2764 = "Error Encrypt";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2764, $r5);

        return $r0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static byte[] encrypt(byte[], byte[], byte[]) throws java.security.NoSuchAlgorithmException, javax.crypto.NoSuchPaddingException, java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        byte[] $r0, $r1, $r4;
        javax.crypto.spec.IvParameterSpec $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        javax.crypto.Cipher $r5;
        java.lang.String varReplacer2774, varReplacer2775;
        int varReplacer2776;

        nop;

        $r4 := @parameter0: byte[];

        $r0 := @parameter1: byte[];

        $r1 := @parameter2: byte[];

        varReplacer2775 = "AES/CBC/PKCS5Padding";

        $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2775);

        $r3 = new javax.crypto.spec.SecretKeySpec;

        varReplacer2774 = "AES";

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2774);

        $r2 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1);

        varReplacer2776 = 1;

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2776, $r3, $r2);

        $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

        return $r4;
    }

    private static byte[] getKeyBytes(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String $r0, varReplacer2773;
        byte[] $r1, $r2;
        int $i0, $i1, varReplacer2771, varReplacer2772;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = newarray (byte)[16];

        varReplacer2773 = "UTF-8";

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer2773);

        $i1 = lengthof $r2;

        $i0 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        varReplacer2771 = 0;

        varReplacer2772 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, varReplacer2771, $r1, varReplacer2771, $i0);

        return $r1;
    }

    public static java.lang.String process(java.lang.String, java.lang.String) throws org.json.JSONException, org.apache.http.client.ClientProtocolException, java.io.IOException, java.lang.OutOfMemoryError
    {
        java.lang.String $r0, $r1, varReplacer2758, varReplacer2759, varReplacer2760, varReplacer2761, varReplacer2762;
        org.apache.http.client.methods.HttpPost $r2;
        org.apache.http.entity.StringEntity $r3;
        org.apache.http.impl.client.DefaultHttpClient $r4;
        org.apache.http.HttpResponse $r5;
        org.apache.http.message.BasicHttpResponse $r6;
        org.apache.http.HttpEntity $r7;
        java.io.InputStream $r8;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new org.apache.http.client.methods.HttpPost;

        specialinvoke $r2.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r0);

        varReplacer2761 = "Accept";

        varReplacer2762 = "application/json";

        virtualinvoke $r2.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>(varReplacer2761, varReplacer2762);

        varReplacer2758 = "Content-type";

        varReplacer2759 = "application/json; charset=UTF-8";

        virtualinvoke $r2.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>(varReplacer2758, varReplacer2759);

        $r3 = new org.apache.http.entity.StringEntity;

        varReplacer2760 = "utf-8";

        specialinvoke $r3.<org.apache.http.entity.StringEntity: void <init>(java.lang.String,java.lang.String)>($r1, varReplacer2760);

        virtualinvoke $r2.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r3);

        $r4 = staticinvoke <com.iLivery.Connect.Connect: org.apache.http.impl.client.DefaultHttpClient HttpClientSecurity()>();

        $r5 = virtualinvoke $r4.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r2);

        $r6 = (org.apache.http.message.BasicHttpResponse) $r5;

        $r7 = virtualinvoke $r6.<org.apache.http.message.BasicHttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r8 = interfaceinvoke $r7.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r0 = staticinvoke <com.iLivery.Connect.Connect: java.lang.String convertStreamToString(java.io.InputStream)>($r8);

        virtualinvoke $r8.<java.io.InputStream: void close()>();

        return $r0;
    }
}
