Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer2981)
		Method: <com.iLivery.Util.GoogleBusiness: java.lang.String returnURL(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: de11af2f67ecca9f175eb058581240cabaa039673639de46566eb05365a3cc62
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Mac
		Statement: $r9 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer2996)
		Method: <com.iLivery.Util.GoogleBusiness: java.lang.String returnURL(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 6e66948599e903c7f4172466e91d7d42233a5779f164ef6e72f2f2fdf59be090
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2774)
		Method: <com.iLivery.Util.VODconnect: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: ecb491793699f9971b30f1403d6128b463dfa6c52aa975718d57dc409ce6e32a
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r9.<javax.crypto.Mac: byte[] doFinal(byte[])>($r8)
		Method: <com.iLivery.Util.GoogleBusiness: java.lang.String returnURL(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 5e64bf3ac448eee130e8176aa64cba5323ba3d4c46ca22674c01ffe67741a06b
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.iLivery.Util.NOTE: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: c855e860d190c3c96709c64c21c46d56003b48608589e00af4627258a61f004f
		Secure: false
	Object:
		Variable: varReplacer11638
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer11638)
		Method: <com.iLivery.Util.NOTE: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 8911eba2bb67e97eafe9af1434a985058c329dca552aecd5daae6e70272f6e53
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3491)
		Method: <com.iLivery.Util.NOTE: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 9d575c0b3b88d7a78ebf3056325c8432b4fcd016fc546d6ef0a78169e4f59d6e
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2775)
		Method: <com.iLivery.Util.VODconnect: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 3f8648ebd99ba4af6a024b4190ca8293840476092da86aee1534f1c2b215e9ff
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.iLivery.Util.VODconnect: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 35c33007a6895c54639168661bff33d7d86570b459407958088af4ff83d513fa
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.iLivery.Util.NOTE: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: ed3435075df032789f764538e6e2d4e802f8098fdde66379e1f107e649af4337
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.iLivery.Util.VODconnect: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 16f63cda3a667d542b6c04fa51f5f9b22890450b5480107fbaab9a1fcf2d302b
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11639)
		Method: <com.iLivery.Util.NOTE: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 79ed816c454298a6e6b01fc42cc9d6e2d944b23b97138afc1ce495615ba76ce
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.iLivery.Util.NOTE: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: f56cf4215caaa8a733e8378cfb647f3970ece59a5a48558b3b04727eae1cba49
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer11638)
		Method: <com.iLivery.Util.NOTE: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 9659a9a3c6087618462a97c59497e97f14235e2e5a423f9df696bd6d21e93775
		Secure: false
	Object:
		Variable: varReplacer3491
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3491)
		Method: <com.iLivery.Util.NOTE: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 6407c23efb215ff7a373174b1394fa70ca6a9d842ac53fcdc2d4c1f709aa3d0e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.iLivery.Util.NOTE: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: ee565529610981d86b653cccf5908c7d009e57fe813ec7deae3a5b95716ad156
		Secure: false
	Object:
		Variable: varReplacer2981
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer2981)
		Method: <com.iLivery.Util.GoogleBusiness: java.lang.String returnURL(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 9b40bc871add3a9c0faf8d4b8e0f2dfb972d6205d4eec412d00501dea111de17
		Secure: false
	Object:
		Variable: varReplacer2774
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2774)
		Method: <com.iLivery.Util.VODconnect: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 7e7767ba5b6b88f13d717c0573a760945a5bd3a70faf22db4d821c598720ded8
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3490)
		Method: <com.iLivery.Util.NOTE: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: db8dd1eff2d5a5288151655c9a7f1153979133297ce2b0a4b085c8eeaf5a716f
		Secure: false

Findings in Java Class: com.iLivery.Util.VODconnect

	 in Method: byte[] encrypt(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2774)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2776, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2776, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: com.iLivery.Util.GoogleBusiness

	 in Method: java.lang.String returnURL(java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer2981)


Findings in Java Class: com.iLivery.Util.NOTE

	 in Method: byte[] decrypt(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer11638)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11637, $r3, $r2)


	 in Method: byte[] encrypt(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3491)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3492, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3492, $r3, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 19

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 12
=====================================================================