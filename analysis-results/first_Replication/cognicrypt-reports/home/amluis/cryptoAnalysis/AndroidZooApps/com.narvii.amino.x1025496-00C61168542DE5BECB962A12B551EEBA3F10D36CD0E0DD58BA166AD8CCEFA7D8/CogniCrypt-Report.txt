Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.proguard.ae: byte[] b(byte[])>
		SHA-256: 31e02891e3a9476b2fdf64aec5ea644ee014431ca417493746422526ae121032
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.proguard.ad: byte[] a(byte[])>
		SHA-256: 1b2d34230aeb84d08301e6c8390757b8976018b896efc184d8990f8b41a37835
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9061)
		Method: <com.tencent.bugly.crashreport.common.info.AppInfo: java.lang.String a(byte[])>
		SHA-256: 6efa022930f7fa3bb1366cb4b274e19ce5d4a0ae57041796e9668d6e679480ad
		Secure: false
	Object:
		Variable: $r26
		Type: java.security.MessageDigest
		Statement: $r26 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6213)
		Method: <com.narvii.account.LoginActivity: void onCreate(android.os.Bundle)>
		SHA-256: 2a152cd63886d07678a5efc068915154e0899fd150edeefc4123b57cb7c2eed2
		Secure: true
	Object:
		Variable: varReplacer10753
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer10753)
		Method: <com.tencent.bugly.proguard.ad: byte[] a(byte[])>
		SHA-256: a0158df9c7e0844636386cdaeb48ccfa089f6296c37268a87c4b24ee796c49f0
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.tencent.bugly.proguard.ad: byte[] b(byte[])>
		SHA-256: 85139d3905bd9bf57a81cf4e8ac35745239e4d105f3607248baf1062096457ca
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzd(java.lang.String,long)>
		SHA-256: 9b8a78d9edc971be91147cb909e582cf4e5d47ad532216cffc3f02042f047f00
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4774)
		Method: <com.avos.avoscloud.AVUtils: java.lang.String computeMD5(byte[])>
		SHA-256: e742c1b7db3618cf638cccda48a54d756694359e12aeb0862c9d03152946c89d
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8416)
		Method: <com.tencent.bugly.proguard.ad: byte[] b(byte[])>
		SHA-256: 7050aaf625c9fdfcc1054c91d9a28ae3aa80f97d4130fe2e75717d72dcf3f8e7
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzeg(java.lang.String)>
		SHA-256: ed4e9ddb7251b0e54551b6573d9e727c02047817b95d6673a730facf000f7796
		Secure: true
	Object:
		Variable: varReplacer11145
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer11145)
		Method: <com.tencent.bugly.proguard.y: byte[] a(int,byte[],byte[])>
		SHA-256: a4e181ad9ad27f7fbec7959a0f59d501d6e58844abb71973e724f4fa2fe6922e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4832)
		Method: <com.avos.avoscloud.AVOSSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: d14c61b481bb23b042ac330211ef4925e6704ad7eb670c09c73e9c72606477b7
		Secure: false
	Object:
		Variable: r8
		Type: java.security.SecureRandom
		Statement: specialinvoke r8.<java.security.SecureRandom: void <init>()>()
		Method: <org.jsoup.helper.HttpConnection$Response: void initUnSecureTSL()>
		SHA-256: 13995045b6fe88ac1e570f57460505d4fec052026d8ba6f5f48c1982d4a554c7
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.proguard.ad: byte[] b(byte[])>
		SHA-256: 98b36b9da51f6c787439a2c6f99457e93582aa6910fd497ad183592acc9b2f8
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.avos.avoscloud.AVUtils: java.lang.String computeMD5(byte[])>
		SHA-256: 1436e737a4df4be927a1e86cfd16a1a335fcc9cbbff5b8a8fe23b44e0364f983
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.tencent.bugly.proguard.ae: byte[] b(byte[])>
		SHA-256: 39c69db688862a11b1f1cab4160c38c6cd9c2111954b30c3dbf6d0fcecf2dd1a
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.proguard.ae: byte[] a(byte[])>
		SHA-256: c030e50f02728cab899233a11de7931537f524668a60d58bd8ecc5b0f4178b5
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tencent.bugly.crashreport.common.info.AppInfo: java.lang.String a(byte[])>
		SHA-256: 28315aa9f4666cf63c694727245200ebf64e1465c3ed2c81d73d75cd6b3b76d7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8412)
		Method: <com.tencent.bugly.proguard.ae: byte[] b(byte[])>
		SHA-256: 33037d544f5f2747a8cbad1ef4956e962fc3279c583fd44ca139ff0c8673086f
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8418)
		Method: <com.tencent.bugly.proguard.ad: byte[] b(byte[])>
		SHA-256: f756c0f721d57de0f2e074152510de5ffeaf3f67ceb6b51a60154ab505e6b77e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7240)
		Method: <org.jsoup.helper.HttpConnection$Response: void initUnSecureTSL()>
		SHA-256: 8453c00eed0a49ece8a17a74908290b68832a63ed5ac20fab3693948ba5348f8
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = interfaceinvoke $r8.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.tencent.bugly.proguard.y: byte[] a(int)>
		SHA-256: 162d9674bd063efcfc2b91e3dca28e7796dc94e2a91de529df2c979c964331ea
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tencent.bugly.proguard.y: byte[] a(int,byte[],byte[])>
		SHA-256: 42d2756fb900a36cafb2e686a301963ac254224fda799e92b0ae95c51c0976d9
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6582)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: f8c317db78f04c4ecc20e2f51d5e1028fc22e9fb46005d3c47369ee7f9b2d58b
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10752)
		Method: <com.tencent.bugly.proguard.ad: byte[] a(byte[])>
		SHA-256: 52a6876e415c11df8add8b30188a2c35a8bebf63855c3e46f7d923de6fbd5b8f
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8407)
		Method: <com.tencent.bugly.proguard.ae: byte[] b(byte[])>
		SHA-256: b55c5c2b59ad397a369b7aefa692861becf4222351312a87fcf89799538c6a59
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.loopj.android.http.MySSLSocketFactory: java.security.KeyStore getKeystore()>
		SHA-256: d011df71b400b4926b84dec0cad6ffb90a5bd3d26c43a5974bec9e614ef5edf5
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer10745)
		Method: <com.tencent.bugly.proguard.ae: byte[] a(byte[])>
		SHA-256: 5c1cf8a8b97adeb1edf5fb8199c89866dea5abefd11b0225ba1300dbafeb099
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzyy()>
		SHA-256: 747cd7a5f455355ff0fe5f8014ce696ade9b9ee6cb3a69db753af9edf316dde6
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.tencent.bugly.proguard.ae: byte[] b(byte[])>
		SHA-256: 442cd6826d9122049de32f921ae4c35498b34bd2d52f3e458e523b2e6d68aa02
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzd(java.lang.String,long)>
		SHA-256: 2abb37024bd464fc0c2ccf69b2ceddf0aedb43bffcb4711b7b94cf28f4b552ea
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11146)
		Method: <com.tencent.bugly.proguard.y: byte[] a(int,byte[],byte[])>
		SHA-256: e8216672a01bc0c6fed88ac00a0b5ddb586cd6ecb5a6c4dd39021a66494b6d80
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer10753)
		Method: <com.tencent.bugly.proguard.ad: byte[] a(byte[])>
		SHA-256: e59bf115324fdfdb21236a136d92930ee9771fd68732ebf4590679ffbb735c7
		Secure: false
	Object:
		Variable: varReplacer8416
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8416)
		Method: <com.tencent.bugly.proguard.ad: byte[] b(byte[])>
		SHA-256: 8452b9a7213211b3ebdc5f9eba322c486c014274708af032f36e7aa1132bd6fd
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.tencent.bugly.proguard.y: byte[] a(int,byte[],byte[])>
		SHA-256: a8ccc2836c0516ba3d87d0e8c07b6befe5e87b85f3b7a5609e8a66640d22f5ab
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>($i1, $r1)
		Method: <com.tencent.bugly.proguard.y: byte[] a(int,byte[],byte[])>
		SHA-256: 989ce84d4dee039e775ff6fdbe698c8bbd6ed27cf4f54eef37b9f65d50129a9b
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.tencent.bugly.proguard.ad: byte[] a(byte[])>
		SHA-256: c06353997528a7c68bf97e5ea85f208fc099213c4c3bd265aff490967ddd12b2
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.KeyGenerator
		Statement: $r6 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer8821)
		Method: <com.tencent.bugly.proguard.y: byte[] a(int)>
		SHA-256: 8350eca262149c83a6ea1adc782483e46ac86506562f25680a40fe3e32559f46
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10747)
		Method: <com.tencent.bugly.proguard.ae: byte[] a(byte[])>
		SHA-256: b66789daf8a2c9497ea2452c0d2ee4428eb5258e412a05d5d840b3581780104b
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <com.tencent.bugly.proguard.y: byte[] a(int)>
		SHA-256: 767d9d1db0ef1432f26655b7ad0acb61a31c492a69d163d4049b5703e1a7a3f3
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11140)
		Method: <com.tencent.bugly.proguard.y: byte[] b(int,byte[],byte[])>
		SHA-256: c706ff305eaa86ec4399bcf797eedb323d4c637942ec4650d9d4a07502123ce6
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4795)
		Method: <com.loopj.android.http.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 6bb9004775fd0e3198c0ace3ccc366a3211ac29edefcd8e548a4b8440fe50b4c
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9053)
		Method: <com.tencent.bugly.crashreport.common.info.AppInfo: java.lang.String a(byte[])>
		SHA-256: d13219a570c0db28f6b08807698899dd7b93bcb203f13fc7747637230db30fea
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r6.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.tencent.bugly.proguard.y: byte[] a(int)>
		SHA-256: a6ed4070a8ccd9e49a2d03d9d1654ff7b2edb263e5da3a34a4079f2dd257258e
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tencent.bugly.proguard.y: byte[] b(int,byte[],byte[])>
		SHA-256: 87dd063d1fb4c16289fa046662b527cdbf3cd0bd2265e6a425b43ad42c5c361c
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer6647)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzyy()>
		SHA-256: 768454a129917efe44c99daba8482d0a5bf6cc48976d070a22c91cd1dfbbb379
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.tencent.bugly.proguard.ae: byte[] a(byte[])>
		SHA-256: 4eca095e1b686e8dd3bb3844236c237786dce9dacfe7236dbb8b92573fd3b78f
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tencent.bugly.crashreport.common.info.AppInfo: java.lang.String a(byte[])>
		SHA-256: c795e7eda222ee706bf8dc74e0cf109d78009ea2b33faaf3544ad11303c922be
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <com.avos.avoscloud.PaasClient: com.avos.avoscloud.AVOSSSLSocketFactory sslSocketFactory()>
		SHA-256: 6acfce0b8ff5c863679e1f248a84c1a4b4948a00bcabaaafbd2071b8f404639f
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer11145)
		Method: <com.tencent.bugly.proguard.y: byte[] a(int,byte[],byte[])>
		SHA-256: 35bc0d85fffbbba922f22febf2e7e3cae166a87f4185e35a71f50f30f118e93e
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.tencent.bugly.proguard.ae: byte[] a(byte[])>
		SHA-256: d91d2651a308c77b1f287a19f4bd8ebfc8d3818e988193ed30b500539da406f0
		Secure: false

Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f8c317db78f04c4ecc20e2f51d5e1028fc22e9fb46005d3c47369ee7f9b2d58b)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6582)


Findings in Java Class: org.jsoup.helper.HttpConnection$Response

	 in Method: void initUnSecureTSL()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7238, r10, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7238, r10, $r3)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8453c00eed0a49ece8a17a74908290b68832a63ed5ac20fab3693948ba5348f8)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7240)


Findings in Java Class: com.tencent.bugly.proguard.ae

	 in Method: byte[] b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8408, $r7, $r8)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #33037d544f5f2747a8cbad1ef4956e962fc3279c583fd44ca139ff0c8673086f)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES, DESede, RSA}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8412)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #b55c5c2b59ad397a369b7aefa692861becf4222351312a87fcf89799538c6a59)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8407)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8408, $r7, $r8)


	 in Method: byte[] a(byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b66789daf8a2c9497ea2452c0d2ee4428eb5258e412a05d5d840b3581780104b)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES, DESede, RSA}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10747)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10746, $r7, $r8)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #5c1cf8a8b97adeb1edf5fb8199c89866dea5abefd11b0225ba1300dbafeb099)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer10745)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


Findings in Java Class: com.tencent.bugly.crashreport.common.info.AppInfo

	 in Method: java.lang.String a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6efa022930f7fa3bb1366cb4b274e19ce5d4a0ae57041796e9668d6e679480ad)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9061)


Findings in Java Class: com.tencent.bugly.proguard.y

	 in Method: byte[] a(int,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e8216672a01bc0c6fed88ac00a0b5ddb586cd6ecb5a6c4dd39021a66494b6d80)
			First parameter (with value "AES/GCM/NoPadding") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11146)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r2, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer11145)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r2, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>($i1, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r2, $r4)


	 in Method: byte[] b(int,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer11139, $r4)


Findings in Java Class: com.tencent.bugly.proguard.ad

	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer10753)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10754, $r5, $r8)


	 in Method: byte[] b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8421, $r5, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8421, $r5, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8416)


Findings in Java Class: com.avos.avoscloud.AVOSSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4830, r5, varReplacer4830)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4830, r5, varReplacer4830)


Findings in Java Class: com.loopj.android.http.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4793, r5, varReplacer4793)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4793, r5, varReplacer4793)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 54

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 29
	ConstraintError: 9
=====================================================================