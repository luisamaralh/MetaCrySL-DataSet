Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <mkisly.checkers.billing.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzai(java.lang.String)>
		SHA-256: cfe1821e51a982b8ee62bf40bf5e5d604e5024a0e9b0823b378ca3541e67b3b5
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)
		Method: <mkisly.utility.Encryption: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: a360b5211bf78865367bcc344e953aeccd99cafdecc0ce7f53c048e57134fb7b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3421)
		Method: <com.google.android.gms.internal.zzaf: java.security.MessageDigest zzbE()>
		SHA-256: b37411fbc52cf4f176b8558b49991c800e325f9c317ccc6fbea94ce83d7a316
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <mkisly.utility.Encryption: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 9d810ebc488d6d34556786abeae1ee34b49bd2f136a5086fac97f67236c8382
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <mkisly.utility.Encryption: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: a68237421236dbf085e7715265d9c17b05c1669c33de3056ddfeb9bb29148e74
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKeyFactory
		Statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1)
		Method: <mkisly.utility.Encryption: java.lang.String encrypt(java.lang.String,java.lang.String)>
		SHA-256: f5ec15884e920f268313d32e6a06c3f102eb94c6525b984af1a414ac8dd65845
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.zzo: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 1c0f489768ca14400ee7e90b9f6481010dea308921d254fd4fcfc39ad2682a
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.zzo: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 9786886ac2db0761c1d3e10a75b011a24d1f7cb01580ee49b66504310b00eae2
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1810)
		Method: <com.google.android.gms.internal.zzo: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 6485faf564779cd3d70b24441f2ddd75d4b002d535e7d4f5cc52d5841486cec4
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2020)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzai(java.lang.String)>
		SHA-256: c166b6d2c7254772db19d187420d229992b8cf49414870cb22c5c3ab12b71fc8
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)
		Method: <mkisly.utility.Encryption: java.lang.String encrypt(java.lang.String,java.lang.String)>
		SHA-256: 65248ad68e0da338be1d1770f5a3f22e68be37dc7191db524a9ce9dd765d07fd
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzfl: java.lang.String zzfb()>
		SHA-256: 52cebfb14bbbf7b204d5db18cd61ed704698d2324683caf2d188d8bcb4114742
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.google.android.gms.internal.zzo: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 196e703c69b82d759bde2f288a409abbe6c66f41818298a6ffe615234db719b4
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <mkisly.utility.Encryption: java.lang.String encrypt(java.lang.String,java.lang.String)>
		SHA-256: ba9bb308a71aec07457ed4d6c590aa1fcf1340a600509d26e22024f0687510d6
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <mkisly.utility.Encryption: java.lang.String encrypt(java.lang.String,java.lang.String)>
		SHA-256: 5b308e51c0d797983fd3b8b6a253264da34509029c611af283a4a365e4b22a82
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzai: byte[] zzn(java.lang.String)>
		SHA-256: ae2dbc6a1515c66ca78d645e195440a31fecd4a8875a7e06597ed061a54e6d99
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKeyFactory
		Statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1)
		Method: <mkisly.utility.Encryption: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 661e32cd295f4274a97a82d17d1e90e9036a95c02aa444ba91eb7099e83676e1
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1704)
		Method: <com.google.android.gms.internal.zzfl: java.lang.String zzfb()>
		SHA-256: fa852a2d4b2d17241c22e3957d05cf7419df41c5aafb6a6a0e9b17122cd1b791
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1807)
		Method: <com.google.android.gms.internal.zzo: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 41ba60c910da7230725a18dad836060752bf85810eecfd80bd94c08f5ca4c0a1
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer2636)
		Method: <mkisly.checkers.billing.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 25b16ccb1515f16b1b72fc07f46f8a08fa8c3249accbba60d7a54f5498cec8d6
		Secure: false
	Object:
		Variable: varReplacer1807
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1807)
		Method: <com.google.android.gms.internal.zzo: byte[] zzc(byte[],java.lang.String)>
		SHA-256: a1b7286b5fe11efc4c02b22f3f6c9bee8ddce115b9a0f0565d4ffd9068421b4b
		Secure: false

Findings in Java Class: mkisly.utility.Encryption

	 in Method: java.lang.String decrypt(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer705, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a360b5211bf78865367bcc344e953aeccd99cafdecc0ce7f53c048e57134fb7b)
			First parameter (with value "DES") should be any of {AES, DESede, RSA}
			at statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #661e32cd295f4274a97a82d17d1e90e9036a95c02aa444ba91eb7099e83676e1)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1)


	 in Method: java.lang.String encrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #65248ad68e0da338be1d1770f5a3f22e68be37dc7191db524a9ce9dd765d07fd)
			First parameter (with value "DES") should be any of {AES, DESede, RSA}
			at statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #f5ec15884e920f268313d32e6a06c3f102eb94c6525b984af1a414ac8dd65845)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1562, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)


Findings in Java Class: com.google.android.gms.internal.zzag

	 in Method: java.lang.String zzo(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b37411fbc52cf4f176b8558b49991c800e325f9c317ccc6fbea94ce83d7a316)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r5.<com.google.android.gms.internal.zzaf: byte[] zzn(java.lang.String)>($r1)


	 in Method: java.lang.String zzp(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b37411fbc52cf4f176b8558b49991c800e325f9c317ccc6fbea94ce83d7a316)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = virtualinvoke $r10.<com.google.android.gms.internal.zzaf: byte[] zzn(java.lang.String)>($r1)


Findings in Java Class: com.google.android.gms.internal.zzo

	 in Method: byte[] zzc(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1807)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1808, $r10, $r3)


Findings in Java Class: mkisly.checkers.billing.util.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 22

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 2
	RequiredPredicateError: 8
	ConstraintError: 4
=====================================================================