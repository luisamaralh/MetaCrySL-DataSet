Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5689)
		Method: <a.a.au: java.lang.String b(java.lang.String)>
		SHA-256: 63b76e38aaf0a3fe08a5b6525d27a02990007f895ab0cf89457da4d304b161df
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <a.a.ar: byte[] a(byte[],byte[])>
		SHA-256: 5a679f8719f58d1eaaa68f7cf11745c5bfd7936237332f3d59dab073baf855c2
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <a.a.ar: byte[] a(byte[],byte[])>
		SHA-256: e862db82b73e5f4124612e54d21215997c37b304f828cf00cd5042195e28c5a0
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <a.a.at: java.lang.String r(android.content.Context)>
		SHA-256: 2f98095ec57ba0e1e2bce6b795264b68a2fde470b3aa3e5c80a66dcca4d2dbe9
		Secure: true
	Object:
		Variable: varReplacer5084
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5084)
		Method: <a.a.ar: byte[] b(byte[],byte[])>
		SHA-256: 58c90d619a48a8b015303cceb6edf67ea87d45dd1dfca9fff769df5b9e8893c9
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3492)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 9f44e22202d9ccbc2ae9e0eab7589831faf94a77365ce64dd8b8ddf3434467d4
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <a.a.ar: byte[] b(byte[],byte[])>
		SHA-256: 1f87e1baa8c3ad9c70f127ae5ebdc4c2c194a85f916da08c13fbd7dbae613cad
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1089)
		Method: <com.b.a.a.f: void <init>(java.security.KeyStore)>
		SHA-256: 70a591815562a2733c6b24c31edbd6f12d1126f6577629fa0877df99547cff7c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6373)
		Method: <a.a.ab: void <init>(java.security.KeyStore)>
		SHA-256: b7d2db3730351ca8ef6bdf68f319c53903a510f9d1e4b08dda094bc2909dc898
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.a.ar: byte[] b(byte[])>
		SHA-256: 8d21673eb3a511a19d0f5c920104353e38c43b063fa9a1919be15121644ead81
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5083)
		Method: <a.a.ar: byte[] b(byte[],byte[])>
		SHA-256: 6dfd394f87481843ef83827d5e30549d482a948fc8826897b915badb079229a6
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5895)
		Method: <a.a.at: java.lang.String r(android.content.Context)>
		SHA-256: 52e5cd1e4cf50e888444693961221582320cf78c314466e4e6d74ccb290bec8c
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5081)
		Method: <a.a.ar: byte[] a(byte[],byte[])>
		SHA-256: 3374c0479e59243c5564490a30b0504286f7223a39f03f76fd348a6af48c96f7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5084)
		Method: <a.a.ar: byte[] b(byte[],byte[])>
		SHA-256: bbe26e4e34efafbd31b4e1e10cb01bad7e5d2099f919945f5ad891a13ddb142
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <a.a.ar: byte[] b(byte[],byte[])>
		SHA-256: 5d374aee80c16531657cf4355ccbf663195551bd886687c1569c2cafb322b247
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5175)
		Method: <a.a.au: java.lang.String a(java.lang.String)>
		SHA-256: 8c272ce309cef3b719768762e8df273046918ede89fd016cbe4bd5b116de449e
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.a.au: java.lang.String a(java.lang.String)>
		SHA-256: 37d10f394fa079e3c85726e00df64c85b5df232c45e582097209d6e7c7bf20cd
		Secure: true
	Object:
		Variable: r10
		Type: java.security.SecureRandom
		Statement: specialinvoke r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: c49baf8b2831a2be9aa3b8b2b456003f3087b1f5f20fd8411803ca8aa53c7285
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.d.b.a.f: java.lang.String b(java.lang.String)>
		SHA-256: 402b184e9e59555d389ca3f32bd9dba6a1f6d2cda790902ccde2b496ab4dfeb7
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <com.b.a.a.f: java.security.KeyStore a()>
		SHA-256: eaf8bb3c88421a6edf62ce1882d65151d8843abab103d996dad9883e23249e15
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <a.a.w: void a()>
		SHA-256: 151f8099740741e36599ed2c97f90f4e265b9344d358d05ac8628308b5868b7
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5385)
		Method: <a.a.ar: java.lang.String c(java.lang.String)>
		SHA-256: 42784a66ddf51ece7cf1b27c4d25461205dad8af855de8cecd7a0544286981bd
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.a.au: java.lang.String b(java.lang.String)>
		SHA-256: 7bd93dac09ade56894342f14d2b22cb2ed050080c4e0283d771e31e0e478e6dd
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3389)
		Method: <com.android.volley.f: java.lang.String a(java.lang.String)>
		SHA-256: ee79f10902889b1ed7872f57ccc8535ebe4c76962fca9a4456c3f3ea34924a6
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3118)
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: 7a27811b81c374db08f1f1ee64b576c39e524927a0c7ce12a51e637da47ed290
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6174)
		Method: <com.d.b.a.f: java.lang.String b(java.lang.String)>
		SHA-256: a181e98787a7398956c696317d2ad1472ca66e9778e7bdfe4c161fa0dd592289
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 7a74e8fbde4cb7f3c5f100dc4c6bc0d46ff7409fd74d931edb087eb017f74545
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.android.volley.f: java.lang.String a(java.lang.String)>
		SHA-256: 9c415df7a8795f09a7c84712adb6a9d47bdeab0ff98242a60bcc8fa99c39be8
		Secure: true
	Object:
		Variable: varReplacer5082
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5082)
		Method: <a.a.ar: byte[] a(byte[],byte[])>
		SHA-256: e7e1d4bfb1b4fd1d7d6438262564dc242ef02ae1a9a9e157c79735ab11dc38af
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5082)
		Method: <a.a.ar: byte[] a(byte[],byte[])>
		SHA-256: 8037bf68d861117c56a2297df9d0cb04b1e59984e294670f7fa9adb0a12e742e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5693)
		Method: <a.a.ar: byte[] b(byte[])>
		SHA-256: c9ca71310ddaed330c24c09f0f5e0424487197ffeab8ea252f9ec3d243a7d9a4
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.a.ar: java.lang.String c(java.lang.String)>
		SHA-256: 4374c83537e102c7d4408b437e35c84a127990d3a653ee15c9af555edf736850
		Secure: false

Findings in Java Class: com.facebook.ads.internal.util.g

	 in Method: void b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3119, r12, $r3)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7a27811b81c374db08f1f1ee64b576c39e524927a0c7ce12a51e637da47ed290)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3118)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3119, r12, $r3)


Findings in Java Class: a.a.ar

	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #42784a66ddf51ece7cf1b27c4d25461205dad8af855de8cecd7a0544286981bd)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5385)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5085, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5084)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5082)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5080, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5080, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: com.b.a.a.f

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1087, r5, varReplacer1087)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1087, r5, varReplacer1087)


Findings in Java Class: a.a.ab

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6374, r7, varReplacer6374)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6374, r7, varReplacer6374)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 32

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 13
=====================================================================