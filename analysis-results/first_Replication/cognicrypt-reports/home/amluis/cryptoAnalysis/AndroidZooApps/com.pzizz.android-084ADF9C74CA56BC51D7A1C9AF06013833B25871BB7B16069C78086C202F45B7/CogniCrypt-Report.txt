Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2086)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void persistPurchasedModules(android.content.SharedPreferences$Editor,byte[])>
		SHA-256: 8a5f6e996393e754e9ea48db2f844e765216ed6fe944ea376bfe37334ddbf211
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void persistPurchasedModules(android.content.SharedPreferences$Editor,byte[])>
		SHA-256: a69da9772a3fe20a5b8a3da2d965798565bf108a402900bc7d0bfacd6bdeddbf
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1930)
		Method: <cz.msebera.android.httpclient.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: 370fecb2da726b561322966d4d5d1c9f6b0b596dedabf5cbe1b41d3a65903140
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer2053)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void <init>(android.content.Context)>
		SHA-256: 9b4933e3bfec72574bce8e6119df030842e2470be7b00704291ee9fae9f3f745
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1134)
		Method: <com.mixpanel.android.mpmetrics.MPConfig: void <init>(android.os.Bundle,android.content.Context)>
		SHA-256: 34af88425cf05e5301c2529f5b7b0b688d7c580ccbe9ad479270e7ad77a3da21
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1943)
		Method: <com.loopj.android.http.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 777b176c09368104e40c1be904ac0fc92cd375bd3d24d13321582d9de5703ab1
		Secure: false
	Object:
		Variable: varReplacer2086
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2086)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void persistPurchasedModules(android.content.SharedPreferences$Editor,byte[])>
		SHA-256: e28553833e707097c5bb53f00efc18bfd0edc3c879ebe6142b35ae711dd23206
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void <init>(android.content.Context)>
		SHA-256: a34e20962c91ca958dc98705cf9ed3568965045deb9f4c84cb0863d5d67b5210
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2059)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void <init>(android.content.Context)>
		SHA-256: c147c85a656ab73ad1043794f2daa796814ca9cb56d90ba341e18c04bba33acc
		Secure: false
	Object:
		Variable: varReplacer2053
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer2053)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void <init>(android.content.Context)>
		SHA-256: 498baf3124a82100943d414c13dd4da9ae4ef0dc12bf17b9ba150b6371f244be
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2078)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: byte[] generateSecureKey()>
		SHA-256: e09b8bcb4b823df97e145613a9efb66d6e5784c0f2c620362fdf2aa0723b2ff5
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r0.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: byte[] generateSecureKey()>
		SHA-256: 39aadb73d0e9a32b92f425a1e4e292cb18454b7a893a2e3ad4134eca36da1976
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.loopj.android.http.MySSLSocketFactory: java.security.KeyStore getKeystore()>
		SHA-256: d011df71b400b4926b84dec0cad6ffb90a5bd3d26c43a5974bec9e614ef5edf5
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: byte[] generateSecureKey()>
		SHA-256: 378fa10e2a093566e279e3caa5291b78b286b80ed5f1ca63b77d687cf94072a1
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1249)
		Method: <com.mixpanel.android.util.ImageStore: void <init>(android.content.Context,java.lang.String,com.mixpanel.android.util.RemoteService)>
		SHA-256: 135b3c3d856e4eeb1c43c47eaa39eb3a5a53b90d9022a9c951ba646c309ad31d
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.KeyGenerator
		Statement: $r0 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2079)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: byte[] generateSecureKey()>
		SHA-256: c9ccb2a3f4070eaf4780d616e82b8ab87b551addc917b80c91107029fa252dcd
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2088)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void persistPurchasedModules(android.content.SharedPreferences$Editor,byte[])>
		SHA-256: ab9133ea1de7321e9d85659e859a5a2c531daeb00a4ca2b78649daf30ae67ab5
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r1)
		Method: <cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: 1f15fdcda9b923b07ad2fb0fff591155d212c798860f8dee84a8c357e9a78696
		Secure: false

Findings in Java Class: com.mixpanel.android.util.ImageStore

	 in Method: void <init>(android.content.Context,java.lang.String,com.mixpanel.android.util.RemoteService)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #135b3c3d856e4eeb1c43c47eaa39eb3a5a53b90d9022a9c951ba646c309ad31d)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1249)


Findings in Java Class: com.mixpanel.android.mpmetrics.MixpanelAPI

	 in Method: void <init>(android.content.Context,java.util.concurrent.Future,java.lang.String,com.mixpanel.android.mpmetrics.MPConfig)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #135b3c3d856e4eeb1c43c47eaa39eb3a5a53b90d9022a9c951ba646c309ad31d)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r7.<com.mixpanel.android.mpmetrics.MixpanelAPI$PeopleImpl: void <init>(com.mixpanel.android.mpmetrics.MixpanelAPI,com.mixpanel.android.mpmetrics.MixpanelAPI$1)>($r0, varReplacer1201)


Findings in Java Class: com.mixpanel.android.mpmetrics.AnalyticsMessages

	 in Method: void <init>(android.content.Context)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #135b3c3d856e4eeb1c43c47eaa39eb3a5a53b90d9022a9c951ba646c309ad31d)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker createWorker()>()


Findings in Java Class: com.pzizz.android.backend.SneakyModulePurchaseManager

	 in Method: void <init>(android.content.Context)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c147c85a656ab73ad1043794f2daa796814ca9cb56d90ba341e18c04bba33acc)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2059)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2057, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer2053)


	 in Method: void persistPurchasedModules(android.content.SharedPreferences$Editor,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ab9133ea1de7321e9d85659e859a5a2c531daeb00a4ca2b78649daf30ae67ab5)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2088)


Findings in Java Class: cz.msebera.android.httpclient.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1931, varReplacer1931, varReplacer1931)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1931, varReplacer1931, varReplacer1931)


Findings in Java Class: com.mixpanel.android.mpmetrics.MPConfig

	 in Method: void <init>(android.os.Bundle,android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1116, varReplacer1116, varReplacer1116)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1116, varReplacer1116, varReplacer1116)


Findings in Java Class: com.loopj.android.http.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1941, r5, varReplacer1941)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1941, r5, varReplacer1941)


Findings in Java Class: cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder

	 in Method: javax.net.ssl.SSLContext build()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r5, $r7, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r5, $r7, $r8)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 18

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 3
	IncompleteOperationError: 2
	RequiredPredicateError: 10
=====================================================================