final class com.easyx.baike.a.a.d$a extends org.apache.http.conn.ssl.SSLSocketFactory
{
    javax.net.ssl.SSLContext a;
    final com.easyx.baike.a.a.d b;

    public void <init>(com.easyx.baike.a.a.d, java.security.KeyStore)
    {
        com.easyx.baike.a.a.d$a $r0;
        com.easyx.baike.a.a.d $r1;
        java.security.KeyStore $r2;
        javax.net.ssl.SSLContext $r3;
        java.lang.Object[] $r4;
        com.easyx.baike.a.a.b r5;
        javax.net.ssl.TrustManager[] r6;
        java.lang.String varReplacer4621;
        null_type varReplacer4622, varReplacer4623, varReplacer4624;

        nop;

        $r0 := @this: com.easyx.baike.a.a.d$a;

        $r1 := @parameter0: com.easyx.baike.a.a.d;

        $r2 := @parameter1: java.security.KeyStore;

        $r0.<com.easyx.baike.a.a.d$a: com.easyx.baike.a.a.d b> = $r1;

        specialinvoke $r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>($r2);

        varReplacer4621 = "TLS";

        $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4621);

        $r0.<com.easyx.baike.a.a.d$a: javax.net.ssl.SSLContext a> = $r3;

        r5 = new com.easyx.baike.a.a.b;

        varReplacer4622 = null;

        specialinvoke r5.<com.easyx.baike.a.a.b: void <init>(java.security.KeyStore)>(varReplacer4622);

        $r3 = $r0.<com.easyx.baike.a.a.d$a: javax.net.ssl.SSLContext a>;

        $r4 = newarray (javax.net.ssl.TrustManager)[1];

        $r4[0] = r5;

        r6 = (javax.net.ssl.TrustManager[]) $r4;

        varReplacer4623 = null;

        varReplacer4624 = null;

        virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4623, r6, varReplacer4623);

        return;
    }

    public final java.net.Socket createSocket()
    {
        com.easyx.baike.a.a.d$a $r0;
        javax.net.ssl.SSLContext $r1;
        javax.net.ssl.SSLSocketFactory $r2;
        java.net.Socket $r3;

        $r0 := @this: com.easyx.baike.a.a.d$a;

        $r1 = $r0.<com.easyx.baike.a.a.d$a: javax.net.ssl.SSLContext a>;

        $r2 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>();

        return $r3;
    }

    public final java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean)
    {
        com.easyx.baike.a.a.d$a $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;
        javax.net.ssl.SSLContext $r3;
        javax.net.ssl.SSLSocketFactory $r4;

        $r0 := @this: com.easyx.baike.a.a.d$a;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r3 = $r0.<com.easyx.baike.a.a.d$a: javax.net.ssl.SSLContext a>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r1 = virtualinvoke $r4.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r1, $r2, $i0, $z0);

        return $r1;
    }
}
