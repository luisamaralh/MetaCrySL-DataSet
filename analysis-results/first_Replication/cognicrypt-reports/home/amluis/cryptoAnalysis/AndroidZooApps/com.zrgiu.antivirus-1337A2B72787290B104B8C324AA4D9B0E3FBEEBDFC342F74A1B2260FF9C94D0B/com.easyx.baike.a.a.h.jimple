public final class com.easyx.baike.a.a.h extends java.lang.Object implements com.easyx.baike.a.a.g
{
    private final javax.net.ssl.SSLSocketFactory a;

    public void <init>()
    {
        com.easyx.baike.a.a.h $r0;
        javax.net.ssl.SSLSocketFactory $r1;

        nop;

        $r0 := @this: com.easyx.baike.a.a.h;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.easyx.baike.a.a.h: javax.net.ssl.SSLSocketFactory a()>();

        $r0.<com.easyx.baike.a.a.h: javax.net.ssl.SSLSocketFactory a> = $r1;

        return;
    }

    private static com.easyx.baike.a.a.c a(java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection $r0;
        com.easyx.baike.a.a.c $r1;
        long $l0;
        java.io.InputStream $r2;
        int $i1;
        java.lang.String $r3;
        java.lang.Throwable $r4;

        $r0 := @parameter0: java.net.HttpURLConnection;

        $r1 = new com.easyx.baike.a.a.c;

        specialinvoke $r1.<com.easyx.baike.a.a.c: void <init>()>();

     label1:
        $r2 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label2:
        virtualinvoke $r1.<com.easyx.baike.a.a.c: void a(java.io.InputStream)>($r2);

        $i1 = virtualinvoke $r0.<java.net.HttpURLConnection: int getContentLength()>();

        $l0 = (long) $i1;

        virtualinvoke $r1.<com.easyx.baike.a.a.c: void a(long)>($l0);

        $r3 = virtualinvoke $r0.<java.net.HttpURLConnection: java.lang.String getContentEncoding()>();

        virtualinvoke $r1.<com.easyx.baike.a.a.c: void b(java.lang.String)>($r3);

        $r3 = virtualinvoke $r0.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        virtualinvoke $r1.<com.easyx.baike.a.a.c: void a(java.lang.String)>($r3);

        return $r1;

     label3:
        $r4 := @caughtexception;

        $r2 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        goto label2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static javax.net.ssl.SSLSocketFactory a()
    {
        com.easyx.baike.a.a.b $r0, r10;
        java.lang.String $r1, varReplacer4634, varReplacer4635, varReplacer4636;
        java.security.KeyStore $r2;
        javax.net.ssl.KeyManagerFactory $r3;
        javax.net.ssl.KeyManager[] $r4;
        javax.net.ssl.SSLContext $r5;
        java.lang.Object[] $r6;
        java.security.SecureRandom $r7, r11;
        javax.net.ssl.SSLSocketFactory $r8;
        java.lang.Exception $r9;
        com.easyx.baike.a.a.j r12;
        javax.net.ssl.TrustManager[] r13;
        null_type varReplacer4637, varReplacer4638, varReplacer4639, varReplacer4640, varReplacer4641;

     label1:
        nop;

        $r1 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1);

        varReplacer4640 = null;

        varReplacer4641 = null;

        virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer4640, varReplacer4640);

        varReplacer4634 = "X509";

        $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer4634);

        varReplacer4638 = null;

        virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r2, varReplacer4638);

        $r4 = virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>();

        varReplacer4635 = "SSL";

        $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4635);

        $r6 = newarray (javax.net.ssl.TrustManager)[1];

     label2:
        r10 = new com.easyx.baike.a.a.b;

        $r0 = r10;

     label3:
        varReplacer4637 = null;

        specialinvoke r10.<com.easyx.baike.a.a.b: void <init>(java.security.KeyStore)>(varReplacer4637);

        $r6[0] = $r0;

     label4:
        r11 = new java.security.SecureRandom;

        $r7 = r11;

     label5:
        specialinvoke r11.<java.security.SecureRandom: void <init>()>();

        r13 = (javax.net.ssl.TrustManager[]) $r6;

        virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, r13, $r7);

     label6:
        r12 = new com.easyx.baike.a.a.j;

     label7:
        $r8 = virtualinvoke $r5.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        specialinvoke r12.<com.easyx.baike.a.a.j: void <init>(javax.net.ssl.SSLSocketFactory)>($r8);

     label8:
        return r12;

     label9:
        $r9 := @caughtexception;

        varReplacer4636 = "http";

        staticinvoke <com.easyx.baike.common.b: int a(java.lang.String,java.lang.Throwable)>(varReplacer4636, $r9);

        varReplacer4639 = null;

        return varReplacer4639;

        catch java.lang.Exception from label1 to label2 with label9;
        catch java.lang.Exception from label3 to label4 with label9;
        catch java.lang.Exception from label5 to label6 with label9;
        catch java.lang.Exception from label7 to label8 with label9;
    }

    public final com.easyx.baike.a.a.m a(com.easyx.baike.a.a.k, java.util.Map)
    {
        com.easyx.baike.a.a.h $r0;
        com.easyx.baike.a.a.k $r1;
        java.util.Map $r2, $r5;
        java.lang.String $r3, $r9;
        java.util.HashMap $r4;
        java.net.URL $r6;
        java.net.URLConnection $r7;
        java.net.HttpURLConnection $r8;
        int $i0;
        boolean $z0;
        javax.net.ssl.HttpsURLConnection $r10;
        javax.net.ssl.SSLSocketFactory $r11;
        com.easyx.baike.a.a.i $r12;
        java.util.Set $r13;
        java.util.Iterator $r14;
        java.lang.Object $r15;
        java.lang.IllegalStateException $r16;
        java.io.IOException $r17;
        byte[] $r18;
        java.io.DataOutputStream $r19;
        java.io.OutputStream $r20;
        com.easyx.baike.a.a.m $r21;
        com.easyx.baike.a.a.c $r22;
        java.util.Map$Entry $r23;
        java.util.List $r24;

        $r0 := @this: com.easyx.baike.a.a.h;

        $r1 := @parameter0: com.easyx.baike.a.a.k;

        $r2 := @parameter1: java.util.Map;

        $r3 = virtualinvoke $r1.<com.easyx.baike.a.a.k: java.lang.String b()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        virtualinvoke $r4.<java.util.HashMap: void putAll(java.util.Map)>($r5);

        virtualinvoke $r4.<java.util.HashMap: void putAll(java.util.Map)>($r2);

        $r6 = new java.net.URL;

        specialinvoke $r6.<java.net.URL: void <init>(java.lang.String)>($r3);

        $r7 = virtualinvoke $r6.<java.net.URL: java.net.URLConnection openConnection()>();

        $r8 = (java.net.HttpURLConnection) $r7;

        $i0 = virtualinvoke $r1.<com.easyx.baike.a.a.k: int e()>();

        virtualinvoke $r8.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

        $i0 = virtualinvoke $r1.<com.easyx.baike.a.a.k: int f()>();

        virtualinvoke $r8.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

        virtualinvoke $r8.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);

        virtualinvoke $r8.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        $r3 = "https";

        $r9 = virtualinvoke $r6.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label01;

        $r10 = (javax.net.ssl.HttpsURLConnection) $r8;

        $r11 = $r0.<com.easyx.baike.a.a.h: javax.net.ssl.SSLSocketFactory a>;

        virtualinvoke $r10.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r11);

        $r10 = (javax.net.ssl.HttpsURLConnection) $r8;

        $r12 = new com.easyx.baike.a.a.i;

        specialinvoke $r12.<com.easyx.baike.a.a.i: void <init>(com.easyx.baike.a.a.h)>($r0);

        virtualinvoke $r10.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r12);

     label01:
        $r13 = virtualinvoke $r4.<java.util.HashMap: java.util.Set keySet()>();

        $r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r15;

        $r15 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r9 = (java.lang.String) $r15;

        virtualinvoke $r8.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r3, $r9);

        goto label02;

     label03:
        $i0 = virtualinvoke $r1.<com.easyx.baike.a.a.k: int a()>();

        lookupswitch($i0)
        {
            case 0: goto label05;
            case 1: goto label07;
            default: goto label04;
        };

     label04:
        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unknown method type.");

        throw $r16;

     label05:
        virtualinvoke $r8.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");

     label06:
        $i0 = virtualinvoke $r8.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i0 != -1 goto label08;

        $r17 = new java.io.IOException;

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>("Could not retrieve response code from HttpUrlConnection.");

        throw $r17;

     label07:
        virtualinvoke $r8.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        $r18 = virtualinvoke $r1.<com.easyx.baike.a.a.k: byte[] d()>();

        if $r18 == null goto label06;

        virtualinvoke $r8.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        $r3 = virtualinvoke $r1.<com.easyx.baike.a.a.k: java.lang.String c()>();

        virtualinvoke $r8.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3);

        $r19 = new java.io.DataOutputStream;

        $r20 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke $r19.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r20);

        virtualinvoke $r19.<java.io.DataOutputStream: void write(byte[])>($r18);

        virtualinvoke $r19.<java.io.DataOutputStream: void close()>();

        goto label06;

     label08:
        $r21 = new com.easyx.baike.a.a.m;

        specialinvoke $r21.<com.easyx.baike.a.a.m: void <init>()>();

        $i0 = virtualinvoke $r8.<java.net.HttpURLConnection: int getResponseCode()>();

        virtualinvoke $r21.<com.easyx.baike.a.a.m: void a(int)>($i0);

        $r3 = virtualinvoke $r8.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        virtualinvoke $r21.<com.easyx.baike.a.a.m: void a(java.lang.String)>($r3);

        $i0 = virtualinvoke $r8.<java.net.HttpURLConnection: int getResponseCode()>();

        if 100 > $i0 goto label09;

        if $i0 < 200 goto label13;

     label09:
        if $i0 == 204 goto label13;

        if $i0 == 304 goto label13;

        $z0 = 1;

     label10:
        if $z0 == 0 goto label11;

        $r22 = staticinvoke <com.easyx.baike.a.a.h: com.easyx.baike.a.a.c a(java.net.HttpURLConnection)>($r8);

        virtualinvoke $r21.<com.easyx.baike.a.a.m: void a(com.easyx.baike.a.a.c)>($r22);

     label11:
        $r2 = virtualinvoke $r8.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        $r13 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label12:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r23 = (java.util.Map$Entry) $r15;

        $r15 = interfaceinvoke $r23.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r15 == null goto label12;

        $r15 = interfaceinvoke $r23.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r15;

        $r15 = interfaceinvoke $r23.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r24 = (java.util.List) $r15;

        $r15 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (java.lang.String) $r15;

        virtualinvoke $r21.<com.easyx.baike.a.a.m: void a(java.lang.String,java.lang.String)>($r3, $r9);

        goto label12;

     label13:
        $z0 = 0;

        goto label10;

     label14:
        return $r21;
    }
}
