public class org.a.a.b extends java.lang.Object
{
    private static final java.security.SecureRandom a;
    private int a;

    static void <clinit>()
    {
        java.security.SecureRandom $r0;

        nop;

        $r0 = new java.security.SecureRandom;

        specialinvoke $r0.<java.security.SecureRandom: void <init>()>();

        <org.a.a.b: java.security.SecureRandom a> = $r0;

        return;
    }

    public void <init>()
    {
        org.a.a.b $r0;
        int varReplacer2457;

        nop;

        $r0 := @this: org.a.a.b;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer2457 = 10000;

        $r0.<org.a.a.b: int a> = varReplacer2457;

        return;
    }

    private static int a(byte[])
    {
        byte[] $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        java.lang.String varReplacer2400;

        nop;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        if $i0 <= 0 goto label2;

        $z0 = 1;

     label1:
        $r1 = newarray (java.lang.Object)[0];

        varReplacer2400 = "Data must be at least one byte long to read version number.";

        staticinvoke <org.a.a.h: void a(boolean,java.lang.String,java.lang.Object[])>($z0, varReplacer2400, $r1);

        $b1 = $r0[0];

        return $b1;

     label2:
        $z0 = 0;

        goto label1;
    }

    static boolean a(byte[], byte[])
    {
        byte[] $r0, $r1;
        byte $b0, $b3;
        int $i1, $i2, varReplacer2436;
        boolean $z0;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $i1 = lengthof $r0;

        $i2 = lengthof $r1;

        if $i1 == $i2 goto label1;

        varReplacer2436 = 0;

        return varReplacer2436;

     label1:
        $z0 = 1;

        $i1 = 0;

     label2:
        $i2 = lengthof $r0;

        if $i1 >= $i2 goto label4;

        $b3 = $r0[$i1];

        $b0 = $r1[$i1];

        if $b3 == $b0 goto label3;

        $z0 = 0;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return $z0;
    }

    private byte[] a(org.a.a.c, javax.crypto.SecretKey, javax.crypto.SecretKey)
    {
        org.a.a.b $r0;
        org.a.a.c $r1;
        javax.crypto.SecretKey $r2, $r3;
        javax.crypto.Mac $r4;
        byte[] $r5, $r6;
        boolean $z0;
        org.a.a.g $r7;
        java.lang.Throwable $r8, $r12;
        org.a.a.e $r9;
        javax.crypto.Cipher $r10;
        javax.crypto.spec.IvParameterSpec $r11;
        java.lang.String varReplacer2451, varReplacer2452, varReplacer2453, varReplacer2454, varReplacer2456;
        int varReplacer2455;

        nop;

        $r0 := @this: org.a.a.b;

        $r1 := @parameter0: org.a.a.c;

        $r2 := @parameter1: javax.crypto.SecretKey;

        $r3 := @parameter2: javax.crypto.SecretKey;

     label01:
        varReplacer2451 = "HmacSHA256";

        $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer2451);

        virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r3);

        $r5 = virtualinvoke $r1.<org.a.a.c: byte[] b()>();

        $r5 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5);

        $r6 = virtualinvoke $r1.<org.a.a.c: byte[] g()>();

        $z0 = staticinvoke <org.a.a.b: boolean a(byte[],byte[])>($r5, $r6);

     label02:
        if $z0 != 0 goto label06;

        $r7 = new org.a.a.g;

     label03:
        varReplacer2452 = "Incorrect HMAC value.";

        specialinvoke $r7.<org.a.a.g: void <init>(java.lang.String)>(varReplacer2452);

     label04:
        throw $r7;

     label05:
        $r8 := @caughtexception;

        $r9 = new org.a.a.e;

        varReplacer2454 = "Caught InvalidKeyException. Do you have unlimited strength jurisdiction files installed?";

        specialinvoke $r9.<org.a.a.e: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer2454, $r8);

        throw $r9;

     label06:
        varReplacer2456 = "AES/CBC/PKCS5Padding";

        $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2456);

     label07:
        $r11 = new javax.crypto.spec.IvParameterSpec;

     label08:
        $r5 = virtualinvoke $r1.<org.a.a.c: byte[] e()>();

        specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5);

        varReplacer2455 = 2;

        virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2455, $r2, $r11);

        $r5 = virtualinvoke $r1.<org.a.a.c: byte[] f()>();

        $r5 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

     label09:
        return $r5;

     label10:
        $r12 := @caughtexception;

        $r9 = new org.a.a.e;

        varReplacer2453 = "Failed to decrypt message.";

        specialinvoke $r9.<org.a.a.e: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer2453, $r12);

        throw $r9;

        catch java.security.InvalidKeyException from label01 to label02 with label05;
        catch java.security.InvalidKeyException from label03 to label04 with label05;
        catch java.security.GeneralSecurityException from label01 to label02 with label10;
        catch java.security.GeneralSecurityException from label03 to label04 with label10;
        catch java.security.InvalidKeyException from label06 to label07 with label05;
        catch java.security.InvalidKeyException from label08 to label09 with label05;
        catch java.security.GeneralSecurityException from label06 to label07 with label10;
        catch java.security.GeneralSecurityException from label08 to label09 with label10;
    }

    private byte[] a(org.a.a.d, javax.crypto.SecretKey, javax.crypto.SecretKey)
    {
        org.a.a.b $r0;
        org.a.a.d $r1;
        javax.crypto.SecretKey $r2, $r3;
        javax.crypto.Mac $r4;
        byte[] $r5, $r6;
        boolean $z0;
        org.a.a.g $r7;
        java.lang.Throwable $r8, $r12;
        org.a.a.e $r9;
        javax.crypto.Cipher $r10;
        javax.crypto.spec.IvParameterSpec $r11;
        java.lang.String varReplacer2430, varReplacer2431, varReplacer2432, varReplacer2433, varReplacer2434;
        int varReplacer2435;

        nop;

        $r0 := @this: org.a.a.b;

        $r1 := @parameter0: org.a.a.d;

        $r2 := @parameter1: javax.crypto.SecretKey;

        $r3 := @parameter2: javax.crypto.SecretKey;

     label01:
        varReplacer2434 = "HmacSHA256";

        $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer2434);

        virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r3);

        $r5 = virtualinvoke $r1.<org.a.a.d: byte[] b()>();

        $r5 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5);

        $r6 = virtualinvoke $r1.<org.a.a.d: byte[] g()>();

        $z0 = staticinvoke <org.a.a.b: boolean a(byte[],byte[])>($r5, $r6);

     label02:
        if $z0 != 0 goto label06;

        $r7 = new org.a.a.g;

     label03:
        varReplacer2431 = "Incorrect HMAC value.";

        specialinvoke $r7.<org.a.a.g: void <init>(java.lang.String)>(varReplacer2431);

     label04:
        throw $r7;

     label05:
        $r8 := @caughtexception;

        $r9 = new org.a.a.e;

        varReplacer2430 = "Caught InvalidKeyException. Do you have unlimited strength jurisdiction files installed?";

        specialinvoke $r9.<org.a.a.e: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer2430, $r8);

        throw $r9;

     label06:
        varReplacer2432 = "AES/CBC/PKCS5Padding";

        $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2432);

     label07:
        $r11 = new javax.crypto.spec.IvParameterSpec;

     label08:
        $r5 = virtualinvoke $r1.<org.a.a.d: byte[] e()>();

        specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5);

        varReplacer2435 = 2;

        virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2435, $r2, $r11);

        $r5 = virtualinvoke $r1.<org.a.a.d: byte[] f()>();

        $r5 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

     label09:
        return $r5;

     label10:
        $r12 := @caughtexception;

        $r9 = new org.a.a.e;

        varReplacer2433 = "Failed to decrypt message.";

        specialinvoke $r9.<org.a.a.e: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer2433, $r12);

        throw $r9;

        catch java.security.InvalidKeyException from label01 to label02 with label05;
        catch java.security.InvalidKeyException from label03 to label04 with label05;
        catch java.security.GeneralSecurityException from label01 to label02 with label10;
        catch java.security.GeneralSecurityException from label03 to label04 with label10;
        catch java.security.InvalidKeyException from label06 to label07 with label05;
        catch java.security.InvalidKeyException from label08 to label09 with label05;
        catch java.security.GeneralSecurityException from label06 to label07 with label10;
        catch java.security.GeneralSecurityException from label08 to label09 with label10;
    }

    private byte[] b(byte[], char[])
    {
        org.a.a.b $r0;
        byte[] $r1;
        char[] $r2;
        org.a.a.c $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        org.a.a.f $r5;
        org.a.a.e $r6;
        javax.crypto.SecretKey $r7, $r8;
        java.lang.String varReplacer2402, varReplacer2403;

        nop;

        $r0 := @this: org.a.a.b;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: char[];

        $r3 = new org.a.a.c;

     label1:
        specialinvoke $r3.<org.a.a.c: void <init>(byte[])>($r1);

        $z0 = virtualinvoke $r3.<org.a.a.c: boolean a()>();

     label2:
        if $z0 != 0 goto label6;

        $r4 = new java.lang.IllegalArgumentException;

     label3:
        varReplacer2402 = "Ciphertext was not encrypted with a password.";

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer2402);

     label4:
        throw $r4;

     label5:
        $r5 := @caughtexception;

        $r6 = new org.a.a.e;

        varReplacer2403 = "Unable to parse ciphertext.";

        specialinvoke $r6.<org.a.a.e: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer2403, $r5);

        throw $r6;

     label6:
        $r1 = virtualinvoke $r3.<org.a.a.c: byte[] c()>();

        $r7 = virtualinvoke $r0.<org.a.a.b: javax.crypto.SecretKey a(char[],byte[])>($r2, $r1);

        $r1 = virtualinvoke $r3.<org.a.a.c: byte[] d()>();

        $r8 = virtualinvoke $r0.<org.a.a.b: javax.crypto.SecretKey a(char[],byte[])>($r2, $r1);

        $r1 = specialinvoke $r0.<org.a.a.b: byte[] a(org.a.a.c,javax.crypto.SecretKey,javax.crypto.SecretKey)>($r3, $r7, $r8);

     label7:
        return $r1;

        catch org.a.a.f from label1 to label2 with label5;
        catch org.a.a.f from label3 to label4 with label5;
        catch org.a.a.f from label6 to label7 with label5;
    }

    private byte[] c(byte[], char[])
    {
        org.a.a.b $r0;
        byte[] $r1;
        char[] $r2;
        org.a.a.d $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        org.a.a.f $r5;
        org.a.a.e $r6;
        javax.crypto.SecretKey $r7, $r8;
        java.lang.String varReplacer2404, varReplacer2405;

        nop;

        $r0 := @this: org.a.a.b;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: char[];

        $r3 = new org.a.a.d;

     label1:
        specialinvoke $r3.<org.a.a.d: void <init>(byte[])>($r1);

        $z0 = virtualinvoke $r3.<org.a.a.d: boolean a()>();

     label2:
        if $z0 != 0 goto label6;

        $r4 = new java.lang.IllegalArgumentException;

     label3:
        varReplacer2405 = "Ciphertext was not encrypted with a password.";

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer2405);

     label4:
        throw $r4;

     label5:
        $r5 := @caughtexception;

        $r6 = new org.a.a.e;

        varReplacer2404 = "Unable to parse ciphertext.";

        specialinvoke $r6.<org.a.a.e: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer2404, $r5);

        throw $r6;

     label6:
        $r1 = virtualinvoke $r3.<org.a.a.d: byte[] c()>();

        $r7 = virtualinvoke $r0.<org.a.a.b: javax.crypto.SecretKey a(char[],byte[])>($r2, $r1);

        $r1 = virtualinvoke $r3.<org.a.a.d: byte[] d()>();

        $r8 = virtualinvoke $r0.<org.a.a.b: javax.crypto.SecretKey a(char[],byte[])>($r2, $r1);

        $r1 = specialinvoke $r0.<org.a.a.b: byte[] a(org.a.a.d,javax.crypto.SecretKey,javax.crypto.SecretKey)>($r3, $r7, $r8);

     label7:
        return $r1;

        catch org.a.a.f from label1 to label2 with label5;
        catch org.a.a.f from label3 to label4 with label5;
        catch org.a.a.f from label6 to label7 with label5;
    }

    public int a()
    {
        org.a.a.b $r0;
        java.lang.Throwable $r1;
        int i0;

        nop;

        $r0 := @this: org.a.a.b;

        entermonitor $r0;

     label1:
        i0 = $r0.<org.a.a.b: int a>;

     label2:
        exitmonitor $r0;

        return i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public javax.crypto.SecretKey a(char[], byte[])
    {
        org.a.a.b $r0;
        char[] $r1;
        byte[] $r2;
        java.lang.Object[] $r3;
        int $i0, varReplacer2424, varReplacer2425;
        boolean $z0;
        java.lang.Integer $r4;
        javax.crypto.SecretKeyFactory $r5;
        javax.crypto.spec.PBEKeySpec $r6;
        javax.crypto.SecretKey $r7;
        javax.crypto.spec.SecretKeySpec $r8;
        java.lang.Throwable $r9;
        org.a.a.e $r10;
        java.lang.String $r11, varReplacer2421, varReplacer2422, varReplacer2423, varReplacer2426, varReplacer2427, varReplacer2428, varReplacer2429;

        nop;

        $r0 := @this: org.a.a.b;

        $r1 := @parameter0: char[];

        $r2 := @parameter1: byte[];

        $r3 = newarray (java.lang.Object)[0];

        varReplacer2422 = "Salt value cannot be null.";

        staticinvoke <org.a.a.h: void a(java.lang.Object,java.lang.String,java.lang.Object[])>($r2, varReplacer2422, $r3);

        $i0 = lengthof $r2;

        if $i0 != 8 goto label09;

        $z0 = 1;

     label01:
        $r3 = newarray (java.lang.Object)[1];

        varReplacer2425 = 8;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(varReplacer2425);

        $r3[0] = $r4;

        varReplacer2428 = "Salt value must be %d bytes.";

        staticinvoke <org.a.a.h: void a(boolean,java.lang.String,java.lang.Object[])>($z0, varReplacer2428, $r3);

        $r3 = newarray (java.lang.Object)[0];

        varReplacer2423 = "Password cannot be null.";

        staticinvoke <org.a.a.h: void a(java.lang.Object,java.lang.String,java.lang.Object[])>($r1, varReplacer2423, $r3);

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label10;

        $z0 = 1;

     label02:
        $r3 = newarray (java.lang.Object)[0];

        varReplacer2421 = "Password cannot be empty.";

        staticinvoke <org.a.a.h: void a(boolean,java.lang.String,java.lang.Object[])>($z0, varReplacer2421, $r3);

     label03:
        varReplacer2427 = "PBKDF2WithHmacSHA1";

        $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2427);

     label04:
        $r6 = new javax.crypto.spec.PBEKeySpec;

     label05:
        $i0 = virtualinvoke $r0.<org.a.a.b: int a()>();

        varReplacer2424 = 256;

        specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, $i0, varReplacer2424);

        $r7 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6);

     label06:
        $r8 = new javax.crypto.spec.SecretKeySpec;

     label07:
        $r2 = interfaceinvoke $r7.<javax.crypto.SecretKey: byte[] getEncoded()>();

        varReplacer2429 = "AES";

        specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2429);

     label08:
        return $r8;

     label09:
        $z0 = 0;

        goto label01;

     label10:
        $z0 = 0;

        goto label02;

     label11:
        $r9 := @caughtexception;

        $r10 = new org.a.a.e;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = "PBKDF2WithHmacSHA1";

        varReplacer2426 = "Failed to generate key from password using %s.";

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer2426, $r3);

        specialinvoke $r10.<org.a.a.e: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r9);

        throw $r10;

        catch java.security.GeneralSecurityException from label03 to label04 with label11;
        catch java.security.GeneralSecurityException from label05 to label06 with label11;
        catch java.security.GeneralSecurityException from label07 to label08 with label11;
    }

    public byte[] a(byte[], char[])
    {
        org.a.a.b $r0;
        byte[] $r1;
        char[] $r2;
        java.lang.Object[] $r3;
        int $i0;
        boolean $z0;
        org.a.a.e $r4;
        java.lang.Integer $r5;
        java.lang.String $r6, varReplacer2396, varReplacer2397, varReplacer2398, varReplacer2399;

        nop;

        $r0 := @this: org.a.a.b;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: char[];

        $r3 = newarray (java.lang.Object)[0];

        varReplacer2397 = "Ciphertext cannot be null.";

        staticinvoke <org.a.a.h: void a(java.lang.Object,java.lang.String,java.lang.Object[])>($r1, varReplacer2397, $r3);

        $r3 = newarray (java.lang.Object)[0];

        varReplacer2398 = "Password cannot be null.";

        staticinvoke <org.a.a.h: void a(java.lang.Object,java.lang.String,java.lang.Object[])>($r2, varReplacer2398, $r3);

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label3;

        $z0 = 1;

     label1:
        $r3 = newarray (java.lang.Object)[0];

        varReplacer2399 = "Password cannot be empty.";

        staticinvoke <org.a.a.h: void a(boolean,java.lang.String,java.lang.Object[])>($z0, varReplacer2399, $r3);

        $i0 = staticinvoke <org.a.a.b: int a(byte[])>($r1);

        lookupswitch($i0)
        {
            case 2: goto label4;
            case 3: goto label5;
            default: goto label2;
        };

     label2:
        $r4 = new org.a.a.e;

        $r3 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[0] = $r5;

        varReplacer2396 = "Unrecognised version number: %d.";

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer2396, $r3);

        specialinvoke $r4.<org.a.a.e: void <init>(java.lang.String)>($r6);

        throw $r4;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        $r1 = specialinvoke $r0.<org.a.a.b: byte[] b(byte[],char[])>($r1, $r2);

        return $r1;

     label5:
        $r1 = specialinvoke $r0.<org.a.a.b: byte[] c(byte[],char[])>($r1, $r2);

        return $r1;
    }
}
