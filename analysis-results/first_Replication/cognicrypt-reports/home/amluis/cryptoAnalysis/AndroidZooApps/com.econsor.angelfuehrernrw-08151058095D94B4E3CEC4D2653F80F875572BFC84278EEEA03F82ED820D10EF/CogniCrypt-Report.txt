Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)
		Method: <org.a.a.b: byte[] a(org.a.a.c,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: c6d12afe6a832aca049b3156d072862d1a8afef9fb4ec0513b1682ea6d7aa174
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)
		Method: <org.a.a.b: byte[] a(org.a.a.d,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: c6d12afe6a832aca049b3156d072862d1a8afef9fb4ec0513b1682ea6d7aa174
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer2370)
		Method: <com.c.a: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: cf845706ce4daa48e149dad8ccb41de100e9e1eae93ad73e4db68957aa431ca
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <org.a.a.b: byte[] a(org.a.a.c,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: b387260638dfd0cbd4489856ff2a3efda6953e639921e54be59471c00fce5c4d
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.c.a: java.lang.String b()>
		SHA-256: d70bbec740c21fcf3a4782571db424a1867ce6766b07594df8a77d108df5fc08
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2432)
		Method: <org.a.a.b: byte[] a(org.a.a.d,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: 2ef9eeda65f21ca3bf6dd10243f36fab4f87420a5b0eb1cf466c2404435e63a2
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a: java.lang.String c(java.lang.String)>
		SHA-256: 84e403208652919c726caa459befe85a7fce642141ed9ae966eb005ade67223e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2301, varReplacer2302)
		Method: <com.c.a: java.lang.String c(java.lang.String)>
		SHA-256: 9b6bc5544b63d83f1d0513a4a811a4fd6b90c5e1a544d59e25f5ac77c45924ab
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2429)
		Method: <org.a.a.b: javax.crypto.SecretKey a(char[],byte[])>
		SHA-256: d6f19754cdf024f0736ec83f51c40e25f0ec9edadb5eb462519663a3683272b7
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer2434)
		Method: <org.a.a.b: byte[] a(org.a.a.d,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: 68dde1dc9a484f19d737c8d7578c4fb93dcb898b137dfa50b3012dbb2e65e64a
		Secure: true
	Object:
		Variable: varReplacer2305
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2305)
		Method: <com.c.a: java.lang.String c(java.lang.String)>
		SHA-256: ebbe28266c96af0b14a59ac804b532b4623ec45be7104103c51512f496f23032
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2361)
		Method: <com.c.a: java.lang.String b()>
		SHA-256: 1ab8a791e59300c85ae5c04c227194c47d1ce7ca09f2adde28b27c0178ad4a03
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)
		Method: <org.a.a.b: javax.crypto.SecretKey a(char[],byte[])>
		SHA-256: 97a3c8e52d5d993a10361e3bca3694db11475905a77d4cf15ec35998b7b22eb1
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer431)
		Method: <com.b.a.a.j: void <init>(java.security.KeyStore)>
		SHA-256: 1ba78635643e4282b519d1295882d93a229815253d73f4695254209f25d8d37a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <com.b.a.a.j: java.security.KeyStore a()>
		SHA-256: 804b090e8f05047aeaddc785134b86ab23233956db37a2272dbdd85a718d625d
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.c.a: java.lang.String b()>
		SHA-256: d2c74e1463981ec1c65c9d3bb8e5456a4059191281149395cee667b1afe63a43
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2456)
		Method: <org.a.a.b: byte[] a(org.a.a.c,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: 5ad4cb29439a59e907df37b8dc941e5804186a8c5a7048d53db632ca0cb3e6be
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer2369)
		Method: <com.c.a: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: b7db30bbeec4a68814c83eb8a49a23481e278492be5ae376bf05a4c15865139e
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, $i0, varReplacer2424)
		Method: <org.a.a.b: javax.crypto.SecretKey a(char[],byte[])>
		SHA-256: d0e32e8657f15a39127d231134e61a974aee3181d8e677c48f67e83c44715901
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2295, varReplacer2296)
		Method: <com.c.a: java.lang.String d(java.lang.String)>
		SHA-256: 6449e7f23714ea6174379ed95ef9264ed6eab2022c2df357ee894341dfd2acf3
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2427)
		Method: <org.a.a.b: javax.crypto.SecretKey a(char[],byte[])>
		SHA-256: 653c160e8873f66f92432fa436c656d70db0ff58ef24ab58df29b4cf32cf3300
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <org.a.a.b: byte[] a(org.a.a.d,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: dde89c5c91a90f42d34096e217463722ace95967856c7ecf2a34fb253d9fe2fb
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.c.a: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: dc35c37b7d181c0c57d9d96791bcc47344a17b48cb161d0b8ced97bdf5e85dcc
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a: java.lang.String d(java.lang.String)>
		SHA-256: f221b64c971b08ca8733dca9b3d988fe997bee0e29ec5d42148b4c5333c7a0c5
		Secure: false
	Object:
		Variable: varReplacer2424
		Type: int
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, $i0, varReplacer2424)
		Method: <org.a.a.b: javax.crypto.SecretKey a(char[],byte[])>
		SHA-256: 991f734b5b417f412657ff4139fedbac4c54223bce73436c7f14c4b20bbd9d01
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <org.a.a.b: byte[] a(org.a.a.c,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: dde89c5c91a90f42d34096e217463722ace95967856c7ecf2a34fb253d9fe2fb
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer2451)
		Method: <org.a.a.b: byte[] a(org.a.a.c,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: 1ff83432080c99c960d990b128bca11541efe77c37f1d4e940fab7e89fad4574
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2298)
		Method: <com.c.a: java.lang.String d(java.lang.String)>
		SHA-256: a98b5d7a21ebf0c74c02cf309bfa58c15359cb0594dd17ae1d044015a739e0f2
		Secure: false
	Object:
		Variable: varReplacer2429
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2429)
		Method: <org.a.a.b: javax.crypto.SecretKey a(char[],byte[])>
		SHA-256: f3f683d545e613b0de31ad324db7bd3cf81b603863c1d0c46ee87984bfb37a
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <org.a.a.b: byte[] a(org.a.a.d,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: b387260638dfd0cbd4489856ff2a3efda6953e639921e54be59471c00fce5c4d
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.a.a.b: void <clinit>()>
		SHA-256: 3d425707cdb6650dff821a6f07e1b4c3cc3c8d38b9bf8d5c7e5e68d2549a99b4
		Secure: true
	Object:
		Variable: varReplacer2370
		Type: int
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer2370)
		Method: <com.c.a: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: 8b8c56d9ff33e34b96e50c0128834c0f520086ff724108ddab24fd413ea16c28
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.c.a: java.lang.String b()>
		SHA-256: cbee8d522b1c00e6b5ddcc2bec823cbd540127e9fbb6c3eb7a81ae474f494680
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2305)
		Method: <com.c.a: java.lang.String c(java.lang.String)>
		SHA-256: 8be3e9f1e590c2156bf3d48fd7a85af057a24af148fcb66886a3bf1a1b48148d
		Secure: false
	Object:
		Variable: varReplacer2298
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2298)
		Method: <com.c.a: java.lang.String d(java.lang.String)>
		SHA-256: 950423160cf65168d13b02949b33c940db2aeab4e72f7d5cfe8da8a509ba3b03
		Secure: false

Findings in Java Class: com.c.a

	 in Method: java.lang.String d(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6449e7f23714ea6174379ed95ef9264ed6eab2022c2df357ee894341dfd2acf3)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2295, varReplacer2296)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2298)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2293, $r3)


	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9b6bc5544b63d83f1d0513a4a811a4fd6b90c5e1a544d59e25f5ac77c45924ab)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2301, varReplacer2302)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2305)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2306, $r3)


	 in Method: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #b7db30bbeec4a68814c83eb8a49a23481e278492be5ae376bf05a4c15865139e)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer2369)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer2370)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #cf845706ce4daa48e149dad8ccb41de100e9e1eae93ad73e4db68957aa431ca)
			Third parameter (with value 2000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer2370)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #cf845706ce4daa48e149dad8ccb41de100e9e1eae93ad73e4db68957aa431ca)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)


Findings in Java Class: org.a.a.b

	 in Method: javax.crypto.SecretKey a(char[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #653c160e8873f66f92432fa436c656d70db0ff58ef24ab58df29b4cf32cf3300)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2427)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #d0e32e8657f15a39127d231134e61a974aee3181d8e677c48f67e83c44715901)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r7 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, $i0, varReplacer2424)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2429)


	 in Method: byte[] a(org.a.a.c,javax.crypto.SecretKey,javax.crypto.SecretKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2455, $r2, $r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


	 in Method: byte[] a(org.a.a.d,javax.crypto.SecretKey,javax.crypto.SecretKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2435, $r2, $r11)


Findings in Java Class: com.b.a.a.j

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer432, r5, varReplacer432)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer432, r5, varReplacer432)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 35

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 5
	IncompleteOperationError: 2
	RequiredPredicateError: 15
=====================================================================