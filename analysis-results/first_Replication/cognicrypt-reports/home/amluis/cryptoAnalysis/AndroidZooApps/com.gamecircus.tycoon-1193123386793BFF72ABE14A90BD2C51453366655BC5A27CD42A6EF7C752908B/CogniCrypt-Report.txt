Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.unity3d.player.UnityPlayer: java.lang.String a(java.lang.String)>
		SHA-256: 5a54f705314d6605f4cf61ba388d3b495336c885c3ea98cfb7cec081c65981da
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9188)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] a(byte[],java.lang.String,java.lang.String)>
		SHA-256: 7ae36647657ce823eb289a79b6644f5718e1c955ebdf98c7ae6d708ae4cad7bb
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer7519)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzud()>
		SHA-256: 7933ae2fe113e756c158c96ce640ce8c5c982f4f97e5308c3f1a2f72f42f2130
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6275)
		Method: <com.facebook.unity.FB: java.lang.String getKeyHash()>
		SHA-256: 6ccb46ae9976302633323ba88f57031cdbf1b70a2fa65b4f1bebe7ce4b8b9e9
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] a(int)>
		SHA-256: 184a8fa54bdb1d52d47089a3d9471edfcfcd8ac1272178eb37a06490aea5dc57
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: b1475ecb277cf44c18e504f1be84657ccb3a6b602605d56eb56e04862a5c2552
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 934140de6ac2c8214813e8f746fac3ad714c781b58d8938ba7642ef0e21fa554
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] a(byte[],byte[],byte[])>
		SHA-256: d6f04e50bcb87e9ec27ce6a8aeb06a7d82b2088c9756d693e69353ea39dcf9db
		Secure: false
	Object:
		Variable: varReplacer6197
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer6197)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 4709b71d734a4224aaa3b818a5b27aba852ee4e68469d5e2697ce81c63bcf6a2
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] a(int)>
		SHA-256: d1ef2aeb9047bd4793ce799c9ec8ca25c778642cc7b4b3862e2fd7dc5087feb9
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r4)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] a(byte[],byte[],byte[])>
		SHA-256: a800d14c2599b6d3e27b78559da994ad6e61b6f409a78782cbf7fe99629d0369
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] a()>
		SHA-256: d1ef2aeb9047bd4793ce799c9ec8ca25c778642cc7b4b3862e2fd7dc5087feb9
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6202)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 54a14862fa127a10f88ca17c877991bd70ba8bad408d047c47cf69bce36358d1
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKeyFactory
		Statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer6201)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: e82fc58cd4da641b9b0086a2efbb215f65dd979fb5c6f93914fb1ffa5eb58a5b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer9198)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] a(byte[],byte[])>
		SHA-256: 45d233a52a5f084f606bcf0afff7887d489a0d5b5b6ee060583a3e9821e30a29
		Secure: true
	Object:
		Variable: varReplacer6195
		Type: int
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer6194, varReplacer6195)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 1a9336c8fa24fb72f46b2f852ed831cdf47235cb811dca2ae404596d5d4f9c34
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] a(byte[],byte[])>
		SHA-256: 6fcae7cde0942f3a1b982aee944083c2191e42699a3b29da6bafad64a43de157
		Secure: true
	Object:
		Variable: r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer9196, $i0, varReplacer9197)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] a(byte[],byte[])>
		SHA-256: c8b9e0966340bf6ea0030a70d646dfcf585fe7825874e13d8810067256f58c2f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer9208, varReplacer9209)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] a()>
		SHA-256: 6d099c8e9f9659620d4064ba7d3016db12a9ac5d059508ce9867e9f5ac1afc2f
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7455)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 97e25ace009d4da5550b8b63d4e3df5760ee8110ca7802959016ba1be1653e1e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3574)
		Method: <com.unity3d.player.UnityPlayer: java.lang.String a(java.lang.String)>
		SHA-256: fe5b659e0325b82ee75994050ea0dd3df0434bcf83662240e7c7b5ab50fcd50a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7209)
		Method: <com.immersion.hapticmediasdk.utils.FileManager: java.lang.String getUniqueFileName(java.lang.String)>
		SHA-256: a873ba16ceb41cc504766341f405d5a0565735d7d54bc339b5f0b83f04504675
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer778)
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: 6a981cbf80304e79610c6ce87d55d3614b30efbfa9690e19662145fff21988b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer458)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 45283eda3ecc22d360a1cf65c1f1d332e18b6aeb774ccf2688a4cee842842b8d
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] a(byte[],byte[],byte[])>
		SHA-256: 277511ffd1447440e8f80d7da65f7f88e6c5ba86288c4de9f58506200c321644
		Secure: false
	Object:
		Variable: r14
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] b(byte[],byte[],byte[])>
		SHA-256: af5edd579046d99df10bc0496757c1a3f9a014773b28c0637fb85c25d158f0f5
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] b(byte[],byte[],byte[])>
		SHA-256: 735d7aa964882203c2b460a8764d90b2683a124d7185d9770cb3788fa4e1d305
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.PrivateKey
		Statement: $r10 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 7ae14d7cc011296025ff24587a1e330af22eaaf17feb2c29089580b3e77b8c99
		Secure: true
	Object:
		Variable: varReplacer9197
		Type: java.lang.String
		Statement: specialinvoke r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer9196, $i0, varReplacer9197)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] a(byte[],byte[])>
		SHA-256: 66186b456a55d3532a6c17bae9da8177243edc4f9c158106ebe84326776d56d4
		Secure: false
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r4)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] b(byte[],byte[],byte[])>
		SHA-256: 2c8319c53abbd65bf565cbdbfa40bb368fb69ab930c492e331c37316aa518a82
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer6197)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 830860bc7f182f46f183d3c27e3681f02422d9feb3ab742da4680b43157af212
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] a(byte[],java.lang.String,java.lang.String)>
		SHA-256: 3541039459c205848ba78c71f7789920fc3c1121f9f64caf29f419d162483656
		Secure: false
	Object:
		Variable: r10
		Type: java.security.SecureRandom
		Statement: specialinvoke r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: c49baf8b2831a2be9aa3b8b2b456003f3087b1f5f20fd8411803ca8aa53c7285
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.unity.FB: java.lang.String getKeyHash()>
		SHA-256: fbe47ce343b5df21a88c6af9649c2f8d6f5b813e936d699f053ff2a390f19c03
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r4)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] a(byte[],byte[],byte[])>
		SHA-256: 8fc2a491c41d546bf93a290ff23c1c9a675c92306a89e1925922ca378b6d49bd
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer6194, varReplacer6195)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: dc7a225c4a16661e2693e5fe93940119755b072f49577943c7fb90cbfbe25c4e
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 370c144343593a2f250efa941f352a4014e247d247772ee8513fb5ea08368c0d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzud()>
		SHA-256: 5ace77f8b7c2eaa195b63fcdb7364729c246d8d3f112aa6fed84054756bcd3cd
		Secure: true
	Object:
		Variable: r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r4)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] b(byte[],byte[],byte[])>
		SHA-256: 17122dfd73dd5e5c2c87cdbeb701f30aad79c2f449cc83f739124dc40af21cff
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzdj(java.lang.String)>
		SHA-256: dec5c7bbd2141752643acb362b31f4af98a763fcc1da3c0b5b264c0b58051308
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: a3d08211d3ba404e6ba4646686ff2b51d3fd8d0e847ca8bb2960c48a82e64856
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 2faa76daebb8e6de2f1ad32db8b5be407984fa0b517ad152e21be098abd9aeb9
		Secure: false
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r4)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] a(byte[],byte[],byte[])>
		SHA-256: c839ee15b2adb8190a971e0a1cabd85296cd30e472214fc44926fb27926b62ff
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.immersion.hapticmediasdk.utils.FileManager: java.lang.String getUniqueFileName(java.lang.String)>
		SHA-256: 4a1e4da45af0fcc5ddf784758f7ca0714794ba61042ce4553a749990f9e853ce
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1140)
		Method: <com.jirbo.adcolony.ah: java.lang.String a(java.lang.String)>
		SHA-256: 7c367a415a297999033e2415f635e60480d4ae83a4b736964194e327741606ff
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r4)
		Method: <com.inmobi.commons.core.utilities.a.b: byte[] b(byte[],byte[],byte[])>
		SHA-256: 7d2fb198ebe37d2baed5dc7e3563a7e0a26327f98dba2325c016fb23f887bc83
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.jirbo.adcolony.ah: java.lang.String a(java.lang.String)>
		SHA-256: 84420bfe410affce7f477fc32adbc38b581dab086799e52103da3e0038bb82ad
		Secure: true

Findings in Java Class: com.facebook.ads.internal.util.g

	 in Method: void b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer777, r12, $r3)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #6a981cbf80304e79610c6ce87d55d3614b30efbfa9690e19662145fff21988b)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer778)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer777, r12, $r3)


Findings in Java Class: com.unity3d.player.UnityPlayer

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fe5b659e0325b82ee75994050ea0dd3df0434bcf83662240e7c7b5ab50fcd50a)
			Third parameter (with value 0)Variable pre_lenmust be  greater than pre_off
			at statement: virtualinvoke $r2.<java.security.MessageDigest: void update(byte[],int,int)>($r1, varReplacer3578, $i3)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #fe5b659e0325b82ee75994050ea0dd3df0434bcf83662240e7c7b5ab50fcd50a)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.leanplum.a

	 in Method: byte[] a(int,java.lang.String,byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #dc7a225c4a16661e2693e5fe93940119755b072f49577943c7fb90cbfbe25c4e)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #dc7a225c4a16661e2693e5fe93940119755b072f49577943c7fb90cbfbe25c4e)
			Third parameter (with value 1000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer6194, varReplacer6195)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6203, $r9, $r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer6194, varReplacer6195)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6203, $r9, $r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer6197)


Findings in Java Class: com.facebook.unity.FB

	 in Method: java.lang.String getKeyHash()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6ccb46ae9976302633323ba88f57031cdbf1b70a2fa65b4f1bebe7ce4b8b9e9)
			First parameter (with value "SHA") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6275)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #97e25ace009d4da5550b8b63d4e3df5760ee8110ca7802959016ba1be1653e1e)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7455)


Findings in Java Class: com.inmobi.commons.core.utilities.a.b

	 in Method: byte[] a(byte[],java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer9191, $r8)


	 in Method: byte[] a(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9138, $r3, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9138, $r3, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)


	 in Method: byte[] b(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9201, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9201, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9205, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9202, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9205, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9202, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9201, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9202, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9205, $r3, $r5)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer9196, $i0, varReplacer9197)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 50

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 25
	ConstraintError: 6
	TypestateError: 1
	IncompleteOperationError: 1
=====================================================================