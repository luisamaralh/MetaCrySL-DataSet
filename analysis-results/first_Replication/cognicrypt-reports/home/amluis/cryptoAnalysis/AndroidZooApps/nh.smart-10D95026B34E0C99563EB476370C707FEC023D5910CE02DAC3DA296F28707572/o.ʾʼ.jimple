public class o.\u02be\u02bc extends java.lang.Object
{
    private java.security.PrivateKey \u02ca;
    private java.util.List \u02ce;
    private java.lang.String \u02cf;

    public void <init>()
    {
        o.\u02be\u02bc $r0;
        java.util.ArrayList $r1;

        nop;

        $r0 := @this: o.\u02be\u02bc;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<o.\u02be\u02bc: java.util.List \u02ce> = $r1;

        return;
    }

    public static o.\u02bd\uff9e \u02ca(java.security.cert.X509Certificate[], java.util.List)
    {
        java.util.List $r0, $r13;
        o.\u02bd\uff9e $r1, r20;
        java.security.cert.X509Certificate[] $r2;
        java.security.cert.X509Certificate $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4;
        java.security.Principal $r6;
        java.lang.String $r7, $r10;
        java.lang.Object $r8;
        o.\u02bd\ua78c $r9;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object[] $r11;
        java.lang.StringBuilder $r12, r21;
        o.\u02bd\ua71f $r14, $r17;
        java.security.PublicKey $r15;
        java.lang.Exception $r16;
        java.lang.Throwable $r18, $r19;
        java.security.cert.CertificateEncodingException r22;
        java.security.NoSuchAlgorithmException r23;

        $r2 := @parameter0: java.security.cert.X509Certificate[];

        $r0 := @parameter1: java.util.List;

        $r3 = null;

        $r4 = null;

        r20 = new o.\u02bd\uff9e;

        $r1 = r20;

        specialinvoke r20.<o.\u02bd\uff9e: void <init>()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label05;

        $r5 = $r2[$i1];

        $r6 = virtualinvoke $r5.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r7 = interfaceinvoke $r6.<java.security.Principal: java.lang.String getName()>();

        if $r4 != null goto label05;

        $i2 = 0;

     label02:
        $i3 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i2 >= $i3 goto label04;

        $r8 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i2);

        $r9 = (o.\u02bd\ua78c) $r8;

        $r10 = virtualinvoke $r9.<o.\u02bd\ua78c: java.lang.String \u02cf()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>($r10);

        if $z0 == 0 goto label03;

        $r4 = $r5;

        $r11 = newarray (java.lang.Object)[1];

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("SubjectCert = ");

        $r6 = virtualinvoke $r5.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r12 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11[0] = $r7;

        staticinvoke <o.\u02c8\u02bc: void \u02cf(java.lang.Object[])>($r11);

        goto label04;

     label03:
        $i2 = $i2 + 1;

        goto label02;

     label04:
        $i1 = $i1 + 1;

        goto label01;

     label05:
        $i0 = lengthof $r2;

        $i1 = 0;

     label06:
        if $i1 >= $i0 goto label12;

        $r5 = $r2[$i1];

        $r6 = virtualinvoke $r5.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r7 = interfaceinvoke $r6.<java.security.Principal: java.lang.String getName()>();

        if $r3 != null goto label12;

        $i2 = 0;

     label07:
        $i3 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i2 >= $i3 goto label11;

        $r8 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i2);

        $r9 = (o.\u02bd\ua78c) $r8;

        if $r3 != null goto label11;

        $i3 = 0;

     label08:
        $r13 = virtualinvoke $r9.<o.\u02bd\ua78c: java.util.List \u0971()>();

        $i4 = interfaceinvoke $r13.<java.util.List: int size()>();

        if $i3 >= $i4 goto label10;

        $r13 = virtualinvoke $r9.<o.\u02bd\ua78c: java.util.List \u0971()>();

        $r8 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>($i3);

        $r14 = (o.\u02bd\ua71f) $r8;

        $r10 = virtualinvoke $r14.<o.\u02bd\ua71f: java.lang.String \u02cf()>();

        if $r10 == null goto label09;

        $r13 = virtualinvoke $r9.<o.\u02bd\ua78c: java.util.List \u0971()>();

        $r8 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>($i3);

        $r14 = (o.\u02bd\ua71f) $r8;

        $r10 = virtualinvoke $r14.<o.\u02bd\ua71f: java.lang.String \u02cf()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>($r10);

        if $z0 == 0 goto label09;

        $r3 = $r5;

        $r11 = newarray (java.lang.Object)[1];

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("IssuerCert = ");

        $r6 = virtualinvoke $r5.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r12 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r10 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11[0] = $r10;

        staticinvoke <o.\u02c8\u02bc: void \u02cf(java.lang.Object[])>($r11);

        goto label10;

     label09:
        $i3 = $i3 + 1;

        goto label08;

     label10:
        $i2 = $i2 + 1;

        goto label07;

     label11:
        $i1 = $i1 + 1;

        goto label06;

     label12:
        $r1.<o.\u02bd\uff9e: boolean \u02cb> = 0;

        if $r4 != null goto label13;

        return null;

     label13:
        if $r3 != null goto label14;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = "\ubc1c\uae09\uc790 \uc778\uc99d\uc11c\uac00 \uc5c6\uc74c";

        staticinvoke <o.\u02c8\u02bc: void \u02cf(java.lang.Object[])>($r11);

        $r3 = $r2[0];

        $r1.<o.\u02bd\uff9e: java.security.cert.X509Certificate \u0971> = $r3;

        return $r1;

     label14:
        $r15 = virtualinvoke $r3.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        virtualinvoke $r4.<java.security.cert.X509Certificate: void verify(java.security.PublicKey)>($r15);

     label15:
        goto label17;

     label16:
        $r16 := @caughtexception;

        $r3 = $r2[0];

        $r1.<o.\u02bd\uff9e: java.security.cert.X509Certificate \u0971> = $r3;

        $r11 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke $r16.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        $r11[0] = $r7;

        staticinvoke <o.\u02c8\u02bc: void \u02cf(java.lang.Object[])>($r11);

        return $r1;

     label17:
        $i0 = 0;

     label18:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 >= $i1 goto label57;

        $z0 = $r1.<o.\u02bd\uff9e: boolean \u02cb>;

        if $z0 != 0 goto label57;

        $r17 = new o.\u02bd\ua71f;

        $r14 = $r17;

     label19:
        specialinvoke $r17.<o.\u02bd\ua71f: void <init>(java.security.cert.X509Certificate)>($r4);

        $r8 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

     label20:
        $r9 = (o.\u02bd\ua78c) $r8;

     label21:
        $r7 = virtualinvoke $r14.<o.\u02bd\ua71f: java.lang.String \u0971()>();

        $r10 = virtualinvoke $r9.<o.\u02bd\ua78c: java.lang.String \u02cf()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label22:
        if $z0 == 0 goto label53;

        $i1 = 0;

     label23:
        $r13 = virtualinvoke $r9.<o.\u02bd\ua78c: java.util.List \u0971()>();

        $i2 = interfaceinvoke $r13.<java.util.List: int size()>();

     label24:
        if $i1 >= $i2 goto label53;

     label25:
        $r13 = virtualinvoke $r9.<o.\u02bd\ua78c: java.util.List \u0971()>();

        $r8 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>($i1);

     label26:
        $r17 = (o.\u02bd\ua71f) $r8;

        $z0 = 1;

     label27:
        $r7 = virtualinvoke $r17.<o.\u02bd\ua71f: java.lang.String \u02bd()>();

     label28:
        if $r7 == null goto label30;

     label29:
        $z0 = staticinvoke <o.\u02bd\ua71f: boolean \u0971(java.security.cert.X509Certificate,o.\u02bd\ua71f)>($r3, $r17);

     label30:
        $z1 = staticinvoke <o.\u02bd\ua71f: boolean \u02ca(o.\u02bd\ua71f,o.\u02bd\ua71f)>($r14, $r17);

        $z2 = staticinvoke <o.\u02bd\ua71f: boolean \u02cb(o.\u02bd\ua71f,o.\u02bd\ua71f)>($r14, $r17);

        $z3 = staticinvoke <o.\u02bd\ua71f: boolean \u0971(o.\u02bd\ua71f,o.\u02bd\ua71f)>($r14, $r17);

        $z4 = staticinvoke <o.\u02bd\ua71f: boolean \u02cf(o.\u02bd\ua71f,o.\u02bd\ua71f)>($r14, $r17);

     label31:
        $r11 = newarray (java.lang.Object)[1];

        r21 = new java.lang.StringBuilder;

        $r12 = r21;

     label32:
        specialinvoke r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("isIssuerKey = ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label33:
        $r11[0] = $r7;

     label34:
        staticinvoke <o.\u02c8\u02bc: void \u02cf(java.lang.Object[])>($r11);

     label35:
        $r11 = newarray (java.lang.Object)[1];

        r21 = new java.lang.StringBuilder;

        $r12 = r21;

     label36:
        specialinvoke r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("isIssuerCN = ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label37:
        $r11[0] = $r7;

     label38:
        staticinvoke <o.\u02c8\u02bc: void \u02cf(java.lang.Object[])>($r11);

     label39:
        $r11 = newarray (java.lang.Object)[1];

        r21 = new java.lang.StringBuilder;

        $r12 = r21;

     label40:
        specialinvoke r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("isFingerprint = ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label41:
        $r11[0] = $r7;

     label42:
        staticinvoke <o.\u02c8\u02bc: void \u02cf(java.lang.Object[])>($r11);

     label43:
        $r11 = newarray (java.lang.Object)[1];

        r21 = new java.lang.StringBuilder;

        $r12 = r21;

     label44:
        specialinvoke r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("isSerialNumber = ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label45:
        $r11[0] = $r7;

     label46:
        staticinvoke <o.\u02c8\u02bc: void \u02cf(java.lang.Object[])>($r11);

     label47:
        $r11 = newarray (java.lang.Object)[1];

        r21 = new java.lang.StringBuilder;

        $r12 = r21;

     label48:
        specialinvoke r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("isSubjectCN = ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label49:
        $r11[0] = $r7;

     label50:
        staticinvoke <o.\u02c8\u02bc: void \u02cf(java.lang.Object[])>($r11);

     label51:
        if $z0 == 0 goto label52;

        if $z1 == 0 goto label52;

        if $z2 == 0 goto label52;

        if $z3 == 0 goto label52;

        if $z4 == 0 goto label52;

        $r1.<o.\u02bd\uff9e: boolean \u02cb> = 1;

        goto label56;

     label52:
        $i1 = $i1 + 1;

        goto label23;

     label53:
        goto label56;

     label54:
        $r18 := @caughtexception;

        r22 = (java.security.cert.CertificateEncodingException) $r18;

        virtualinvoke r22.<java.security.cert.CertificateEncodingException: void printStackTrace()>();

        goto label56;

     label55:
        $r19 := @caughtexception;

        r23 = (java.security.NoSuchAlgorithmException) $r19;

        virtualinvoke r23.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

     label56:
        $i0 = $i0 + 1;

        goto label18;

     label57:
        $z0 = $r1.<o.\u02bd\uff9e: boolean \u02cb>;

        if $z0 != 0 goto label58;

        $r1.<o.\u02bd\uff9e: java.security.cert.X509Certificate \u0971> = $r4;

     label58:
        return $r1;

        catch java.lang.Exception from label14 to label15 with label16;
        catch java.security.cert.CertificateEncodingException from label19 to label20 with label54;
        catch java.security.cert.CertificateEncodingException from label21 to label22 with label54;
        catch java.security.cert.CertificateEncodingException from label23 to label24 with label54;
        catch java.security.cert.CertificateEncodingException from label25 to label26 with label54;
        catch java.security.cert.CertificateEncodingException from label27 to label28 with label54;
        catch java.security.cert.CertificateEncodingException from label29 to label30 with label54;
        catch java.security.cert.CertificateEncodingException from label30 to label31 with label54;
        catch java.security.cert.CertificateEncodingException from label32 to label33 with label54;
        catch java.security.cert.CertificateEncodingException from label34 to label35 with label54;
        catch java.security.cert.CertificateEncodingException from label36 to label37 with label54;
        catch java.security.cert.CertificateEncodingException from label38 to label39 with label54;
        catch java.security.cert.CertificateEncodingException from label40 to label41 with label54;
        catch java.security.cert.CertificateEncodingException from label42 to label43 with label54;
        catch java.security.cert.CertificateEncodingException from label44 to label45 with label54;
        catch java.security.cert.CertificateEncodingException from label46 to label47 with label54;
        catch java.security.cert.CertificateEncodingException from label48 to label49 with label54;
        catch java.security.cert.CertificateEncodingException from label50 to label51 with label54;
        catch java.security.NoSuchAlgorithmException from label19 to label20 with label55;
        catch java.security.NoSuchAlgorithmException from label21 to label22 with label55;
        catch java.security.NoSuchAlgorithmException from label23 to label24 with label55;
        catch java.security.NoSuchAlgorithmException from label25 to label26 with label55;
        catch java.security.NoSuchAlgorithmException from label27 to label28 with label55;
        catch java.security.NoSuchAlgorithmException from label29 to label30 with label55;
        catch java.security.NoSuchAlgorithmException from label30 to label31 with label55;
        catch java.security.NoSuchAlgorithmException from label32 to label33 with label55;
        catch java.security.NoSuchAlgorithmException from label34 to label35 with label55;
        catch java.security.NoSuchAlgorithmException from label36 to label37 with label55;
        catch java.security.NoSuchAlgorithmException from label38 to label39 with label55;
        catch java.security.NoSuchAlgorithmException from label40 to label41 with label55;
        catch java.security.NoSuchAlgorithmException from label42 to label43 with label55;
        catch java.security.NoSuchAlgorithmException from label44 to label45 with label55;
        catch java.security.NoSuchAlgorithmException from label46 to label47 with label55;
        catch java.security.NoSuchAlgorithmException from label48 to label49 with label55;
        catch java.security.NoSuchAlgorithmException from label50 to label51 with label55;
    }

    public static boolean \u02ce(java.lang.String, java.lang.String, java.security.PublicKey)
    {
        java.security.PublicKey $r0;
        java.lang.Throwable $r1;
        java.lang.String $r2, $r3, varReplacer8811;
        java.lang.Object[] $r4;
        byte[] $r5, $r6;
        java.security.Signature $r7;
        boolean $z0;
        int varReplacer8810;

        nop;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        $r0 := @parameter2: java.security.PublicKey;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r3;

        staticinvoke <o.\u02c8\u02bc: void \u02cf(java.lang.Object[])>($r4);

        $r5 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

     label1:
        $r6 = staticinvoke <btworks.util.Base64: byte[] decode(java.lang.String)>($r3);

     label2:
        goto label4;

     label3:
        varReplacer8810 = 0;

        return varReplacer8810;

     label4:
        varReplacer8811 = "SHA256withRSA";

        $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer8811);

        virtualinvoke $r7.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0);

        virtualinvoke $r7.<java.security.Signature: void update(byte[])>($r5);

        $z0 = virtualinvoke $r7.<java.security.Signature: boolean verify(byte[])>($r6);

        return $z0;

     label5:
        $r1 := @caughtexception;

        goto label3;

        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
    }

    public java.lang.String \u02ca()
    {
        o.\u02be\u02bc $r0;
        java.lang.String $r1;
        org.json.JSONObject $r2, $r8;
        org.json.JSONArray $r3;
        org.json.JSONException $r4, $r9;
        int $i0, $i1;
        java.util.List $r5;
        java.lang.Object $r6;
        o.\u02bd\ua78c $r7;

        $r0 := @this: o.\u02be\u02bc;

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

        $r3 = new org.json.JSONArray;

        specialinvoke $r3.<org.json.JSONArray: void <init>()>();

        $i0 = 0;

     label01:
        $r5 = $r0.<o.\u02be\u02bc: java.util.List \u02ce>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 >= $i1 goto label08;

        $r5 = $r0.<o.\u02be\u02bc: java.util.List \u02ce>;

     label02:
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

     label03:
        $r7 = (o.\u02bd\ua78c) $r6;

     label04:
        $r8 = virtualinvoke $r7.<o.\u02bd\ua78c: org.json.JSONObject \u02cb()>();

        virtualinvoke $r3.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r8);

     label05:
        goto label07;

     label06:
        $r4 := @caughtexception;

        virtualinvoke $r4.<org.json.JSONException: void printStackTrace()>();

     label07:
        $i0 = $i0 + 1;

        goto label01;

     label08:
        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("trustedFacets", $r3);

     label09:
        $r1 = $r0.<o.\u02be\u02bc: java.lang.String \u02cf>;

     label10:
        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("signature", $r1);

     label11:
        goto label13;

     label12:
        $r9 := @caughtexception;

        virtualinvoke $r9.<org.json.JSONException: void printStackTrace()>();

     label13:
        $r1 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>();

        return $r1;

        catch org.json.JSONException from label02 to label03 with label06;
        catch org.json.JSONException from label04 to label05 with label06;
        catch org.json.JSONException from label08 to label09 with label12;
        catch org.json.JSONException from label10 to label11 with label12;
    }

    public java.util.List \u02ce()
    {
        o.\u02be\u02bc $r0;
        java.util.List r1;

        nop;

        $r0 := @this: o.\u02be\u02bc;

        r1 = $r0.<o.\u02be\u02bc: java.util.List \u02ce>;

        return r1;
    }

    public o.\u02be\u02bc \u02ce(java.lang.String, java.security.cert.X509Certificate)
    {
        o.\u02be\u02bc $r0;
        java.lang.String $r1, $r5, $r6, varReplacer8804, varReplacer8805, varReplacer8806, varReplacer8807;
        java.security.cert.X509Certificate $r2;
        java.lang.Object[] $r3;
        java.security.PublicKey $r4;
        int $i0, $i1, $i2;
        org.json.JSONObject $r7, r16;
        org.json.JSONArray $r8;
        boolean $z0;
        o.\u02bd\ua78c $r9, r17;
        java.lang.Object $r10;
        java.util.List $r11;
        org.json.JSONException $r12;
        java.lang.Throwable $r13, $r14, $r15;
        java.security.SignatureException r18;
        java.security.InvalidKeyException r19;
        java.security.NoSuchAlgorithmException r20;
        null_type varReplacer8803;

        nop;

        $r0 := @this: o.\u02be\u02bc;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.security.cert.X509Certificate;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r1;

        staticinvoke <o.\u02c8\u02bc: void \u02cf(java.lang.Object[])>($r3);

     label01:
        $r4 = virtualinvoke $r2.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

     label02:
        $r5 = "\"trustedFacets\":";

     label03:
        varReplacer8807 = "\"trustedFacets\":";

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>(varReplacer8807);

        varReplacer8804 = "\"signature\":";

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>(varReplacer8804);

     label04:
        $r6 = "";

        if $i0 == -1 goto label14;

        if $i1 == -1 goto label14;

        if $i0 >= $i1 goto label09;

     label05:
        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();

     label06:
        $i0 = $i2 + $i0;

        $i1 = $i1 + -1;

     label07:
        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

     label08:
        goto label14;

     label09:
        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

     label10:
        $i0 = $i1 + $i0;

     label11:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label12:
        $i1 = $i1 + -1;

     label13:
        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

     label14:
        r16 = new org.json.JSONObject;

        $r7 = r16;

     label15:
        specialinvoke r16.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

        varReplacer8806 = "trustedFacets";

        $r8 = virtualinvoke $r7.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>(varReplacer8806);

        varReplacer8805 = "signature";

        $r1 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer8805);

     label16:
        $r0.<o.\u02be\u02bc: java.lang.String \u02cf> = $r1;

     label17:
        $r1 = virtualinvoke $r8.<org.json.JSONArray: java.lang.String toString()>();

     label18:
        $r5 = $r0.<o.\u02be\u02bc: java.lang.String \u02cf>;

     label19:
        $z0 = staticinvoke <o.\u02be\u02bc: boolean \u02ce(java.lang.String,java.lang.String,java.security.PublicKey)>($r1, $r5, $r4);

     label20:
        if $z0 == 0 goto label32;

     label21:
        staticinvoke <o.\u02c8\u02bc: void \u0971()>();

     label22:
        $i0 = 0;

     label23:
        $i1 = virtualinvoke $r8.<org.json.JSONArray: int length()>();

     label24:
        if $i0 >= $i1 goto label31;

        r17 = new o.\u02bd\ua78c;

        $r9 = r17;

     label25:
        $r10 = virtualinvoke $r8.<org.json.JSONArray: java.lang.Object get(int)>($i0);

     label26:
        $r7 = (org.json.JSONObject) $r10;

     label27:
        specialinvoke r17.<o.\u02bd\ua78c: void <init>(org.json.JSONObject)>($r7);

     label28:
        $r11 = $r0.<o.\u02be\u02bc: java.util.List \u02ce>;

     label29:
        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r9);

     label30:
        $i0 = $i0 + 1;

        goto label23;

     label31:
        return $r0;

     label32:
        $r1 = $r0.<o.\u02be\u02bc: java.lang.String \u02cf>;

     label33:
        $z0 = staticinvoke <o.\u02be\u02bc: boolean \u02ce(java.lang.String,java.lang.String,java.security.PublicKey)>($r6, $r1, $r4);

     label34:
        if $z0 == 0 goto label46;

     label35:
        staticinvoke <o.\u02c8\u02bc: void \u0971()>();

     label36:
        $i0 = 0;

     label37:
        $i1 = virtualinvoke $r8.<org.json.JSONArray: int length()>();

     label38:
        if $i0 >= $i1 goto label45;

        r17 = new o.\u02bd\ua78c;

        $r9 = r17;

     label39:
        $r10 = virtualinvoke $r8.<org.json.JSONArray: java.lang.Object get(int)>($i0);

     label40:
        $r7 = (org.json.JSONObject) $r10;

     label41:
        specialinvoke r17.<o.\u02bd\ua78c: void <init>(org.json.JSONObject)>($r7);

     label42:
        $r11 = $r0.<o.\u02be\u02bc: java.util.List \u02ce>;

     label43:
        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r9);

     label44:
        $i0 = $i0 + 1;

        goto label37;

     label45:
        return $r0;

     label46:
        staticinvoke <o.\u02c8\u02bc: void \u0971()>();

     label47:
        goto label58;

     label48:
        $r12 := @caughtexception;

     label49:
        virtualinvoke $r12.<org.json.JSONException: void printStackTrace()>();

     label50:
        goto label58;

     label51:
        $r13 := @caughtexception;

        r18 = (java.security.SignatureException) $r13;

     label52:
        virtualinvoke r18.<java.security.SignatureException: void printStackTrace()>();

     label53:
        goto label58;

     label54:
        $r14 := @caughtexception;

        r19 = (java.security.InvalidKeyException) $r14;

     label55:
        virtualinvoke r19.<java.security.InvalidKeyException: void printStackTrace()>();

     label56:
        goto label58;

     label57:
        $r15 := @caughtexception;

        r20 = (java.security.NoSuchAlgorithmException) $r15;

        virtualinvoke r20.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

     label58:
        varReplacer8803 = null;

        return varReplacer8803;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label57;
        catch org.json.JSONException from label03 to label04 with label48;
        catch org.json.JSONException from label05 to label06 with label48;
        catch org.json.JSONException from label07 to label08 with label48;
        catch org.json.JSONException from label09 to label10 with label48;
        catch org.json.JSONException from label11 to label12 with label48;
        catch org.json.JSONException from label13 to label14 with label48;
        catch org.json.JSONException from label15 to label16 with label48;
        catch org.json.JSONException from label17 to label18 with label48;
        catch org.json.JSONException from label19 to label20 with label48;
        catch org.json.JSONException from label21 to label22 with label48;
        catch org.json.JSONException from label23 to label24 with label48;
        catch org.json.JSONException from label25 to label26 with label48;
        catch org.json.JSONException from label27 to label28 with label48;
        catch org.json.JSONException from label29 to label30 with label48;
        catch java.security.SignatureException from label03 to label04 with label51;
        catch java.security.SignatureException from label05 to label06 with label51;
        catch java.security.SignatureException from label07 to label08 with label51;
        catch java.security.SignatureException from label09 to label10 with label51;
        catch java.security.SignatureException from label11 to label12 with label51;
        catch java.security.SignatureException from label13 to label14 with label51;
        catch java.security.SignatureException from label15 to label16 with label51;
        catch java.security.SignatureException from label17 to label18 with label51;
        catch java.security.SignatureException from label19 to label20 with label51;
        catch java.security.SignatureException from label21 to label22 with label51;
        catch java.security.SignatureException from label23 to label24 with label51;
        catch java.security.SignatureException from label25 to label26 with label51;
        catch java.security.SignatureException from label27 to label28 with label51;
        catch java.security.SignatureException from label29 to label30 with label51;
        catch java.security.InvalidKeyException from label03 to label04 with label54;
        catch java.security.InvalidKeyException from label05 to label06 with label54;
        catch java.security.InvalidKeyException from label07 to label08 with label54;
        catch java.security.InvalidKeyException from label09 to label10 with label54;
        catch java.security.InvalidKeyException from label11 to label12 with label54;
        catch java.security.InvalidKeyException from label13 to label14 with label54;
        catch java.security.InvalidKeyException from label15 to label16 with label54;
        catch java.security.InvalidKeyException from label17 to label18 with label54;
        catch java.security.InvalidKeyException from label19 to label20 with label54;
        catch java.security.InvalidKeyException from label21 to label22 with label54;
        catch java.security.InvalidKeyException from label23 to label24 with label54;
        catch java.security.InvalidKeyException from label25 to label26 with label54;
        catch java.security.InvalidKeyException from label27 to label28 with label54;
        catch java.security.InvalidKeyException from label29 to label30 with label54;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label57;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label57;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label57;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label57;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label57;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label57;
        catch java.security.NoSuchAlgorithmException from label15 to label16 with label57;
        catch java.security.NoSuchAlgorithmException from label17 to label18 with label57;
        catch java.security.NoSuchAlgorithmException from label19 to label20 with label57;
        catch java.security.NoSuchAlgorithmException from label21 to label22 with label57;
        catch java.security.NoSuchAlgorithmException from label23 to label24 with label57;
        catch java.security.NoSuchAlgorithmException from label25 to label26 with label57;
        catch java.security.NoSuchAlgorithmException from label27 to label28 with label57;
        catch java.security.NoSuchAlgorithmException from label29 to label30 with label57;
        catch org.json.JSONException from label33 to label34 with label48;
        catch org.json.JSONException from label35 to label36 with label48;
        catch org.json.JSONException from label37 to label38 with label48;
        catch org.json.JSONException from label39 to label40 with label48;
        catch org.json.JSONException from label41 to label42 with label48;
        catch org.json.JSONException from label43 to label44 with label48;
        catch java.security.SignatureException from label33 to label34 with label51;
        catch java.security.SignatureException from label35 to label36 with label51;
        catch java.security.SignatureException from label37 to label38 with label51;
        catch java.security.SignatureException from label39 to label40 with label51;
        catch java.security.SignatureException from label41 to label42 with label51;
        catch java.security.SignatureException from label43 to label44 with label51;
        catch java.security.InvalidKeyException from label33 to label34 with label54;
        catch java.security.InvalidKeyException from label35 to label36 with label54;
        catch java.security.InvalidKeyException from label37 to label38 with label54;
        catch java.security.InvalidKeyException from label39 to label40 with label54;
        catch java.security.InvalidKeyException from label41 to label42 with label54;
        catch java.security.InvalidKeyException from label43 to label44 with label54;
        catch java.security.NoSuchAlgorithmException from label33 to label34 with label57;
        catch java.security.NoSuchAlgorithmException from label35 to label36 with label57;
        catch java.security.NoSuchAlgorithmException from label37 to label38 with label57;
        catch java.security.NoSuchAlgorithmException from label39 to label40 with label57;
        catch java.security.NoSuchAlgorithmException from label41 to label42 with label57;
        catch java.security.NoSuchAlgorithmException from label43 to label44 with label57;
        catch org.json.JSONException from label46 to label47 with label48;
        catch java.security.SignatureException from label46 to label47 with label51;
        catch java.security.InvalidKeyException from label46 to label47 with label54;
        catch java.security.NoSuchAlgorithmException from label46 to label47 with label57;
        catch java.security.NoSuchAlgorithmException from label49 to label50 with label57;
        catch java.security.NoSuchAlgorithmException from label52 to label53 with label57;
        catch java.security.NoSuchAlgorithmException from label55 to label56 with label57;
    }

    public void \u02ce(java.security.PrivateKey)
    {
        o.\u02be\u02bc $r0;
        java.security.PrivateKey $r1;

        $r0 := @this: o.\u02be\u02bc;

        $r1 := @parameter0: java.security.PrivateKey;

        $r0.<o.\u02be\u02bc: java.security.PrivateKey \u02ca> = $r1;

        return;
    }

    public java.lang.String \u02cf()
    {
        o.\u02be\u02bc $r0;
        java.lang.String r1;

        $r0 := @this: o.\u02be\u02bc;

        r1 = $r0.<o.\u02be\u02bc: java.lang.String \u02cf>;

        return r1;
    }

    public void \u02cf(java.util.List)
    {
        o.\u02be\u02bc $r0;
        java.util.List $r1;

        $r0 := @this: o.\u02be\u02bc;

        $r1 := @parameter0: java.util.List;

        $r0.<o.\u02be\u02bc: java.util.List \u02ce> = $r1;

        return;
    }

    public void \u02cf(o.\u02bd\ua78c)
    {
        o.\u02be\u02bc $r0;
        o.\u02bd\ua78c $r1;
        java.util.List $r2;

        $r0 := @this: o.\u02be\u02bc;

        $r1 := @parameter0: o.\u02bd\ua78c;

        $r2 = $r0.<o.\u02be\u02bc: java.util.List \u02ce>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void \u0971()
    {
        o.\u02be\u02bc $r0;
        org.json.JSONArray $r1;
        org.json.JSONException $r2;
        java.security.PrivateKey $r3;
        java.lang.NullPointerException $r4;
        java.util.List $r5;
        java.security.Signature $r6;
        int $i0, $i1;
        java.lang.Object $r7;
        o.\u02bd\ua78c $r8;
        org.json.JSONObject $r9;
        java.lang.String $r10;
        byte[] $r11;

        $r0 := @this: o.\u02be\u02bc;

        $r3 = $r0.<o.\u02be\u02bc: java.security.PrivateKey \u02ca>;

        if $r3 != null goto label01;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("private key null");

        throw $r4;

     label01:
        $r5 = $r0.<o.\u02be\u02bc: java.util.List \u02ce>;

        if $r5 != null goto label02;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("trustedFacets null");

        throw $r4;

     label02:
        $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>("SHA256withRSA");

        $r3 = $r0.<o.\u02be\u02bc: java.security.PrivateKey \u02ca>;

        virtualinvoke $r6.<java.security.Signature: void initSign(java.security.PrivateKey)>($r3);

        $r1 = new org.json.JSONArray;

        specialinvoke $r1.<org.json.JSONArray: void <init>()>();

        $i0 = 0;

     label03:
        $r5 = $r0.<o.\u02be\u02bc: java.util.List \u02ce>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 >= $i1 goto label10;

        $r5 = $r0.<o.\u02be\u02bc: java.util.List \u02ce>;

     label04:
        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

     label05:
        $r8 = (o.\u02bd\ua78c) $r7;

     label06:
        $r9 = virtualinvoke $r8.<o.\u02bd\ua78c: org.json.JSONObject \u02cb()>();

        virtualinvoke $r1.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r9);

     label07:
        goto label09;

     label08:
        $r2 := @caughtexception;

        virtualinvoke $r2.<org.json.JSONException: void printStackTrace()>();

     label09:
        $i0 = $i0 + 1;

        goto label03;

     label10:
        $r10 = virtualinvoke $r1.<org.json.JSONArray: java.lang.String toString()>();

        $r11 = virtualinvoke $r10.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r6.<java.security.Signature: void update(byte[])>($r11);

        $r11 = virtualinvoke $r6.<java.security.Signature: byte[] sign()>();

        $r10 = staticinvoke <btworks.util.Base64: java.lang.String encode(byte[])>($r11);

        $r0.<o.\u02be\u02bc: java.lang.String \u02cf> = $r10;

        return;

        catch org.json.JSONException from label04 to label05 with label08;
        catch org.json.JSONException from label06 to label07 with label08;
    }
}
