class btworks.jce.provider.cipher.T extends btworks.jce.provider.cipher.R
{
    private boolean K;
    private int L;
    private byte[] M;
    private int N;
    private final byte[] O;
    private int P;
    protected long Q;
    private final byte[] R;

    void <init>(btworks.jce.provider.cipher.P)
    {
        btworks.jce.provider.cipher.T $r0;
        btworks.jce.provider.cipher.P $r1;
        int $i0;
        byte[] $r2;
        null_type varReplacer8040;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        $r1 := @parameter0: btworks.jce.provider.cipher.P;

        specialinvoke $r0.<btworks.jce.provider.cipher.R: void <init>(btworks.jce.provider.cipher.P)>($r1);

        varReplacer8040 = null;

        $r0.<btworks.jce.provider.cipher.T: byte[] M> = varReplacer8040;

        $i0 = $r0.<btworks.jce.provider.cipher.T: int C>;

        $r2 = newarray (byte)[$i0];

        $r0.<btworks.jce.provider.cipher.T: byte[] R> = $r2;

        $i0 = $r0.<btworks.jce.provider.cipher.T: int C>;

        $r2 = newarray (byte)[$i0];

        $r0.<btworks.jce.provider.cipher.T: byte[] O> = $r2;

        $i0 = $r0.<btworks.jce.provider.cipher.T: int C>;

        $r0.<btworks.jce.provider.cipher.T: int L> = $i0;

        return;
    }

    void <init>(btworks.jce.provider.cipher.P, int)
    {
        btworks.jce.provider.cipher.T $r0;
        btworks.jce.provider.cipher.P $r1;
        int $i0, $i1;
        java.security.NoSuchAlgorithmException $r2;
        byte[] $r3;
        null_type varReplacer8037;
        java.lang.String varReplacer8038, varReplacer8039;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        $r1 := @parameter0: btworks.jce.provider.cipher.P;

        $i0 := @parameter1: int;

        specialinvoke $r0.<btworks.jce.provider.cipher.R: void <init>(btworks.jce.provider.cipher.P)>($r1);

        varReplacer8037 = null;

        $r0.<btworks.jce.provider.cipher.T: byte[] M> = varReplacer8037;

        if $i0 == 0 goto label1;

        $i1 = $i0 % 8;

        if $i1 == 0 goto label2;

     label1:
        $r2 = new java.security.NoSuchAlgorithmException;

        varReplacer8038 = "Feedback size is 0 or not a multiple of 8 bits.";

        specialinvoke $r2.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>(varReplacer8038);

        throw $r2;

     label2:
        $i0 = $i0 / 8;

        if $i0 < 1 goto label3;

        $i1 = $r0.<btworks.jce.provider.cipher.T: int C>;

        if $i0 <= $i1 goto label4;

     label3:
        $r2 = new java.security.NoSuchAlgorithmException;

        varReplacer8039 = "Feedback size <1 or >CIPHER_BLOCK_SIZE";

        specialinvoke $r2.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>(varReplacer8039);

        throw $r2;

     label4:
        $i1 = $r0.<btworks.jce.provider.cipher.T: int C>;

        $r3 = newarray (byte)[$i1];

        $r0.<btworks.jce.provider.cipher.T: byte[] R> = $r3;

        $i1 = $r0.<btworks.jce.provider.cipher.T: int C>;

        $r3 = newarray (byte)[$i1];

        $r0.<btworks.jce.provider.cipher.T: byte[] O> = $r3;

        $r0.<btworks.jce.provider.cipher.T: int L> = $i0;

        return;
    }

    private void A(byte)
    {
        btworks.jce.provider.cipher.T $r0;
        byte $b0;
        boolean $z0;
        byte[] $r1;
        int $i1, $i2;
        long $l3;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        $b0 := @parameter0: byte;

        $r1 = $r0.<btworks.jce.provider.cipher.T: byte[] O>;

        $i1 = $r0.<btworks.jce.provider.cipher.T: int N>;

        $i2 = $i1 + 1;

        $r0.<btworks.jce.provider.cipher.T: int N> = $i2;

        $i2 = $r0.<btworks.jce.provider.cipher.T: int C>;

        $i1 = $i1 % $i2;

        $r1[$i1] = $b0;

        $l3 = $r0.<btworks.jce.provider.cipher.T: long Q>;

        $l3 = $l3 + 1L;

        $r0.<btworks.jce.provider.cipher.T: long Q> = $l3;

        $z0 = virtualinvoke $r0.<btworks.jce.provider.cipher.T: boolean I()>();

        if $z0 == 0 goto label1;

        specialinvoke $r0.<btworks.jce.provider.cipher.T: void J()>();

     label1:
        return;
    }

    private void J()
    {
        btworks.jce.provider.cipher.T $r0;
        int $i0, $i1, $i2, varReplacer8647, varReplacer8648, varReplacer8649;
        byte[] $r1, $r2;
        byte $b3;
        btworks.jce.provider.cipher.P $r3;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        $i0 = 0;

        goto label2;

     label1:
        $r1 = $r0.<btworks.jce.provider.cipher.T: byte[] R>;

        $r2 = $r0.<btworks.jce.provider.cipher.T: byte[] O>;

        $i1 = $r0.<btworks.jce.provider.cipher.T: int N>;

        $i2 = $i1 + 1;

        $r0.<btworks.jce.provider.cipher.T: int N> = $i2;

        $i2 = $r0.<btworks.jce.provider.cipher.T: int C>;

        $i1 = $i1 % $i2;

        $b3 = $r2[$i1];

        $r1[$i0] = $b3;

        $i0 = $i0 + 1;

     label2:
        $i1 = $r0.<btworks.jce.provider.cipher.T: int C>;

        if $i0 < $i1 goto label1;

        $r3 = $r0.<btworks.jce.provider.cipher.T: btworks.jce.provider.cipher.P A>;

        $r1 = $r0.<btworks.jce.provider.cipher.T: byte[] R>;

        $r2 = $r0.<btworks.jce.provider.cipher.T: byte[] R>;

        varReplacer8648 = 0;

        varReplacer8649 = 0;

        virtualinvoke $r3.<btworks.jce.provider.cipher.P: void A(byte[],int,byte[],int)>($r1, varReplacer8648, $r2, varReplacer8648);

        varReplacer8647 = 0;

        $r0.<btworks.jce.provider.cipher.T: int P> = varReplacer8647;

        return;
    }

    final int A(int)
    {
        btworks.jce.provider.cipher.T $r0;
        int $i0;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        $i0 := @parameter0: int;

        return $i0;
    }

    int A(byte[], int, int, byte[], int)
    {
        btworks.jce.provider.cipher.T $r0;
        byte[] $r1, $r2, $r3;
        int $i0, $i1, $i2, $i5, $i6, $i7;
        byte $b3, $b4;
        boolean $z0;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        $r1 := @parameter0: byte[];

        $i5 := @parameter1: int;

        $i0 := @parameter2: int;

        $r2 := @parameter3: byte[];

        $i6 := @parameter4: int;

        $i7 = $i0;

        goto label4;

     label1:
        $r3 = $r0.<btworks.jce.provider.cipher.T: byte[] R>;

        $i1 = $r0.<btworks.jce.provider.cipher.T: int P>;

        $i2 = $i1 + 1;

        $r0.<btworks.jce.provider.cipher.T: int P> = $i2;

        $b3 = $r3[$i1];

        $i1 = $i5;

        $i5 = $i5 + 1;

        $b4 = $r1[$i1];

        $b3 = $b4 ^ $b3;

        $z0 = $r0.<btworks.jce.provider.cipher.T: boolean K>;

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $b4 = $b3;

     label3:
        specialinvoke $r0.<btworks.jce.provider.cipher.T: void A(byte)>($b4);

        $i1 = $i6;

        $i6 = $i6 + 1;

        $r2[$i1] = $b3;

     label4:
        $i1 = $i7;

        $i7 = $i7 + -1;

        if $i1 > 0 goto label1;

        return $i0;
    }

    void A(boolean, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)
    {
        btworks.jce.provider.cipher.T $r0;
        boolean $z0;
        java.security.Key $r1;
        java.security.spec.AlgorithmParameterSpec $r2;
        java.security.SecureRandom $r3;
        int $i0, $i1, varReplacer8689, varReplacer8690, varReplacer8692;
        byte[] $r4, $r8;
        btworks.jce.provider.cipher.P $r5;
        javax.crypto.spec.IvParameterSpec $r6;
        java.security.InvalidAlgorithmParameterException $r7;
        long varReplacer8688;
        java.lang.String varReplacer8691;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.security.Key;

        $r2 := @parameter2: java.security.spec.AlgorithmParameterSpec;

        $r3 := @parameter3: java.security.SecureRandom;

        $r5 = $r0.<btworks.jce.provider.cipher.T: btworks.jce.provider.cipher.P A>;

        varReplacer8692 = 0;

        virtualinvoke $r5.<btworks.jce.provider.cipher.P: void A(java.security.Key,boolean)>($r1, varReplacer8692);

        $r0.<btworks.jce.provider.cipher.T: boolean K> = $z0;

        $r6 = (javax.crypto.spec.IvParameterSpec) $r2;

        $r4 = virtualinvoke $r6.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        $r0.<btworks.jce.provider.cipher.T: byte[] M> = $r4;

        $r4 = $r0.<btworks.jce.provider.cipher.T: byte[] M>;

        $i0 = lengthof $r4;

        $i1 = $r0.<btworks.jce.provider.cipher.T: int C>;

        if $i0 == $i1 goto label1;

        $r7 = new java.security.InvalidAlgorithmParameterException;

        varReplacer8691 = "Invalid IV specified, incorrect length.";

        specialinvoke $r7.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>(varReplacer8691);

        throw $r7;

     label1:
        varReplacer8688 = 0L;

        $r0.<btworks.jce.provider.cipher.T: long Q> = varReplacer8688;

        $r4 = $r0.<btworks.jce.provider.cipher.T: byte[] M>;

        $r8 = $r0.<btworks.jce.provider.cipher.T: byte[] O>;

        varReplacer8689 = 0;

        varReplacer8690 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, varReplacer8689, $r8, varReplacer8689, $i0);

        specialinvoke $r0.<btworks.jce.provider.cipher.T: void J()>();

        return;
    }

    final byte[] A()
    {
        btworks.jce.provider.cipher.T $r0;
        byte[] r1;

        $r0 := @this: btworks.jce.provider.cipher.T;

        r1 = $r0.<btworks.jce.provider.cipher.T: byte[] M>;

        return r1;
    }

    final boolean E()
    {
        btworks.jce.provider.cipher.T $r0;
        int varReplacer8031;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        varReplacer8031 = 0;

        return varReplacer8031;
    }

    final java.security.spec.AlgorithmParameterSpec H()
    {
        btworks.jce.provider.cipher.T $r0;
        byte[] $r1;
        javax.crypto.spec.IvParameterSpec $r2;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        $r1 = $r0.<btworks.jce.provider.cipher.T: byte[] M>;

        if $r1 != null goto label1;

        $r2 = new javax.crypto.spec.IvParameterSpec;

        $r1 = virtualinvoke $r0.<btworks.jce.provider.cipher.T: byte[] C()>();

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1);

        return $r2;

     label1:
        $r2 = new javax.crypto.spec.IvParameterSpec;

        $r1 = $r0.<btworks.jce.provider.cipher.T: byte[] M>;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1);

        return $r2;
    }

    protected boolean I()
    {
        btworks.jce.provider.cipher.T $r0;
        long $l0, $l2;
        int $i1, varReplacer8645, varReplacer8646;
        byte $b3;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        $l0 = $r0.<btworks.jce.provider.cipher.T: long Q>;

        $i1 = $r0.<btworks.jce.provider.cipher.T: int L>;

        $l2 = (long) $i1;

        $l0 = $l0 % $l2;

        $b3 = $l0 cmp 0L;

        if $b3 != 0 goto label1;

        varReplacer8645 = 1;

        return varReplacer8645;

     label1:
        varReplacer8646 = 0;

        return varReplacer8646;
    }
}
