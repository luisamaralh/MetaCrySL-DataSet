public class com.crowdcompass.bearing.game.model.Player$SecurePlayer extends com.crowdcompass.bearing.client.util.SecureKey
{

    public void <init>()
    {
        com.crowdcompass.bearing.game.model.Player$SecurePlayer $r0;

        nop;

        $r0 := @this: com.crowdcompass.bearing.game.model.Player$SecurePlayer;

        specialinvoke $r0.<com.crowdcompass.bearing.client.util.SecureKey: void <init>()>();

        return;
    }

    public java.lang.String decrypt(java.lang.String, java.lang.String)
    {
        com.crowdcompass.bearing.game.model.Player$SecurePlayer $r0;
        java.lang.String $r1, $r2, varReplacer9807, varReplacer9808, varReplacer9809, varReplacer9810, varReplacer9813;
        java.io.ByteArrayOutputStream $r3;
        java.lang.Exception $r4;
        org.bouncycastle.util.encoders.Base64Encoder $r5;
        javax.crypto.Cipher $r6;
        byte[] $r7;
        null_type varReplacer9811, varReplacer9814;
        int varReplacer9812;

        nop;

        $r0 := @this: com.crowdcompass.bearing.game.model.Player$SecurePlayer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

     label01:
        varReplacer9812 = 2;

        varReplacer9813 = "uuid";

        $r6 = virtualinvoke $r0.<com.crowdcompass.bearing.game.model.Player$SecurePlayer: javax.crypto.Cipher getCipher(int,java.lang.String)>(varReplacer9812, varReplacer9813);

     label02:
        if $r6 != null goto label05;

     label03:
        $r1 = staticinvoke <com.crowdcompass.bearing.game.model.Player: java.lang.String access$000()>();

        varReplacer9809 = "decrypt";

        varReplacer9810 = "Unable to decrypt value due to invalid cipher.";

        staticinvoke <com.crowdcompass.util.CCLogger: void warn(java.lang.String,java.lang.String,java.lang.String)>($r1, varReplacer9809, varReplacer9810);

     label04:
        varReplacer9811 = null;

        return varReplacer9811;

     label05:
        $r3 = new java.io.ByteArrayOutputStream;

     label06:
        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

     label07:
        $r5 = new org.bouncycastle.util.encoders.Base64Encoder;

     label08:
        specialinvoke $r5.<org.bouncycastle.util.encoders.Base64Encoder: void <init>()>();

        virtualinvoke $r5.<org.bouncycastle.util.encoders.Base64Encoder: int decode(java.lang.String,java.io.OutputStream)>($r2, $r3);

        $r7 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r7 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7);

     label09:
        $r1 = new java.lang.String;

     label10:
        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r7);

     label11:
        return $r1;

     label12:
        $r4 := @caughtexception;

        $r1 = staticinvoke <com.crowdcompass.bearing.game.model.Player: java.lang.String access$000()>();

        varReplacer9807 = "decrypt";

        varReplacer9808 = "Unable to decrypt value due to unexpected error.";

        staticinvoke <com.crowdcompass.util.CCLogger: void error(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r1, varReplacer9807, varReplacer9808, $r4);

        varReplacer9814 = null;

        return varReplacer9814;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Exception from label08 to label09 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    public java.lang.String encrypt(java.lang.String, java.lang.String)
    {
        com.crowdcompass.bearing.game.model.Player$SecurePlayer $r0;
        java.lang.String $r1, $r2, varReplacer9731, varReplacer9734, varReplacer9735, varReplacer9736, varReplacer9737;
        java.io.ByteArrayOutputStream $r3;
        java.lang.Exception $r4;
        org.bouncycastle.util.encoders.Base64Encoder $r5;
        javax.crypto.Cipher $r6;
        byte[] $r7;
        int $i0, varReplacer9730, varReplacer9733;
        null_type varReplacer9732, varReplacer9738;

        nop;

        $r0 := @this: com.crowdcompass.bearing.game.model.Player$SecurePlayer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

     label01:
        varReplacer9733 = 1;

        $r6 = virtualinvoke $r0.<com.crowdcompass.bearing.game.model.Player$SecurePlayer: javax.crypto.Cipher getCipher(int,java.lang.String)>(varReplacer9733, $r1);

     label02:
        if $r6 != null goto label05;

     label03:
        $r1 = staticinvoke <com.crowdcompass.bearing.game.model.Player: java.lang.String access$000()>();

        varReplacer9734 = "encrypt";

        varReplacer9735 = "Unable to encrypt value due to invalid cipher.";

        staticinvoke <com.crowdcompass.util.CCLogger: void warn(java.lang.String,java.lang.String,java.lang.String)>($r1, varReplacer9734, varReplacer9735);

     label04:
        varReplacer9738 = null;

        return varReplacer9738;

     label05:
        varReplacer9731 = "UTF-8";

        $r7 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer9731);

        $r7 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7);

     label06:
        $r3 = new java.io.ByteArrayOutputStream;

     label07:
        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

     label08:
        $r5 = new org.bouncycastle.util.encoders.Base64Encoder;

     label09:
        specialinvoke $r5.<org.bouncycastle.util.encoders.Base64Encoder: void <init>()>();

        $i0 = lengthof $r7;

        varReplacer9730 = 0;

        virtualinvoke $r5.<org.bouncycastle.util.encoders.Base64Encoder: int encode(byte[],int,int,java.io.OutputStream)>($r7, varReplacer9730, $i0, $r3);

        $r1 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

     label10:
        return $r1;

     label11:
        $r4 := @caughtexception;

        $r1 = staticinvoke <com.crowdcompass.bearing.game.model.Player: java.lang.String access$000()>();

        varReplacer9736 = "encrypt";

        varReplacer9737 = "Unable to encrypt value due to unexpected error.";

        staticinvoke <com.crowdcompass.util.CCLogger: void error(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r1, varReplacer9736, varReplacer9737, $r4);

        varReplacer9732 = null;

        return varReplacer9732;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    protected byte[] generateKey(java.lang.String) throws java.io.UnsupportedEncodingException, java.security.NoSuchAlgorithmException
    {
        com.crowdcompass.bearing.game.model.Player$SecurePlayer $r0;
        java.lang.String $r1;
        byte[] $r2;

        nop;

        $r0 := @this: com.crowdcompass.bearing.game.model.Player$SecurePlayer;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.crowdcompass.bearing.client.global.helper.PreferencesHelper: byte[] getPlayerKey(java.lang.String)>($r1);

        if $r2 != null goto label1;

        $r2 = virtualinvoke $r0.<com.crowdcompass.bearing.game.model.Player$SecurePlayer: byte[] getEncodedKey(java.lang.String)>($r1);

        staticinvoke <com.crowdcompass.bearing.client.global.helper.PreferencesHelper: void setPlayerKey(java.lang.String,byte[])>($r1, $r2);

     label1:
        return $r2;
    }

    protected java.lang.String getTableName()
    {
        com.crowdcompass.bearing.game.model.Player$SecurePlayer $r0;

        $r0 := @this: com.crowdcompass.bearing.game.model.Player$SecurePlayer;

        return "player";
    }
}
