public class com.naver.api.security.HmacUtil extends java.lang.Object
{
    private static final java.lang.String ALGORITHM;
    private static final java.lang.String AMPERCENT;
    private static final int MAX_MESSAGESIZE;
    private static final java.lang.String MD;
    private static final java.lang.String MSGPAD;
    private static final java.lang.String QUESTION;
    private static final java.lang.String UTF8;

    public void <init>()
    {
        com.naver.api.security.HmacUtil $r0;

        $r0 := @this: com.naver.api.security.HmacUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static javax.crypto.Mac getMac(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.InvalidKeyException
    {
        java.lang.String $r0, varReplacer3201, varReplacer3202;
        javax.crypto.spec.SecretKeySpec $r1;
        byte[] $r2;
        javax.crypto.Mac $r3;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = new javax.crypto.spec.SecretKeySpec;

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        varReplacer3201 = "HmacSHA1";

        specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3201);

        varReplacer3202 = "HmacSHA1";

        $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer3202);

        virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r1);

        return $r3;
    }

    public static java.lang.String getMessage(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.StringBuilder $r2, $r3;
        int $i0, varReplacer3221, varReplacer3222, varReplacer3223;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        varReplacer3222 = 255;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>(varReplacer3222, $i0);

        varReplacer3221 = 0;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(varReplacer3221, $i0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        varReplacer3223 = 0;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>(varReplacer3223);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String getMessageDigest(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0, $r1;
        javax.crypto.Mac $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.naver.api.security.HmacUtil: javax.crypto.Mac getMac(java.lang.String)>($r0);

        $r0 = staticinvoke <com.naver.api.security.HmacUtil: java.lang.String getMessageDigest(javax.crypto.Mac,java.lang.String)>($r2, $r1);

        return $r0;
    }

    public static java.lang.String getMessageDigest(javax.crypto.Mac, java.lang.String)
    {
        javax.crypto.Mac $r0;
        java.lang.String $r1;
        byte[] $r2;
        java.lang.Throwable $r3;

        nop;

        $r0 := @parameter0: javax.crypto.Mac;

        $r1 := @parameter1: java.lang.String;

        entermonitor $r0;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r2 = virtualinvoke $r0.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2);

        exitmonitor $r0;

     label2:
        $r1 = staticinvoke <com.naver.api.util.Base64: java.lang.String encodeBase64(byte[])>($r2);

        return $r1;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor $r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static java.lang.String makeEncryptUrl(javax.crypto.Mac, java.lang.String) throws java.lang.Exception
    {
        javax.crypto.Mac $r0;
        java.lang.String $r1, $r4, $r5, varReplacer3194, varReplacer3195, varReplacer3197, varReplacer3198, varReplacer3199, varReplacer3200;
        java.lang.StringBuilder $r2, $r6;
        java.util.Calendar $r3;
        long $l0;
        boolean $z0;
        int varReplacer3196;

        nop;

        $r0 := @parameter0: javax.crypto.Mac;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $l0 = virtualinvoke $r3.<java.util.Calendar: long getTimeInMillis()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        $r5 = staticinvoke <com.naver.api.security.HmacUtil: java.lang.String getMessage(java.lang.String,java.lang.String)>($r1, $r4);

        $r5 = staticinvoke <com.naver.api.security.HmacUtil: java.lang.String getMessageDigest(javax.crypto.Mac,java.lang.String)>($r0, $r5);

        varReplacer3195 = "utf-8";

        $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, varReplacer3195);

        varReplacer3196 = 0;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>(varReplacer3196);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer3200 = "?";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer3200);

        if $z0 == 0 goto label2;

        varReplacer3194 = "&";

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3194);

     label1:
        varReplacer3198 = "msgpad=";

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3198);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer3199 = "&md=";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3199);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label2:
        varReplacer3197 = "?";

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3197);

        goto label1;
    }
}
