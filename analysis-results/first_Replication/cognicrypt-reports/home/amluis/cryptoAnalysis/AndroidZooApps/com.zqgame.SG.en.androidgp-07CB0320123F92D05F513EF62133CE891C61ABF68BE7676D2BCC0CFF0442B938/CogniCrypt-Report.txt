Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.MessageDigest: int digest(byte[],int,int)>($r1, varReplacer2993, $i0)
		Method: <com.picto.defender.CryptoManager: void md5(java.security.MessageDigest,byte[],byte[])>
		SHA-256: e709224d6b118b057c7a56c3530783e078201e9120efd6da99b93b853ab98daf
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r0.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <com.naver.api.security.HmacUtil: java.lang.String getMessageDigest(javax.crypto.Mac,java.lang.String)>
		SHA-256: 1eb727a90e2548cbc9e959d0b293c015d0bcf29e4330047b44fe9ab2ad47779e
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.chartboost.sdk.Libraries.b: byte[] a(byte[])>
		SHA-256: c0cb1f3950d1c303a878b272d33cc6b233c283f11853d4c605a6892d1b773e17
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer2707)
		Method: <com.naver.android.appstore.iap.AppstoreSecurity: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: c93d174aefb6a4fba2ed261c46c39e83f20bd94c5e3188ec9562a4d7743a2c6e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3579)
		Method: <com.chartboost.sdk.Libraries.b: byte[] a(byte[])>
		SHA-256: e581ad0fdace1963eef911e6dcfc22369422008df59ea0c5736539e2c86a1549
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer3202)
		Method: <com.naver.api.security.HmacUtil: javax.crypto.Mac getMac(java.lang.String)>
		SHA-256: 7020b08bd8fa04bdc36f55c9e51066bd8dc2c39542f2fd5412145fdb87ff4e60
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.naver.android.appstore.iap.AppstoreSecurity: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 250123705364be9a258f54e30da8ad33de36ccdbe9b574833e24adb69fb716f4
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2989)
		Method: <com.picto.defender.CryptoManager: java.lang.String encrypt_md5(java.lang.String,java.lang.String)>
		SHA-256: c3d281d0bb06a9142538cb7e5d19e03de2df8cfbb87af11390ba6e839775098d
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3201)
		Method: <com.naver.api.security.HmacUtil: javax.crypto.Mac getMac(java.lang.String)>
		SHA-256: 4a33069690cfdd2d0b8ec372e1d0adea817c75ced88f4320620d6bc54c46cf7a
		Secure: false
	Object:
		Variable: r8
		Type: java.security.SecureRandom
		Statement: specialinvoke r8.<java.security.SecureRandom: void <init>()>()
		Method: <com.picto.Utils: void trustAllHosts(javax.net.ssl.HttpsURLConnection)>
		SHA-256: 49e7beeb2c79dc4165ec977771c7698bd2295b83a46f4c14a65f702d8f45ec7a
		Secure: true
	Object:
		Variable: varReplacer3201
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3201)
		Method: <com.naver.api.security.HmacUtil: javax.crypto.Mac getMac(java.lang.String)>
		SHA-256: c729502dbce67b5e99e0f26d3804d1f9385effbe37d98b1e044139d6468678a2
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.MessageDigest: int digest(byte[],int,int)>($r1, varReplacer2992, $i0)
		Method: <com.picto.defender.CryptoManager: void md5(java.security.MessageDigest,byte[],byte[],byte[],byte[])>
		SHA-256: 1e7a27cb5998c594aae84a7637285b6c203c41756ccc12f436c9b31325d72844
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1098)
		Method: <com.picto.Utils: void trustAllHosts(javax.net.ssl.HttpsURLConnection)>
		SHA-256: 95a8205706e6b44ca96976e0c9341706a3caf1f229d9b0f77a2d2e98577ff697
		Secure: false

Findings in Java Class: com.picto.Utils

	 in Method: void trustAllHosts(javax.net.ssl.HttpsURLConnection)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #95a8205706e6b44ca96976e0c9341706a3caf1f229d9b0f77a2d2e98577ff697)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1098)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, r10, $r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, r10, $r5)


Findings in Java Class: com.naver.api.security.HmacUtil

	 in Method: javax.crypto.Mac getMac(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3201)


Findings in Java Class: com.naver.android.appstore.iap.AppstoreSecurity

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 4
	ConstraintError: 1
=====================================================================