Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 8d9ed73f76b0cc35336304903ab76cb718c59eb2a0e5d6566d27757d000fd32
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.b: java.lang.String a(java.lang.String)>
		SHA-256: 8bd01f1b13cea1ee8aa7b22593d126b95c382be3720f2aa7242a6d10f9579e18
		Secure: true
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r5)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: 51b85c2e92f8e2060c908f8ee508af6780142ca4b7716a081768d372523396a7
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3108)
		Method: <com.mob.tools.utils.Data: byte[] SHA1(byte[])>
		SHA-256: 12d91c949dfa09851fffd1beb1cb0ab15de7376ad9339606b111f6fa2c5d2d32
		Secure: true
	Object:
		Variable: r29
		Type: java.security.SecureRandom
		Statement: specialinvoke r29.<java.security.SecureRandom: void <init>()>()
		Method: <cn.jpush.android.util.s: int a(android.content.Context,org.json.JSONObject,boolean)>
		SHA-256: ff9b1eed2d849b52192baa2468b82f6f5e76b39094a5aabef8dc6734fbc7dffd
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <cn.jpush.android.util.b: java.lang.String a(java.lang.String)>
		SHA-256: 98215ece6f6a60ce0739e1b9a0ef278f9806b9bc5c5215dc8b7f4f137f5edc6e
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: bd6f140a409b2b8eea4c643222d309349b5be56c53e649cd4f35ecf7db68f749
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <cn.jpush.android.util.b: java.lang.String a(byte[])>
		SHA-256: c89c52a35213273fab58ed00b4ede4a7d35bfa3a9666dfaac9c015c5e897e09b
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6610)
		Method: <u.aly.bk: java.lang.String A(android.content.Context)>
		SHA-256: ec76e3a78b390793370bf09f0be65cb10accebc002ef3b020b8c4d2856136ecc
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $i0 = virtualinvoke $r4.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r1, varReplacer2827, $i0, $r0, varReplacer2827)
		Method: <com.mob.tools.utils.Data: byte[] AES128Decode(byte[],byte[])>
		SHA-256: 2b3b071aebb8117cbcf667ba90f8349709577420734622bfa956df5096f46c1c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: ac2912fd2a8cc62f2d028959fdfebed1a18ae39f8a205fd829cc8080606487cd
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mob.tools.utils.Data: byte[] SHA1(byte[])>
		SHA-256: cdff87fc6ee152b4274d6b94084108209269e65da113e6beef5395960d55f5f3
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzbj: byte[] zzu(java.lang.String)>
		SHA-256: cd89e3622a8567e0c71a15cefe4345c552f0957c52d6f993fbbdf350a8266e3e
		Secure: true
	Object:
		Variable: varReplacer2832
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2832)
		Method: <com.mob.tools.utils.Data: byte[] AES128Decode(byte[],byte[])>
		SHA-256: fbb2842513333f92b19c7e1413eb32b2ed2a4d61e707062618d89cd2ed9d7d96
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer3132, varReplacer3133)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(java.lang.String,java.lang.String)>
		SHA-256: 5df4407a5b5dc1b18330b0f26af22efc7a29a518444cf480856069f01f683142
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mob.tools.utils.Data: byte[] rawMD5(java.io.InputStream)>
		SHA-256: bc4eb66b1b721a4a7f151d0e6ea3bd2aee96662bf12a7380623276c8708f84d7
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.aq: java.lang.String b(java.lang.String)>
		SHA-256: e03b2d32bb5049454f325917bf7839b59c4e0e0070acaaf2a7cce2f3446c599
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3136)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(java.lang.String,java.lang.String)>
		SHA-256: 505339a6140d69df8325786f7bcdc884e4511a0ca6ffdab1e873924515368ac
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.s: javax.net.ssl.SSLContext a()>
		SHA-256: 726da6d00779c575fcd988fbdeb9859e1097ce3f50b55ba80cab91bbefcb5fd5
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 83800ab520dfbf96375afce1af57d177a62869f0256e2d4fa8475e3f03ac6dde
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: ffde2c3e415be62ad6bfbfe50546823118db13763d58e44ff45979b39cbfde6c
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r5.<javax.crypto.Cipher: int doFinal(byte[],int)>($r2, $i0)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(java.lang.String,java.lang.String)>
		SHA-256: 8df24129554b6fedc63b16805f88a2dbfe55ed3af1bd3740681b630d8d55eee6
		Secure: false
	Object:
		Variable: varReplacer7056
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7056)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 4038ee0e1d5dde878d7ad49147a5dd3bd43697d702039792292c1ddcc1012e63
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7057)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 1d7e0cccbb616d2f28987ba61712a275206ad4dfd811e82ea2829018ba30df8d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6061)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaH(java.lang.String)>
		SHA-256: d19e96d504f59e8bcaa84cafe3b9a2e0a07f81441a5762e0ede43af18d33bd15
		Secure: true
	Object:
		Variable: r8
		Type: java.security.SecureRandom
		Statement: specialinvoke r8.<java.security.SecureRandom: void <init>()>()
		Method: <cn.jpush.android.util.s: javax.net.ssl.SSLContext a()>
		SHA-256: 5e573cc5212631be3712bbb7d64117b15fe85cc6b60be4fc0d23524b86c9157
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bl: java.lang.String a(java.lang.String)>
		SHA-256: ebe2ed391fd8e53e79692c990bc29ea3b09c62d152152ca8949ece91fe16bf0f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6210)
		Method: <u.aly.bl: java.lang.String a(java.lang.String)>
		SHA-256: 6f0024c5d8830d991fb2ee220fcae9baab850ecd0bc50ed778da53cdf0e0557e
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bl: java.lang.String b(java.lang.String)>
		SHA-256: fb3b29d39b14b8e650956075f11f77786b9f60d009213ae2abfb1ce661e74434
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.analytics.b: java.lang.String c(java.lang.String)>
		SHA-256: 451046663d7da92148992b3ad79eb96b3a481c7a6960098f5841904fac4180e9
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.veryapps.chinacalendar.utils.StringUtil: java.lang.String getMD5Str(java.lang.String)>
		SHA-256: 2f73de9b4ae7269e838edaa0a96a8f187944dd4c60f97e32d187aecf74ea70fb
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <u.aly.bk: java.lang.String A(android.content.Context)>
		SHA-256: 6e433b8098c53d2ccc8788d38b3b5fbddc167f86917462bf2139d0243dc9ede4
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: e08d1cb2a337a72390b00629a9822529204c43915aa5fa11084d68a3f66f2e3a
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <cn.jpush.android.util.b: java.lang.String b(java.lang.String)>
		SHA-256: f4d7c55029da89fb4a614390eefcb44ebfbc25ddf5a4e8739894a432c9e4eaef
		Secure: true
	Object:
		Variable: r18
		Type: java.security.SecureRandom
		Statement: specialinvoke r18.<java.security.SecureRandom: void <init>()>()
		Method: <com.mob.tools.network.NetworkHelper: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>
		SHA-256: 2670ac95b8a338a5643e8b819e1a0adf50aa74adc41602ff45c107d68b23a862
		Secure: true
	Object:
		Variable: $r12
		Type: javax.net.ssl.SSLContext
		Statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2902)
		Method: <com.mob.tools.network.NetworkHelper: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>
		SHA-256: 2e7bf4ed81102e041b0df9a91a491fed2df6505b0b79172f77a6e671301e0001
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2834, varReplacer2835)
		Method: <com.mob.tools.utils.Data: byte[] AES128Decode(byte[],byte[])>
		SHA-256: c74c2266e4c344ffa054c7754cad96238df9b56c7c5bd531d927058841e85632
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2832)
		Method: <com.mob.tools.utils.Data: byte[] AES128Decode(byte[],byte[])>
		SHA-256: fb98780eb52841f3a80af25a4fccdd5bfb5fa64884c190eadd040aec51367bd2
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $i0 = virtualinvoke $r5.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r4, varReplacer3134, $i0, $r2, varReplacer3134)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(java.lang.String,java.lang.String)>
		SHA-256: c1e51c056c93a7eafbd022241acb0de3d9a2242afdaf7bd19c544c4277459732
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.k: byte[] a(java.io.File)>
		SHA-256: 432a600c2d8de042b03291ce9b2032c06ba1fd3b5c962d7da8ef56372a7beb53
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.b: java.lang.String a(byte[])>
		SHA-256: c628812986aa0803ebeb428bf3cb6c4e0ffeec807a375948f2bd267392ca2e50
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7456)
		Method: <com.google.android.gms.internal.zzbg: java.security.MessageDigest zzcL()>
		SHA-256: bbdf38e73e5be6ef5bb8dc64fa9204d59e2b54d91c2bbad5d8e412a8173055e7
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7059)
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: 46fd4775d1e275b97bb56778fc9300567dd8a6c89de357cc07ee39321c172035
		Secure: true
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: d4ee72875b7bf463710251b50b5a7d1fc255565e41a8f450fef64e40d8bf7aea
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.s: int a(android.content.Context,org.json.JSONObject,boolean)>
		SHA-256: 97613f67656a5de1afd5e171d109dcc81c153113626be1e4199b6c0948479ccf
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6629)
		Method: <u.aly.bl: java.lang.String b(java.lang.String)>
		SHA-256: 9df4831199028d2bad58643da26f5de512fe2cbfd292aa050b90575b7970eef5
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: 588587d694ec45e0e1a875a0176b4380a9d5faa5cea08af2231614568eac49d1
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaH(java.lang.String)>
		SHA-256: b99893f35dd36825378e8706865a4357958a98bd12dbd264e8cce2e0999aa454
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4568)
		Method: <com.litesuits.http.impl.apache.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 908ac6134c63bc01552361dd95a899d849949666ce232e17d9550564c8f49fba
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $i0 = virtualinvoke $r5.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r4, varReplacer3134, $i0, $r2, varReplacer3134)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(java.lang.String,java.lang.String)>
		SHA-256: acca1ffb57640d662b3f5fc92504b40162a49f0b7af6cf5f440f22cf9acc09f7
		Secure: false
	Object:
		Variable: varReplacer3136
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3136)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(java.lang.String,java.lang.String)>
		SHA-256: 77aa3531629e39bfd932b841ff7f479255086cf1f491fbb126063ff944032f8a
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.sharesdk.wechat.utils.h: byte[] a(java.lang.String,java.lang.String,int)>
		SHA-256: bc9e0e6da4a3ad401d1bf278e5f7bdc6eba1dbcaa6f0eec9449ad3e1a8f70dac
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2842)
		Method: <com.mob.tools.utils.Data: byte[] rawMD5(java.io.InputStream)>
		SHA-256: 4da895967c85118cbd3afa6a450241c0ae2f5ea794cee48f0ac059b3b2d5a2fb
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyStore
		Statement: $r10 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.u: void <init>()>
		SHA-256: 29c02ae112f7c44d62fcf5db77899628efa67faca410206bfa986e31a8497f06
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r5)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: cf97a861c5e3ae97cdd2e650024174ec10a08d9c7f6897fb894fc99150b49b1e
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: 3f5b7ea2761505c4243638277dab672f1824c5a3ce2b162aeb17ed438b0345a2
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.b: java.lang.String b(java.lang.String)>
		SHA-256: ff71dc46c695623c670c8240acd12d816d6ab87408538525e2231bf86013b15f
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5522)
		Method: <com.veryapps.chinacalendar.utils.StringUtil: java.lang.String getMD5Str(java.lang.String)>
		SHA-256: 95fa40ddbe5af71fd3f11a93999c5dfac34d4f513f8aab3707fae20703f73c01
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.aq: java.lang.String b(java.lang.String)>
		SHA-256: d0b9e5f889dcde3f1dbc99f55cb52ab33423002c1ae89ca2252e693adb6b8ac2
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5363)
		Method: <cn.sharesdk.wechat.utils.h: byte[] a(java.lang.String,java.lang.String,int)>
		SHA-256: 8fca34e592336d5acd3500b367c59e240fe1eb9bb86b03b2f7c9f1c45c732f2e
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.litesuits.http.impl.apache.MySSLSocketFactory: java.security.KeyStore getKeystore()>
		SHA-256: d011df71b400b4926b84dec0cad6ffb90a5bd3d26c43a5974bec9e614ef5edf5
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r4.<javax.crypto.Cipher: int doFinal(byte[],int)>($r0, $i0)
		Method: <com.mob.tools.utils.Data: byte[] AES128Decode(byte[],byte[])>
		SHA-256: 649659a474b1ec50d7daf535f045a66c1098a9948f7e60e4913af30968642ced
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7462)
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: fe37aebb1e73af5ceae551b91a06bb27ee95aa675b93452db6d38e80095d6e38
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: 8407a152a750198a9cecc8c173b46fb5748136d260fe6f5fbe4a174451640e66
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 2dd4888322a471b8f76ac18dc66756736304ba06184ce0a981df36dbcde06d84
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7252)
		Method: <com.umeng.analytics.b: java.lang.String c(java.lang.String)>
		SHA-256: bbd371079d85debcb2d264fd75ad67344a171ecb81b8f72320fb999e9d89c449
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.litesuits.http.utils.MD5Util: byte[] md5(byte[])>
		SHA-256: 514b008ea02c271fec8d20f4353aacc04f03c597a00578483b1da5841b76335
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $i0 = virtualinvoke $r4.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r1, varReplacer2827, $i0, $r0, varReplacer2827)
		Method: <com.mob.tools.utils.Data: byte[] AES128Decode(byte[],byte[])>
		SHA-256: 9a795feeb67fc88477a7ed46fb603a0374a1fe931668d54ce05a9bcfa38f402f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7056)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 932f1451b0983378118b68a1a63cc595aaa665839e6955e5e68599ec76710153
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5261)
		Method: <com.litesuits.http.utils.MD5Util: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: e85a4c97fd0eab791051d5f9fa5017b34026c14eb35714708b3daf5e37a03bb
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <cn.jpush.android.util.k: byte[] a(java.io.File)>
		SHA-256: d4a88e2082e0816474d26b7fdde67dbd6a0f6d182636878fc7f363f65d038f1e
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: c8b8edeb084b423f81d7a0d57970247bbc398d800e6083a5bf891e70d459c550
		Secure: false

Findings in Java Class: cn.jpush.android.util.u

	 in Method: void <init>()
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #29c02ae112f7c44d62fcf5db77899628efa67faca410206bfa986e31a8497f06)
			Operation on object of type java.security.KeyStore object not completed. Expected call to store
			at statement: virtualinvoke $r11.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r10)


Findings in Java Class: com.mob.tools.utils.Data

	 in Method: byte[] rawMD5(java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #4da895967c85118cbd3afa6a450241c0ae2f5ea794cee48f0ac059b3b2d5a2fb)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


	 in Method: byte[] AES128Decode(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2829, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2832)


	 in Method: byte[] AES128Encode(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3137, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3136)


Findings in Java Class: cn.jpush.android.util.k

	 in Method: byte[] a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #d4a88e2082e0816474d26b7fdde67dbd6a0f6d182636878fc7f363f65d038f1e)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.umeng.analytics.b

	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bbd371079d85debcb2d264fd75ad67344a171ecb81b8f72320fb999e9d89c449)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7252)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer7055, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer7055, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7056)


Findings in Java Class: com.google.android.gms.internal.zzbh

	 in Method: java.lang.String zzv(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #bbdf38e73e5be6ef5bb8dc64fa9204d59e2b54d91c2bbad5d8e412a8173055e7)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r5.<com.google.android.gms.internal.zzbg: byte[] zzu(java.lang.String)>($r1)


	 in Method: java.lang.String zzw(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #bbdf38e73e5be6ef5bb8dc64fa9204d59e2b54d91c2bbad5d8e412a8173055e7)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = virtualinvoke $r10.<com.google.android.gms.internal.zzbg: byte[] zzu(java.lang.String)>($r1)


Findings in Java Class: com.mob.tools.network.NetworkHelper

	 in Method: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2901, r19, r18)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2901, r19, r18)


Findings in Java Class: cn.jpush.android.util.s

	 in Method: int a(android.content.Context,org.json.JSONObject,boolean)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1764, varReplacer1764, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1764, varReplacer1764, $r8)


	 in Method: javax.net.ssl.SSLContext a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1794, r9, $r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1794, r9, $r5)


Findings in Java Class: cn.jpush.android.util.i

	 in Method: java.lang.String o(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2251, $r4, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2251, $r4, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2251, $r4, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r5)


Findings in Java Class: com.litesuits.http.impl.apache.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4569, r5, varReplacer4569)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4569, r5, varReplacer4569)


Findings in Java Class: cn.jpush.android.util.a

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2233, $r5, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2233, $r5, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 72

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 25
	IncompleteOperationError: 3
	ConstraintError: 1
	TypestateError: 2
=====================================================================