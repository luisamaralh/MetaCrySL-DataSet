Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer8702)
		Method: <com.umeng.a.c: byte[] a(byte[],byte[])>
		SHA-256: a79c0ca3e06661399424709cd4ab29072095f9af31b1080ebd8a522d6fe150d8
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.umeng.a.c: byte[] a(byte[],byte[])>
		SHA-256: 8f2e7913c00617921e7d852b9a31479fa9f5aae33209b7f9e78a25b1061dfac
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.umeng.a.c: byte[] b(byte[],byte[])>
		SHA-256: a98f3cb4e9ce376bf4ae8acd363a0eec9f4d3a2fa189afdc944c8388d6448e79
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.ironsource.mediationsdk.utils.IronSourceAES: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: c7c41a52ac3b7a8a29d9a686ab6784a8c805dd600b7be49496ca4bdeb925b5c1
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.a.c: java.lang.String c(java.lang.String)>
		SHA-256: 6be976a31ffd98c2e17634264fd42a68f3560a90521ce98667a589ee5ef20c3a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.umeng.a.c: byte[] a(byte[],byte[])>
		SHA-256: 940ded33bd1689fba278937d2904828cfc823a46f59b5b9c30176c44bc76b7c3
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2663)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: c0499e0ed95a67028e32111d8da0a36f859f55ea53ce7e749d09df1c94ceb354
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: d0f6f4706546c156ee289b202709825e5df53f7e4f36e0982c154eb3536bcb6c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4749)
		Method: <k.g.kf: java.lang.String a(java.lang.String)>
		SHA-256: 65915f1622aaa77ccd4ac5f2e2da67283f7cde1f123cf72f8478361b79bdd190
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer11014)
		Method: <com.umeng.analytics.d.n: void <init>(java.security.KeyStore)>
		SHA-256: 758543fc383ad63fa554cae456db73eec82756cd0cd20e3dad7dbbfd0fde0d77
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.a.c: byte[] b(byte[])>
		SHA-256: 8481fe3b5e6de86da061cf99a70d8814be7085ee5a243c155a2413aaa4fc3dba
		Secure: true
	Object:
		Variable: varReplacer2663
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2663)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 2b41aef29298b00e5ccb78f9fecee0b9442ed0b5b3dadc8fde1f3cd3f37b2708
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.a.f: java.lang.String a(java.lang.String)>
		SHA-256: 7a9b7cdea5a0cd9e3911e43cc50045c25bbaa155f51ba941df5fa12a50b7a404
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9398)
		Method: <com.umeng.a.c: byte[] b(byte[])>
		SHA-256: 957762e87148f5c497f15ac9e389c6a711e8a201e2261f3f7eb550424e8e2b67
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8156)
		Method: <com.ironsource.mediationsdk.utils.IronSourceAES: java.lang.String decode(java.lang.String,java.lang.String)>
		SHA-256: 32577ac05a912225443afac999d9295aa87a327249af67cbf3fcf3837f1bdc1f
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9601)
		Method: <com.umeng.a.e: java.lang.String u(android.content.Context)>
		SHA-256: 5c112b6ced1ed641d5feeb045a6d219fe7724487c8f02d208afcb17589fb20c3
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.ironsource.mediationsdk.utils.IronSourceAES: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: 2faa125ead3cc27545f3b1b5cec5a9bcf83e2f0c7f9a2a78ad6945e2ec849602
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8701)
		Method: <com.umeng.a.c: byte[] a(byte[],byte[])>
		SHA-256: 93851f8a7e439a67876c61425f9c6298724ea59cbdb79bb098b5491898a0078e
		Secure: false
	Object:
		Variable: varReplacer8703
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer8703)
		Method: <com.umeng.a.c: byte[] b(byte[],byte[])>
		SHA-256: 3c52da5127a72a7a36f7bf9aafb55a04311d43bf846878d52feac22fd0982e9
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: 2125805d03a1e43489bdecc5db182c9da3fb7141e4e8c4afb45e18805c8edeaa
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.ironsource.mediationsdk.utils.IronSourceAES: java.lang.String decode(java.lang.String,java.lang.String)>
		SHA-256: 5f365ef0157d9c99e6ee30e59047ee863d3a64c76221295493ad8e19123cfcd8
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.ironsource.mediationsdk.utils.IronSourceAES: java.lang.String decode(java.lang.String,java.lang.String)>
		SHA-256: 5fa20f8d73405a1d493397f1d1c95451004ee4d84f514f696d3b3c0fe664f69b
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2665)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 56b1f7a8c5fe9097ccf0a4e10fc4f29645087e36a5a3efe6897a97a8b02af4e9
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <k.g.kf: java.lang.String a(java.lang.String)>
		SHA-256: 356931e4ac23edf69eb31efc40cd7b24cc982dcc747450a52b31a7f9232be091
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8704)
		Method: <com.umeng.a.c: byte[] b(byte[],byte[])>
		SHA-256: 4eeefad20e90613e2d55a3c34e76713066d557d58b4f33936cc98ffb7c80e48b
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.ironsource.mediationsdk.utils.IronSourceAES: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: 4cad6aa2125a20214e54942cb8604656c665ad9265266a81c00194ee270e705a
		Secure: false
	Object:
		Variable: varReplacer8203
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer8203)
		Method: <com.ironsource.mediationsdk.utils.IronSourceAES: javax.crypto.spec.SecretKeySpec getKey(java.lang.String)>
		SHA-256: 9e79c2f935d5b56e789e33eca727ef0d217d2f45dbe63cb270e349443b57c506
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8207)
		Method: <com.ironsource.mediationsdk.utils.IronSourceAES: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: 96fe41afd0e5ac0996f33f5ae4842573c824c724e50d5d9b79e226f6532ddcd4
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8794)
		Method: <com.umeng.a.f: java.lang.String a(java.lang.String)>
		SHA-256: 445cdaefc4fd8aeea40e0aa0c37f6645bcc1d139aaa45ba92aec943046ba0304
		Secure: true
	Object:
		Variable: varReplacer8702
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer8702)
		Method: <com.umeng.a.c: byte[] a(byte[],byte[])>
		SHA-256: 4efb58000fac9b760541ae6583a9b166168c3c4f71bbbb1cefd6ba0f8f14edc6
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer678)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: 14f50e924bf4a7db4ee8ba6dc6aedb6a4383e2c4b645bb8d69f082b0d2cd92bb
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer8703)
		Method: <com.umeng.a.c: byte[] b(byte[],byte[])>
		SHA-256: 64e313aa53ab3cc8170195f4e0a4ee034dacbaabc855bd8efcac8267bf5947dc
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer8203)
		Method: <com.ironsource.mediationsdk.utils.IronSourceAES: javax.crypto.spec.SecretKeySpec getKey(java.lang.String)>
		SHA-256: 3e7adb8d22039f8b56ab6ba6bbd6c3b26ab55e68afbdba1bd38ea28f4f8168db
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.umeng.analytics.d.i: void a()>
		SHA-256: 8c6a25ddfa386a843f25fcd886f39edebc086972063b2e242baf23df8118ee06
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.a.f: java.lang.String b(java.lang.String)>
		SHA-256: 402b184e9e59555d389ca3f32bd9dba6a1f6d2cda790902ccde2b496ab4dfeb7
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9397)
		Method: <com.umeng.a.f: java.lang.String b(java.lang.String)>
		SHA-256: 7c908c20b60d597a569ec2317471c6e2a6c05106345001b85c7354fec225db07
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.umeng.a.c: byte[] b(byte[],byte[])>
		SHA-256: 78abf7181343d4f65b962ee5efd384e61fa3497c2f4b177059b694ad9af7c9c2
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 150bd5b7f4fa98bd7d19b4334335a3f364b812a82990b17162c6a447c071634b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9091)
		Method: <com.umeng.a.c: java.lang.String c(java.lang.String)>
		SHA-256: 9c4298320f9c1ef16ad3620c3f5e30e2620572895677df57fb17a8e0defc1cb8
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.umeng.a.e: java.lang.String u(android.content.Context)>
		SHA-256: fd4d205c49272707ccf46f8a1e0147a50b81958647313af406a28f7e69dd61f6
		Secure: true

Findings in Java Class: com.umeng.a.c

	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9c4298320f9c1ef16ad3620c3f5e30e2620572895677df57fb17a8e0defc1cb8)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9091)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8700, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer8702)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8700, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8705, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer8703)


Findings in Java Class: com.ironsource.mediationsdk.utils.IronSourceAES

	 in Method: java.lang.String decode(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8163, $r7, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


	 in Method: java.lang.String encode(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8211, $r5, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8211, $r5, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: javax.crypto.spec.SecretKeySpec getKey(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer8203)


Findings in Java Class: com.duapps.ad.base.a

	 in Method: byte[] a(java.lang.String,java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2664, $r3, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2663)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: com.umeng.analytics.d.n

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer11012, r7, varReplacer11012)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer11012, r7, varReplacer11012)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 40

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 18
	ConstraintError: 1
=====================================================================