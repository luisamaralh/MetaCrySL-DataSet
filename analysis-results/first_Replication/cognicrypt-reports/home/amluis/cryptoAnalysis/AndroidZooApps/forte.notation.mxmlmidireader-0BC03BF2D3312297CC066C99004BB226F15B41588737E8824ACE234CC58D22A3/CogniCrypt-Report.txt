Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.dropbox.client2.android.AuthActivity$1: java.security.SecureRandom getSecureRandom()>
		SHA-256: b50f08338cfa86ffc376b0e2b8a60546ca98ef449ea1fa0d26ebe66f55d0ea65
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.dropbox.client2.android.AuthActivity: java.lang.String createStateNonce()>
		SHA-256: eb193a471c04f5d27a79a314b121b3925e4d3d3b10cfe53c2d5da8d82d60449c
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2467)
		Method: <utilities.PaoEncriptor: byte[] decryptBytes(byte[],boolean)>
		SHA-256: 57ef76b3b73b20cb435fadaa5253cf738320b72672f1baee2eae797fbcbf5552
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.dropbox.client2.android.AuthActivity: java.security.SecureRandom getSecureRandom()>
		SHA-256: 2fcacb2d62fc02fb574046d2496c74590923845392b0188123ba772a1e3f5ce9
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <utilities.PaoEncriptor: byte[] decryptBytes(byte[],boolean)>
		SHA-256: 32723d36f6b016d4da21db3867adb179d365c2eb67dad975f832e052f7a81ca9
		Secure: false
	Object:
		Variable: varReplacer2469
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r5, varReplacer2468, $i0, varReplacer2469)
		Method: <utilities.PaoEncriptor: javax.crypto.SecretKey getPath2(boolean)>
		SHA-256: 2c1e8e9a33d443de8aaa36881f43e3344ff1e329299bdfccf6e774d7804efd5b
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <utilities.PaoEncriptor: byte[] getSumary(java.lang.String)>
		SHA-256: ed893df1e2c88ad3d44dbfba6e1e58da6169378a710e93592ef56a0faca0bd47
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.dropbox.client2.android.AuthActivity: java.lang.String getConsumerSig()>
		SHA-256: 723b1a9ce3cf2b7a9e3170146460bc093113a3784db01f6cd139b821429f6a83
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1454)
		Method: <com.dropbox.client2.android.AuthActivity: java.lang.String getConsumerSig()>
		SHA-256: b9752d6beb63127242a138b48b9ecf2f09694d65bf41a06be1f615b851cf2a0f
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2476)
		Method: <utilities.PaoEncriptor: byte[] getSumary(java.lang.String)>
		SHA-256: 7d6605e254484f0f8f248949315b66c1241f8ad1b9982324d22ba5bb302c1c3c
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r5, varReplacer2468, $i0, varReplacer2469)
		Method: <utilities.PaoEncriptor: javax.crypto.SecretKey getPath2(boolean)>
		SHA-256: e18ca4e542fe97274d259082746876e8804da2ba59281ecd5c2a763cccb6c032
		Secure: false

Findings in Java Class: utilities.PaoEncriptor

	 in Method: byte[] decryptBytes(byte[],boolean)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #57ef76b3b73b20cb435fadaa5253cf738320b72672f1baee2eae797fbcbf5552)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2467)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2463, $r3)


	 in Method: javax.crypto.SecretKey getPath2(boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r5, varReplacer2468, $i0, varReplacer2469)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 11

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	RequiredPredicateError: 2
=====================================================================