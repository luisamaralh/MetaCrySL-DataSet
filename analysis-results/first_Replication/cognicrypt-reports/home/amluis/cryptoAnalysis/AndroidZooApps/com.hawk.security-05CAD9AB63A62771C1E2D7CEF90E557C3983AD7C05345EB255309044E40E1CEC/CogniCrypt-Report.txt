Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4014)
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: void b(android.content.Context)>
		SHA-256: b0c2e8c5421e781af3a8d36a79d1202852fc6ccc232096551b5d22eb671278cb
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12035)
		Method: <com.tcl.security.virusengine.e.c: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: c19b94268bf992347784de201f6cee41c212847af321708f0f2996e531eccee1
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12012)
		Method: <com.tcl.security.utils.d: java.lang.String a(java.lang.String)>
		SHA-256: 6ae6c2a4b212f8d73edbe3663a2afc2963d51cda859b6afc1224a0b143f1a842
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tcl.security.d.l: java.lang.String a(java.io.InputStream,java.lang.String,boolean)>
		SHA-256: ce625f85b73310b128d3cacb0190c94fd664f806216dc7889d93011394798ec7
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.intel.security.vsm.sdk.internal.ac: int[] a()>
		SHA-256: 7419207d01a9aceba94f7f712a85550e4222470fd321a50aac3913bcefaaadb2
		Secure: true
	Object:
		Variable: r6
		Type: java.security.SecureRandom
		Statement: specialinvoke r6.<java.security.SecureRandom: void <init>()>()
		Method: <com.tcl.applock.module.setting.activity.a.a: void a()>
		SHA-256: d37d3acea74cc3037699fbe8d63677ee3c12a81ea2fcf8482a70f00e58fe121a
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2767)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: 9a278f305f4c46c6064ff6c5199c149988a868fa0fce8abfb185504c3ddb15b
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7626)
		Method: <com.tcl.security.d.c: com.tcl.security.d.c$a a(android.content.Context,java.lang.String)>
		SHA-256: e133a21e23404e68f6fddede318d0a592b510bbea36ff0ab4410c4ff1a747ce2
		Secure: true
	Object:
		Variable: r18
		Type: java.security.SecureRandom
		Statement: specialinvoke r18.<java.security.SecureRandom: void <init>()>()
		Method: <com.tcl.security.d.b: void m()>
		SHA-256: 76c60bc2370e144a83dbded7e68cd043b31c086120f0e50891fa41e274e7349c
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.intel.security.vsm.sdk.internal.ac: int[] a()>
		SHA-256: e0d4d980dc58ff92b1449131eb9d61e68fd05581868071d85a2ddf75668387c
		Secure: true
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2388)
		Method: <com.tcl.security.d.b: void m()>
		SHA-256: 228bb53f361f3699e23ff28571064b567304450ca179ddcf646aec7a7c606bbe
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <com.tcl.security.d.l: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 909836b55b17ca5e3de1dec96e69167ea46c29e160f8f76f281c718083694ac1
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tcl.security.utils.d: java.lang.String a(java.lang.String)>
		SHA-256: 1f141351ead3174951128ebad7cdfafdaddaa3673cf12872ec662858de8eacc1
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12039)
		Method: <com.tcl.security.virusengine.e.c: java.lang.String a(android.content.Context,java.lang.String)>
		SHA-256: c9e6216b28ae47017ea562c4b593260d79fee8838b3724f22e47680160d6beaf
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tcl.security.virusengine.e.c: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 1f31181288dcc94b76a37db6a803183f23f027fe92e81955c765afc4e55efbb4
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tcl.security.d.l: java.lang.String a(byte[],java.lang.String)>
		SHA-256: b86885cdc0e40855831cc39a16e44112f30af935ac283d7948ca012dada0e705
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2795)
		Method: <com.tcl.security.d.h: void <init>(java.security.KeyStore)>
		SHA-256: 310dcf83e30f5be1dd36e0cf37d38dc3803b0b9d71b9537b241b1975fe036665
		Secure: false
	Object:
		Variable: varReplacer8620
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8620)
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: javax.crypto.SecretKey g()>
		SHA-256: 77e3349a3ee275345501cfcf417d1e35d31786b6d44ce680fc8b86c8cc431729
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <com.tcl.applock.utils.o: byte[] a(byte[],java.security.PublicKey)>
		SHA-256: 9b998f2c475f2649e82c0f266a64fa3b35b283ec2806674da72cf484dc93f510
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: javax.crypto.SecretKey g()>
		SHA-256: e9c003c00db1956aa85ba2e154cfc5bb86a1557866316db5deda2ee211f5f9c6
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8620)
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: javax.crypto.SecretKey g()>
		SHA-256: 54b5bf2757dae77f0636aadad62ae519c185fd63958ea2d1c80af42f985522f2
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: javax.crypto.SecretKey g()>
		SHA-256: b1346c7cabbe065566ea3a40a9e0c034ff2bc49e4be3b3b07efccc9bbdd9ac5a
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.a.c: java.lang.String b(java.lang.String)>
		SHA-256: 34ba3c9bb7fa93036505409e6f624148d580a4ef39cd6b74abdee3d1e3232629
		Secure: true
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2386)
		Method: <com.tcl.security.d.b: void m()>
		SHA-256: 5e3383d1677b31d208a6c42e00c5169639d8718ddb5543e89b304dcfb7b727c1
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tcl.applock.utils.o: byte[] a(byte[],java.security.PublicKey)>
		SHA-256: 3a8d0430ef12b42d7541a2e96ee97a209c9ac2cdcfacc835013fceae78da6fa6
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4)
		Method: <com.tcl.security.d.b: java.security.KeyStore j()>
		SHA-256: 5d509c4a113f28f7c5b9e82f7e4733bf58d6d851a57c3a6b0da31d3776bc5a52
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11233)
		Method: <com.facebook.a.c: java.lang.String b(java.lang.String)>
		SHA-256: fb169b792c7d109faa35a757047648e755cfddff08473bc82251c2f319edef04
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8683)
		Method: <com.tcl.applock.module.setting.activity.a.a: void a()>
		SHA-256: aa10500359927634a5a1febd88c1bcf11a8904e5736a3a6d6960131716aa6c32
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.KeyGenerator
		Statement: $r7 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer4015, varReplacer4016)
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: void b(android.content.Context)>
		SHA-256: 26b21bf4d663144bbed5e09176cb2ccb9f0d8f383918efc015a93567fd48b813
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7695)
		Method: <com.tcl.security.d.l: java.security.MessageDigest b(java.io.InputStream,java.lang.String,boolean)>
		SHA-256: bbfc785ba7d488235b57dd773f2300ef79760fa9a1ae14895b2301abfba9d4fb
		Secure: false
	Object:
		Variable: r18
		Type: java.security.SecureRandom
		Statement: specialinvoke r18.<java.security.SecureRandom: void <init>()>()
		Method: <com.tcl.security.d.b: void m()>
		SHA-256: 76c60bc2370e144a83dbded7e68cd043b31c086120f0e50891fa41e274e7349c
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer4017)
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: void b(android.content.Context)>
		SHA-256: 21f072131a75bb922c06e4e2c3ab515e4f8a707e16aabc8199ae33c961c3d25f
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tcl.security.d.c: com.tcl.security.d.c$a a(android.content.Context,java.lang.String)>
		SHA-256: feba822e34ffde93c220acdcc7c9c9c499dd6b8f86c2e4db851379defff145b6
		Secure: true

Findings in Java Class: com.tcl.security.d.h

	 in Method: void <init>(java.security.KeyStore)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #310dcf83e30f5be1dd36e0cf37d38dc3803b0b9d71b9537b241b1975fe036665)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2795)


Findings in Java Class: com.tcl.security.d.b

	 in Method: void m()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #310dcf83e30f5be1dd36e0cf37d38dc3803b0b9d71b9537b241b1975fe036665)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r17.<com.tcl.security.d.h: void <init>(java.security.KeyStore)>(varReplacer2383)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2389, r22, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2389, r22, $r10)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #310dcf83e30f5be1dd36e0cf37d38dc3803b0b9d71b9537b241b1975fe036665)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r17.<com.tcl.security.d.h: void <init>(java.security.KeyStore)>($r7)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2384, r22, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2384, r22, $r10)


Findings in Java Class: com.tcl.applockpubliclibrary.library.module.fingerprint.b

	 in Method: void b(android.content.Context)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #21f072131a75bb922c06e4e2c3ab515e4f8a707e16aabc8199ae33c961c3d25f)
			First parameter (with value "AndroidKeyStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer4017)


	 in Method: javax.crypto.SecretKey g()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8620)


Findings in Java Class: com.tcl.security.d.l

	 in Method: java.lang.String a(byte[],java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #909836b55b17ca5e3de1dec96e69167ea46c29e160f8f76f281c718083694ac1)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


	 in Method: java.lang.String a(java.io.InputStream,java.lang.String,boolean)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #bbfc785ba7d488235b57dd773f2300ef79760fa9a1ae14895b2301abfba9d4fb)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = staticinvoke <com.tcl.security.d.l: java.security.MessageDigest b(java.io.InputStream,java.lang.String,boolean)>($r0, varReplacer7678, varReplacer7679)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #bbfc785ba7d488235b57dd773f2300ef79760fa9a1ae14895b2301abfba9d4fb)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.tcl.security.utils.d

	 in Method: java.lang.String a(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #6ae6c2a4b212f8d73edbe3663a2afc2963d51cda859b6afc1224a0b143f1a842)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.tcl.security.virusengine.e.c

	 in Method: java.lang.String a(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c9e6216b28ae47017ea562c4b593260d79fee8838b3724f22e47680160d6beaf)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, java.security.MessageDigest: void update(byte[],int,int), java.security.MessageDigest: void update(java.nio.ByteBuffer), java.security.MessageDigest: void update(byte[]), java.security.MessageDigest: void update(byte)
			at statement: virtualinvoke $r5.<java.security.MessageDigest: void update(byte[])>($r8)


Findings in Java Class: com.tcl.applock.utils.o

	 in Method: byte[] a(byte[],java.security.PublicKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8702, $r1)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2765, r7, varReplacer2765)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2765, r7, varReplacer2765)


Findings in Java Class: com.tcl.applock.module.setting.activity.a.a

	 in Method: void a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8684, r7, $r0)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8684, r7, $r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 33

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 3
	RequiredPredicateError: 10
	IncompleteOperationError: 4
	TypestateError: 2
=====================================================================